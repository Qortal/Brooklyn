Release 0.24.0:
---------------------
Hilights:
      * New and improved shot module with editor and cropper
      * Reduced number of setuid tools (merged many into single system tool)
      * External monitor backlight and brightness controls via (lib)ddctil
      * Improved resolution of EFM thumbnails to 256x256 by default
      * New and improved crash handling guru meditation
      * Restarts are now seamless with fade in and out and zero glitches
      * Wallpaper import generates multiple resolutions for better efficiency
      * Regularly malloc_trim if available to keep mem down
      * All restarts are now handled by enlightenment_start, not e itself
      * Enforce pointer lock to screen in X to stop pointer out-of-bounds
      * Pager plain is gone - use the regular "miniature preview" pager
      * Music control auto-runs your selected media player if not there
      * Handle exception for steam games to find the right desktop file
      * Polkit auth agent support as new core module - no extra daemons
      * Drop comp fast effects - Should be edje transition factor + theme tags
      * Easier config of specific desktop wallpaper straight from pager
      * Startup should be smoother with IO prefetch thread
      * New special blanking timeout for when locked that can be shorter
      * Bluez4 gone now as Bluez5 is done and working fine
      * Down to zero outstanding coverity issues
      * The usual batches of bug fixes and minor improvements

Release 0.23.0:
---------------------
Hilights:
      * New padded screenshot option
      * Meson build now is the build system
      * Music Control now supports rage mpris dbus protocol
      * Add Bluez5 support with totally new and redone module and gadget
      * Add dpms option to turn it off or on
      * Alt-tab window switcher allows moving of windows while alt-tabbing
      * Lots of bug fixes, compile warning fixes etc.
      * Massive improvements to Wayland support

Release 0.22.0:
---------------------
Highlights:
      * Greatly improved Wayland support
      * Improvements to new gadget infrastructure
      * Added a sudo/ssh askpass utility gui
      * meson build system
      * tiling policy improvements
      * integrated per-window volume controls

Al 'netstar' Poole (7):
      Enlightenment - BSD - Cleanup sysctl code for batteries.
      Enlightenment - BSD - Fix typos in battery sysctl float compares.
      Sysinfo Gadgets: Add sysctl/bsd support to the remaining sysinfo gadgets.
      Batman: Add multi-battery support for bsd based distros.
      Sysinfo: Make memusage and cpumonitor work better on BSD.
      Sysinfo: Fix interger overflow on BSD.
      Modules: Fix compilation and remove warnings for BSD

Al Poole (21):
      fwin: prevent segv when the vaarg abi messup with unused parameter.
      OpenBSD non-PAM lokker authentication.
      efm - fix popup if file is a fifo
      Add temperature support for DragonFly BSD.
      bsd patch from netstar fixing threaded tempget
      Enlightenment: Factor all sysctl battery code for bsd into e_mod_sysctl.c
      Fixes issues w/battery and batman living together
      modules: temperature: Fix spelling for temperature module.
      Fix macro namings in relation to endianness.
      Fix compiler type warnings (snprintf)
      E keyboard settings - use the same icon as the keyboard settings dialog
      Add user to AUTHORS.
      E -> Enlightenment_thumb -> Media -> Thumbnail Creation.
      sysinfo: Fix BSD build.
      sysinfo: fix single-core OpenBSD results.
      FreeBSD: fix broken build.
      Efm: file properties, fix widget sizing issue.
      battery: fix typo.
      filepreview: add support for album artwork in preview when applicable.
      filepreview: show mime type icon when not video and no artwork.
      filepreview: unbreak netstar's changes.

Al netstar Poole (1):
      Make sysinfo gadgets work with BSD

Alexander Pyhalov (1):
      actually check if PIE is supported for SUID

Amitesh Singh (1):
      e widget entry: fix the compilation warning

Andreas Metzler (1):
      10_typo_restore_LDFLAGS.diff: Fix typo in configure.ac (upstream), causing empty LDFLAGS.

Andy Williams (6):
      Fix compiling with WL off
      scale: Allow user to choose scale not multiplier
      luncher: update aspect ratio calculations
      luncher: Smoothing animations
      luncher: Fix some wobble
      Add Change Wallpaper item in Desktop menu.

Bertrand Jacquin (2):
      po: Bump copyright extension
      po: Bump copyright extension

Carsten Haitzler (202):
      e ibar/ibox fix starrting/started signal emittion
      e temp module - kill tempget process not terminate to ensure death
      e - fix dnd problems coming from getting top object in comp canvas
      e ibar/ibox port to elm box - fix assumption on resize
      e ibar - fix devilhorns fix to use the right widght and hight for separator
      e - fix major memory bloat when in gl mode - dont create shm segments
      e comp - set alpha after setting native surface to avoid random crash
      Revert "Fix getting top object in comp canvas"
      e sudo gui support - add askpass util for sudo askpass support
      e askpass - also set SSH_ASKPASS like with sudo
      askpass env var - dont use 32byte buffer for path but use stringshare
      ok - make pwople who \have not stared at c macros as long as i have happy
      e ipc - fix cleanup of ipc socket on shutdown
      update e po files
      protect against non-nul terminated string from mmap in filepreview
      e exec - fix exec of enlightenment_open to use actual e prefix
      po - upate
      explicitly use eina list types passing into EINA_LIST_FREE()
      e fm - fix popup to not crash by referring to possibly deleted data
      cpufreq - move cpuinfo polling into thread to not block mainloop ever
      wizard - do not set scale to 1.2 forcibly. use dpi as the def prof says
      e_util_defer_object_del - ensure order of deferred deletions are right
      e tempget module - mode to using threads instead of tempget binary
      temperature module - more non-eeze system fixes
      temp - udev pol - do in mainloop and suffer as appropriate
      e cpufreq - dont emit message for min/max/cur freq if they didnt change
      temp module - avoid a bit of cpu sendingh edje message if temp same
      client handling - add support for window stacks needed for views/manager
      e config - don't keep adding lunchers until you burst. only if not found
      e module - remove duplicate modules at load all time from config
      tasks - add stack "hiding" support and only show top stack item
      stacks - fix crash for pointer warp when client is null
      e wl - fix build break with wl.
      e window menu now skips stack windows except top one
      e winlist/at tab - understand stacks and filter accordingly
      tasks + stacks - use base icon not top one to be simpler to implement
      e winlist/alt tab - use bottom/base win for icon but active for title
      ibar - support window stacks
      tasks - fix fresh segv added in stack support
      ibar - protect against getting invalid icon ptr on obj deletion
      tasks - calculate min width properly given a known height of a gadget
      ibar - fix segv on prop change after adding stack support
      efm - warning - change invalid #if toe #ifdef as this is right
      e - fix float warnings cmp where they actually may cause issues
      temp module - fix #if to be #if defined as it should be
      xkb module - fix possible use of uninitialized var
      efm - fix ifs to be ifdef as they should be
      e bindings - fix warnings about possible use of undefined var
      e comp object - fix shadow var warning (valid) for ec
      e comp object - fix valid warning of shadowed var (ambiguous)
      warnings - disable y2k and format non literal and float comparison
      e sys - remove system action dialogs as comp actually does this
      appmenu - make appmenu work with click+release and not hide on focus out
      desklock - allow for fadein/out effects in theme for locking/unlocking
      e icon header - clean up formatting
      e icon - use new skip header async preload to make icon loads async
      ibar - fix seg with ibar icon task menus are up while desktop files change
      e - BLOODY BUILD AGAIN - DAMN FLOAT WARNINGS...
      desklock - make blocker transparent again - a theme issue not code
      e_icon - handle load failure and dont display icon object
      e_icon - remove icon cache code - its disabled anyway with ifdefs
      e - wl mode - stop consuming 100 percent cpu
      e window stakcs - fix bugs with stacks by doing stack stuff in idle eval
      e widget bgpreview - stop using livethumb as it cuases performance issues
      Revert "e widget bgpreview - stop using livethumb as it cuases performance issues"
      e widget bgpreview - use e thumb to get quality back and speed too
      e_thumb header - remove tabs
      e thumb - support signal emits and desk pan msgs for thumbs
      e dialog - fix unreszable dialogs to not be 1x1
      e sys - make timeout for sys loging 3 instead of 15 seconds
      enlightenment_sys - eina_init BEFORE switching uid - safer
      e - wayland - fix double-resize if e wants a different initial size
      e ervything md5 code - fix warnings about alignment
      e fileman config - fix definite alignment bug with cast char to int ptr
      e theme conf config - fix casting char fileds to int ptrs
      e ptr cast via void fix to reduce warnings
      efm ipc - fix unaligned int read on ipc decode
      e comp x - fix property fetch to use int ptr from the start
      e xsettings - fix warnings about unaligned ptr access
      e comp - wl - add void cast to reduce warnings
      e thumb - silence alignment warning - valid code
      e notification - silence alignment warning
      efm - fix warnings for progress time display
      e desklock logging - fix types for critical error logs
      evry module - fix warning about comparing signed to unsigned
      e mixer pulse backened -f ix warning about use of uninit var
      e comp object - fix warning where a void cast is as goos as the old one
      e comp - fix stupid cast to from eina rect* to char* to eina rect* again
      e comp - quiet some warnings for casts that are ok
      tiling module - fix some warnings with casts and alignment
      efx - fix unaligned ptr fill that is actually a bug
      efm - fix nuisance warning about enlightenment
      e thumb - fix alignment warning nuisance
      e client mixer - stop messing with mute + volume state just for display
      e mixer module - run pulseaudio if connect fails
      e client volume - use the overall state of all sinks for display
      fix crash in syscon when you press pr 2x in a row quickly to shutdown
      e stacking support - enable beta api to get access as quick fix
      e randr2 - fix freeing of stringshare by making it a stringshare
      e thumb - extend extension that might have media metadata image thumbs
      fix fullscreen no blank logic in e's dpms code
      further fixes to screensaver/banking with window states like fullscreen
      e cpufreq - stop checking status nullness - silence coverity
      e start - remove mtrack ... no one using it (not even me)
      e comp object - stop being cricical where pixmap and win size dont match
      Revert "e comp object - stop being cricical where pixmap and win size dont match"
      e - allow env var to turn off aborting at any CRI issue
      e - remove doofus-like code from mike with regards to making e crash or not
      e - fix entry wrapper - e entry was plain. elm is markup. do it properly
      add new powersave features for supporting a live sleep mode
      support connected standby (non-s3 sleep/freeze) that new lpatops sport
      Revert "move x11 suspend window grabbing to comp_x, ungrab on resume"
      e - fix desklock + grabs with hiding pointer on screen powerdown/up
      e - make some comment notes on broken lock display on saver etc.
      mouse hiding - only grab pointer not pointer and keyboard - simple
      e blanking - add new special "locked timeout" that can be shorter
      Revert "reduce include deps for enlightenment_imc binary" This reverts commit ee71ea63ec02a1bd7acfb11d9dea38eb3e499147.
      powersave usage - dont use usleep at all. pwoersave sleep replaces it
      pointer freeze - delay by 10 sec... because anim is used for hiding
      fix meson build for appmenu module - missing src files
      add build dir to ignore
      meson - fix config install to install cfg files in right places and perms
      meson build - fix mixer build because the defines are only for existence
      powersave sleep - use fd's and seletc. ecore pipe cant be used
      e comp - stop trying to set size again and again to the same
      e meson build - fix PACKAGE_DATA_DIR to include project name at end
      e powerrsave sleep - add fd get
      module build - clean up and fix meson install of pretty much all modules
      randr - discovered new output names that are display panels in laptops
      doc - add doc dir content to meson install to match prev autofoo
      e build - make 2 modules (music contrl and pager plain) consistent
      meson - clock and ibar - use same template as most modules now
      e module build - make ibar and clock really simple and generic
      meson build generics - ooops. missed files. add now
      meson generic module build - dashify the  option string
      build - remove policy mobile module
      move option if further out in generic module build foreach
      e module build - make build files far more generic and far smaller
      wireless module - dont segv e if connman daemon restarts
      meosn build modules - more modules build with the generic builder harness
      meson build - do a little tidying of the main meson.build in root
      e - fix eet image format test to actually use key when loading
      connman module - lower err's to warns as this actually happens
      fix autofoo build to match renaming scheme used for meson
      gadget recalc - if you add a job...del and add again
      xwayland module - fix fallthrough annotation
      fix fallthrough warnings
      batman - fix buffer warning by hanving big enough stack buffer
      e bindings - fix warning about uninitialized val
      batget - fix warnings about buffer sizes
      mod filemane - remove ancient instance theme path code not used...
      mouse cinbings config dialog - fix warnings
      fix fallthrough warnings and tag as fallthrough
      e - do workaround with in events due to flags to get ptr focus right
      e - conf_display - fix meson build break which dropped a src file
      meson build - geolocation - indent the same as other files
      meson build - fix use module defines to be upper case again
      move sysaction specific configure val detection to the etc subdir
      e meson build - refactor and clean up config and some module only cfg
      meson build - trim down some data file build files a little
      meson build - reformat and trim build files a bit to be more compact
      meosn build - go back to requires_e it's uses in main meson.build
      e_start - remove evas deps - don't need them.
      meson - make modules with helper binaries simpelr to build
      meson build - simplify 3 more wl modules to use generic parent harness
      meson - remove uneeded array definition for files
      meson - wl module builds - make them all consistent
      meson build - minimize teamwork meson build too like other modules
      meson build - simplify wizard module build like others
      meson build - mixer - simplify for module build setup
      meson build - simplify and cleanup evrything module
      e - add vkbd for convertibles (tablets, laptops ... phones)
      e x11 focus fixup - dont do the fixup if input grabbed
      filepreview - properly set min size on cells not in a broken way
      e mixer - handle pulse exit/disconnect and not keep e client sinks
      vkbd - fix seg with multi touch
      vkbd - fix 2 finger floating drag
      xsettings - fix warning for buffer that could be a bit small
      e sys - add listening to prepare for shutdown/suspend from systemd
      vkbd - forgot to mark text in vkbd to scale... do that
      vkbd - begin someinfra to support wayland
      mixer - fix segv on shutdown
      e actions - add actions for moving focus around - feature request
      e client focus - fix focus if moving focused window to new desk
      e client focus - fix focus if moving focused window to new desk - long
      vkbd - merge in commented out wl code from weekeyboard
      window focus - fix focus switch action next/prev walk dead code
      fix up window+screen positioning fixup so it doesnt catch other clients
      fix nested wayland in x11 mode with getting canvas zone geometry
      Revert "Sysinfo gadgets: Revert all uses of faulty e_powersave_sleeper."
      Revert "Temperature module: Don't use e_powersave_sleep.  It doesn't work for ticks faster than a second."
      e powerszve - fix sleep timeout for select to be correct
      pkgkit unknown string - fix typo
      e start - fix path prepend/append if already in path assuming clue
      tiling - ensure notification struct is 0'd before use
      use safer ecore_exe flags that close stdin/out/err if possible
      e sys - handle phantom wakeups from sleep on some devices
      battery modules - actually set ac power flag based on ac presence
      smart suspend - honor suspend on ac or not flag as it should
      ptr grab/ungrab for blank/unblank - log stages and work done for debug
      e main - xdg runtime dir fixup - dont overwrite same buffer
      nvidia driver workaround atexit handlers for pam auth

Cedric BAIL (6):
      filepreview: avoid race condition when destroying txt file preview with slow hard drive.
      fix text preview to use eina_strbuf_append_length that doesn't call strlen and crash.
      Revert "protect against non-nul terminated string from mmap in filepreview"
      connman: avoid random memory walk in case dbus data aren't provided by connman.
      wl_drm: do not say you have wl_drm backend in config.h when you have not.
      alert: protect use of drm code inside the proper ifdef.

Chidambar Zinnoury (8):
      e desks config: Bring some flip settings back.
      e desks config: Group all flip-related settings to their own tab.
      e: Don’t show two consecutive menu separators if there is no need in client menu.
      e fm: Add a separator only if there is something before.
      e fm: Don’t check every other line whether the location is writable when creating menu.
      e remote: Fix script’s execution rights.
      e about: Year++.
      e menu: Fix missing realize when using key-activation to the right.

Christopher Michael (60):
      'cur_group' variable is unused here if we are not building for wayland
      add missing EINA_UNUSED for unused function params
      remove unused variables from _ibar_resize_handle
      use proper variables to set size_hint_max on ibar
      e ibar - fix "old man" fat finger typo ;)
      remove need to create different dialog windows under wayland
      Revert "e - fix major memory bloat when in gl mode - dont create shm segments"
      wl_fb: Check that e_comp_wl_init does not fail.
      add key_up and key_down methods to sreen interface
      Remove unused variables from ibar_resize_handle function
      add missing EINA_UNUSED for function parameter
      Update wayland readme file
      update wayland readme for gl-drm
      disable elementary softcursor mode for wayland compositing
      reset elementary softcursor config on shutdown
      Revert "disable elementary softcursor mode for wayland compositing"
      Revert "reset elementary softcursor config on shutdown"
      don't crash is surface resource has no e_client
      Revert "don't crash is surface resource has no e_client"
      check if a client is internal or not before deleting
      cleanup unused variables and parameters for pager module
      fix missing definition of DRM_FORMAT_XRGB8888
      mark unused function parameter in Luncher as EINA_UNUSED
      add missing EINA_UNUSED for unused function parameters
      removed unused variable from luncher code and add missing EINA_UNUSED
      use ecore_evas_screen_dpi_get when updating e_scale value
      use ecore_evas_screen_dpi_get to get screen dpi under wayland
      remove unused variable in Luncher module
      verify valid client comp_data before accessing it directly
      Revert "verify valid client comp_data before accessing it directly"
      verify shell client delete functions are operating on wayland clients.
      mark Ecore_Thread parameter as EINA_UNUSED
      remove unused variables in e_comp_wl
      make mouse pointer visibility syn with hotplug/un-plug
      add missing EINA_UNUSED for unused function parameters
      fix formatting
      fix comparison between signed and unsigned int expressions in xkbswitch module
      fix shadowed variable declaration
      Use proper coordinate adjustment
      remove EINA_UNUSED for used function parameter
      update touch enabled/disabled based on seat capabilities
      fix formatting
      send wl_touch events when we handle mouse buttons
      Revert "send wl_touch events when we handle mouse buttons"
      remove old ecore_drm1 code from wl_drm module
      re-enable getting and setting output rotations in wl_drm
      minor formatting fix
      minor formatting fix
      minor formatting fix
      wl_drm: Fix potentially uninitialized variable
      fix potentially uninitialized variables
      remove unused variable in e_exec.c
      bump efl minor version check for ecore_drm2 API function usage
      fix wl_drm detection in e_signals.c
      reverse order of shell binding in wl_desktop_shell module
      Revert "reverse order of shell binding in wl_desktop_shell module"
      wl-drm: Properly retrieve output geometry and propertly set output mode
      wl-drm: Add screen position to debug output
      wl-drm: Fix issue of not being able to set output mode
      Revert "wl-drm: Fix issue of not being able to set output mode"

Davide Andreoli (29):
      mem gadget: respect the aspect ratio of the theme
      mem gadget: no need to send 2 consecutive int_set msgs
      cpu gadget: fix orientation of the box
      cpu gadget: fetch aspect ratio from the theme
      cpu + mem gadget: use new vertical layouts
      net gadget: fix 2 obvious cnp errors
      net gadget: those signals are not used/needed anymore
      mem gadget: improve proc info fetching
      mem gadget: formatting, fit into 80 cols
      mem gadget cleanup: rename vars
      mem gadget: pass the new fetched info to the theme
      mem gadget: implemented a new info popup
      mem gadget: try to improve values calculation
      mem gadget: fix a typo
      mem gadget: adjust a little bit the values calculation
      sysinfo: do not use autoclose on popups
      sysinfo: fix popup position when using the cumulative sysinfo gadget
      sysinfo gadget: remove frames in popups
      pkit gadget: use elm widgets directly
      pkit gadget: use genlist instead of list
      pkit gadget: a better initial config
      pkit gadget: add ability to install updated directly from the gadget !
      pkit gadget: cosmetics, no functional changes
      pkit gadget: show a nice progress bar while working
      pkit gadget: a new help "mode" that show the icon meanings
      pkit gadget: show the button only if a packager manager is configured
      pkit gadget: popup title in bold
      pkit gadget: do not autoclose the popup
      PKit gadget: more accurate progress bar

Derek Foreman (84):
      Properly send kbd focus to xdg_shell popups
      Make sure the same keyboard resource doesn't end up on the focus list twice
      Fix xdg_shell focus logic
      Fix wayland clients not deleting when they're hidden
      Fix test for object visibility when deleting wayland clients
      Fix getting top object in comp canvas
      Fix wayland extension global creation
      Add versions to wayland extension setup macros
      Don't send keyboard leave events to unfocused clients
      bump ecore_drm2 dependency, update to latest beta API
      Fix error print when wl_wl fails to start
      Fix xwayland binary location detection
      Don't kill self during shutdown
      NULL out xwayland fd handlers after deleting them
      Add myself to the AUTHORS file
      Find wayland protocols and wayland scanner at configure time
      Add the capability to auto-generate protocol code and headers
      Auto generate wayland protocol
      Block session recovery for internal windows
      Remove EVAS_CALLBACK_HIDE on shelf when freeing
      Fix out of tree builds
      Increase area of tilers for regions
      Fix massive wayland input region brokenness
      Fix wayland opaque regions
      Stop passing dimensions to _e_comp_wl_surface_state_init
      Fix wayland deferred buffer free crash
      Check for deleted client in e_pixmap_image_is_argb
      teamwork: Use emile SHA1 functions
      Fix crash on xdg shell unbind
      Fix keyboard tracking when leaving an xdg shell window
      Fix crash when exiting an xdg shell application
      More aggressively prune keyboard focus list
      Stop sending key up/down events on focus change under wayland
      test dmabuf pixmaps properly
      Fix wayland frame callback times
      Use a monotonic clock for frame callback times
      Stop sending wayland motion events when the mouse is grabbed
      Replace all timer_add with timer_loop_add
      Replace all timer_reset with timer_loop_reset
      Dispatch wayland frame callbacks in the correct order
      Remove tests for wayland damage_buffer presence
      Replace some ecore_time_get users with ecore_loop_time_get
      Don't require dmabuf buffers to be writeable
      Fix wl_drm session activation callback
      Fix wl_drm session (de)activation callback
      Remove some duplicate operations
      Stop misuing EVAS_NATIVE_SURFACE_VERSION macro
      Revert "Stop misuing EVAS_NATIVE_SURFACE_VERSION macro"
      Fix unused var compiler warning in wl_drm
      clean up some code
      Clear the native surface structure before initializing it
      Refactor wayland buffer releasing
      Don't delete busy E_Comp_Wl_Buffers
      Allow enabling experimental hardware plane support
      Initialize the Evas_Native_Surface to 0 for dmabuf tests
      Test dmabuf via native_surface_set even in software render
      Remove old test for dmabuf validity
      Remove some duplicate dmabuf validity checks
      also apply xdg-shell v6 client del hooks to external clients
      Make wayland clients render when only visible from mirrors
      Fix clamping on screen blanker timeout
      Fix xwayland selection crash
      Don't block wayland client updates during screen saver fade out
      Fix geometry for drm outputs
      Update to recent ecore_drm2 changes
      Add a compatibility layer to protect against ecore_drm2 api change
      Stop doing complicated things after a segfault
      Remove ecore_drm support
      Resynch with weston's dmabuf implementation
      Remove more pre-ecore-drm2 stuff
      Bump wayland-protocols requirement
      Handle wayland frame commits with no surface damage better
      Drop wayland-protocols requirement to 1.9
      Remove bogus EINA_UNUSED
      Fix video explosion on rpi3 during screen blank
      Fix crash when processing a wayland client cursor set after death
      Fix wayland frame callback failure
      Set close on exec for stdin
      use safer ecore_exe flags that close stdin/out/err more often
      Stop queuing wl_buffer release events
      Revert "Set close on exec for stdin"
      Fix xwayland related crash when mousing out of a window
      Clear stored root window id when shutting down X
      Fix crash on wayland logout if xwayland hasn't started yet

Flavio Ceolin (1):
      emix: when in alsa mode only operate on master

Jean-Philippe ANDRÉ (3):
      bg: Fix bg with single jpeg images (no edj)
      pulse: do not leak strbuf
      config: Add env var to skip profile save

JengHyun Kang (1):
      e_comp_wl: break from meaningless loop

Joshua McBeth (1):
      add dbus message 'org.enlightenment.wm.Window.SendToDesktop'

Leif Middelschulte (1):
      support proxy settings provided by Connman.

Marcel Hollerbach (81):
      e_comp_wl: introduce api to set index of keymap
      e_xkb: use the new e_comp_wl_input_index_set api
      readme: update keyboard entry
      e_comp_data: NULL out source once it is freed
      e_comp_wl: destroy e_drag when source disappears
      e_alert: define EFL_BETA_API_SUPPORT before any include
      e_dnd: move the ungrab to the object free
      xwayland: show the dialog after ecore_wl2 is in sync
      ibar: try to get a better min size
      tiling: place popup on the current active zone
      tiling: be more accurate on the description
      mixer: introduce Barrier checks
      mixer: introduce emix_max_volume_get
      ibar: multiply size with scale
      mixer: lock up the slider for the case a drag is in progress
      wizard: make page 065 translatable
      mixer: we changed that name when we merged the mixer in
      update german translation
      The potfile has changed,
      mixer: do not set back the value from emix once the drag is finished
      luncher: delete the popup if there is already one
      luncher: do not add clients twice
      luncher: free the timers
      luncher: do not add clients twice
      e_gadget: fix destroying of drop_objects
      gadgets: free that data when notify and main is done
      cpuclock: NULL status if its freed
      e_exec: split up the free of the instance
      luncher: fix hash table usage
      luncher: null out the watchter when the watcher is stopped
      e_sys: bring back system actions after resume was called
      tiling: dont use floating state when toggling
      Revert "Revert "mixer: do not set back the value from emix once the drag is finished""
      tiling: insert a client in the place where it is currently placed
      tiling: do not pass parent as relative
      tiling: make windows placable by dragging them arround
      tiling: refactor the window tree
      tiling: save the split type per desk
      tiling: handle the tiling state correctly when on multimonitor
      tiling: handling dragging from desk to desk
      tiling: drop move requests from tiled clients
      tiling: only start a drag when the cursor is really moved
      tiling: update the indicator where the icons are dropped
      tiling: display the hint on the zone if there is no client below
      tiling: fix zero sized zone
      enlightenment_askpass: do not appear in a menu
      mixer: be prepared for sinks without any volume
      tiling: extra can be NULL here
      tiling: fix compile warning
      emixer: use a better name for the sink inputs
      mixer: the name has to be a stringshare
      mixer: do not leak a allocated string
      meson: we need -rdynamic here not -export-dynamic
      meson: also install the tiling-theme
      e_startup: check for efreet errors
      meson: we should probebly configure the xsession file correctly
      meson: use file instead of doing the relative path by hand
      meson: port music-control
      meson: port geolocation
      meson: underscrorify the module name
      pager: do not define Config twice
      meson: add HAVE_DRM2 and HAVE_WL_DRM
      meson: we need to link dl
      meson: build again without wayland
      e_comp: stop including e_comp_x here without a reason
      e_comp_wl: move types into typedef section
      tiling: only use the insert function
      tiling: fix insertion in the tree
      leave the E_Comp_Wl_Data define in e_comp.h
      tiling: show notification if a client cannot be tiled
      everything: use correct edje api
      tiling: change description
      mixer: find a better name
      tiling: give a better error message if a client doesnt fit
      everything:declare this object as const
      meson: install emixer correctly
      meson: specify that modules have unresolved apis
      meson: teamwork uses emile
      meson: wl_drm uses elput
      meson: wizard also link_with here
      meson: the keyword is value, not default!

Mariusz Bialonczyk (1):
      modules/temperature: cosmetics: typo fix (celcius -> celsius)

Massimo Maiurana (9):
      Updating italian and spanish translations
      Updating italian translation
      Updating slovenian translation
      Updating italian translation
      Updating italian translation
      Updating danish translation
      Updating danish translation
      Updating italian translation
      Updating italian translation

Michael Bouchaud (8):
      e_client_volume: add sink_name_get API to e_client_volume
      e_client_volume: add E_EVENT_CLIENT_VOLUME_SINK handler
      e_client_volume: display a control per stream in the popup volume
      e_client_volume: forget to remove the separator
      e_askpass: compliant with GIT_ASKPASS for querying username
      e_askpass: fix a typo
      e_client_volume: check volume setted after a slider drag
      e_client_volume: Don't set client volume to max after a mute.

Michaël Bouchaud (yoz) (14):
      mixer: fix the volume conversion calc into pulseaudio backend
      E_Client: add an abstraction api to control volume by app
      mixer: use the new e_client api to export volume control by app.
      e_remember: add e_client sound volume support
      e_client: add a volume control to the window theme
      mixer: add volume control to e_client menu
      Revert "mixer: lock up the slider for the case a drag is in progress"
      mixer: fix coverity issues
      mixer: fix a typo spotted by coverity
      mixer: Don't sync volume sink with e_client if they have more than one.
      mixer: close the file descriptor on error.
      xkbswitch: rewrite the config panel to improve the gui design
      mixer: use VOLSET macro in volume output set
      Revert "mixer: do not set back the value from emix once the drag is finished"

Mike Blumenkrantz (879):
      unset release mode
      handle e_comp_x init failure more effectively and perform cleanups
      set x11 randr iface for wl_x11 based on wm presence, not composited state
      match wl_wl output sizing in wl_x11 when running in an existing wm session
      set unmax flag for xdg shell unmaximize
      set/unset smart parent as e_widget when adding sub-objects
      adjust xdg-shell window menu coords by client's coords
      only check x11 configurerequest geometry changes when applicable
      improve quickaccess relaunch help dialog text
      move new version of e_comp_top_window_at_xy_get() to dnd, restore old version
      clear wl subsurface data during delete only if subsurface is not also deleted
      add xwayland compat for efl 1.19+
      bump efl wayland req to 1.18 now that it's out
      Revert "track/manage size hints for zoomap child objects"
      track current bryce geom, force recalc on gadget site upon change
      clean up some string leaks in wireless gadget popups
      delete previous wireless popup when activating editor from connection list
      use stringshare_add() for evry files plugin mime types
      another case of stringshare misuse re:efreet_mime_type_get()
      ignore xwl clients when flagging wl surfaces as internal
      add drop handlers for gadgets
      add event handler for evry event type, not #define value
      do not attempt to populate gadgets during type_add if site has not yet been populated
      add docs for E_Comp struct members
      remove E_Comp->name
      remove more useless E_Comp struct members
      bump modapi
      move 'unmaximize' smart callback to after geom calc in client_unmaximize
      use comp canvas win by default for any drop handler with an E_Object
      set the spacer rect as the drop handler base when creating gadget drop handlers
      handle e_comp deref during e_dnd shutdown to avoid crash
      always use compositor object stacking when performing internal drags
      clamp bryces to a lower canvas layer
      use same layer in bryce editor for "above window" setting
      set gadget added flag any time a gadget is created or wizarded
      add separate codepath for handling layout of moving gadgets
      force smart calc on gadget sites at key points during move operations
      attempt to retain gadget size when executing move operations
      adjust gadget drop coords for pointer offset
      check visibility of gadget site 'events' member to determine drop availability
      add backspace/delete for clearing all lockscreen gadgets
      always use largest available size for free-oriented gadgets
      add gadget doc note for gadget_destroyed callback re:object lifetimes
      force bgpreview widget to resize after a wallpaper update
      always delete gadget's display object and ensure gadget object is null
      clean up gadget drop handlers correctly
      do not update bryce layer when restacking to a higher layer than CLIENT_ABOVE
      remove extraneous recalc trigger when deleting a gadget
      bump to require efl 1.18.99
      do not consume key events in comp autoclose key callback if desklock is active
      add e_util_open(), unify all callers of enlightenment_open
      remove x11 input window from desklock grab process
      remove (wrong) setting of layer for time's clock gadget popup
      do not show wireless gadget popups if desklock is active
      force shape queue when gadget util ctxpopups change visibility
      print object type in shape debug if name does not exist
      clamp gadget util ctxpopups to E_LAYER_POPUP at the lowest
      handle "unmaximize" smart callback differently depending on fullscreen state
      remove unused variable
      force zone useful geometry recalc on desk flip if prev/next desk has obstacles
      split wl_desktop_shell into separate files per shell
      enforce bryce resizing when orientation changes
      add EINTERN function for renaming gadget sites
      fix bryce check for shelf existence on orientation/anchor to break when expected
      add zone number to bryce names
      do not check for shelf/bryce existence in opposing anchorages during bryce wizard
      further improve bryce portability across zones
      also do full bryce rename when moving between zones
      add new flag for zone edge objects to allow shape cutting while repeating events
      force bryce visibility during editor activity
      add gadget_site_(un)locked smart callbacks for forcing gadget site visibility
      call gadget_popup smart callback when configuring gadgets
      handle gadget_popup smart callback on gadget's display object
      set ON_HOLD flag when triggering gadget mouse buttion actions
      remove unused attribute from used param
      trigger bryce menus from right click if event has not been consumed
      fix bryce upgrade path from 0 -> 2 re:naming
      set ON_HOLD flag more accurately when activating gadget actions
      avoid extra recalc when resizing a bryce on its oriented axis
      add gadget site sizing workaround to avoid elm box sizing desync
      rename bryces when changing anchors
      loop bryce autosize recalc when gadget site has not yet calculated its size
      only find the session recovery remember if ec->remember is not it
      apply non-session recovery remember to client when creating recovery remember
      correctly handle applying of non-SR remember in remember config
      reject successive zone_geometry_dirty() calls
      trigger zone geometry events when updating zone/desk obstacles
      force min size on wireless popup during show
      create substruct for E_Comp to put canvas objects into
      bump modapi
      add workarounds for ctxpopup geometry for use in input shape tiling
      force recalc on bryce scroller when doing recalc on gadget site
      handle no-orient gadget visibility based on site->events visibility
      force gadget site recalc on gadget object creation to ensure sizing
      copy gadget position from pointer gadget -> drop gadget when executing drop
      calc new gadget size based on ratio of size:target site size
      add generic handler for desktop gadget layers
      Revert "correctly handle applying of non-SR remember in remember config"
      Revert "only find the session recovery remember if ec->remember is not it"
      Revert "update secondary remembers when a session recovery remember is updated"
      Revert "prevent editing of session recovery remembers"
      redo session recovery handling to use separate E_Remember
      bump modapi
      allow client frame changes when switching from frame -> no frame
      optimize out re-applying of borderless client theme
      block remembers of e_sys windows
      use eina_streq for string comparison in e_zone_for_id_get()
      fix use after free when renaming a bryce
      clamp bryce position to its parent zone
      avoid potential divide by zero during bryce startup
      do not modify bryce zone/name during startup
      center desktop gadget editor popups upon the zone they have activated
      track desktop gadgets based on their zones
      attempt to handle non-orient gadget resizes based on anchor corners
      allow scaling gadgets using wheel events during initial placement
      delete current dragging gadget during edit if escape is pressed
      attempt to recalc gadgets which overflow their container
      do not apply pager rotation when placed on desktop
      do not apply efx anchoring to move effects if a resize effect is not active
      use only aspect sizing in luncher
      update luncher aspect hints whenever icon list is modified
      do not create new luncher cfg id for demo gadgets
      add smart callback for when gadgets get reparented
      do not return early from _bryce_position()
      add bool return for e_exec_phony_del() to return deletion success
      feed mouse-up when dropping a gadget site before enabling events on the site
      use only aspect hints for new pager gadget
      force gadget site recalc from style object if gadget's hints change
      return correct values from bryce post event callbacks
      determine wl pixmap argb solely based on image_argb flag
      avoid crash when calling e_pixmap_image_exists on wl pixmaps without buffers
      add more parens for previous pixmap commit
      add special case for returning pixmap argb of unusable wl cursor pixmaps
      move bryces to E_LAYER_DESKTOP_TOP when not above windows
      center menu-triggered volume popup on same zone as client
      force bryce repositioning onto target zone during startup
      use only zone coords when moving bryce to its zone during editing
      clamp e_place calcs to zone geometry
      break out e_place_desk_region_smart() area calcs into separate function
      break out repeated code from _e_place_desk_region_smart_area_calc() into separate function
      add docs for e_place_desk_region_smart() calc code
      reset initial internal wl client states when hiding (but not deleting)
      unset wl client surface pointer on surface destroy
      remove wl client pixmap aliasing on del
      always free wl pixmap buffer list on non-cache image clear
      unalias internal wl client pixmaps in elm win hide trap callback
      handle e_scale correctly in bryces
      keep bryce starting size unscaled
      unset cur_mouse_action upon deleting client menu
      send orientation signal to bryce scroller theme
      only unset cur_mouse_action on client menu delete for the right action
      focus confirmation option in efm delete dialog
      disable bindings during desklock
      reject non-printable characters from lokker entry
      make confirm dialogs autoselect the confirm option
      add e_client_util_top_parent_get()
      add e_comp_object_coords_inside_input_area()
      xdg6 support
      require an elm win to apply auto-visibility for internal wins in wl surface commit
      clarify some wl surface checks to require elm wins
      make fake mouse-out upon focus-out conditional on pending pointer warp
      prevent divide by zero when calculating gadget aspect sizing
      handle xdg-shell maximize/unmaximize calls correctly
      stack subsurfaces above their parents upon creation
      correctly handle xdg surface deletion and pointer clearing
      destroy xdg role surfaces if base surface is destroyed
      handle illegal xdg-shell resource unbinds
      fix use of E_CONTAINS macro for xdg-shell positioners
      always send valid size geom when configuring xdg6 popups
      check gravity variable for gravities when applying xdg6 positioners
      use more accurate determination for applying xdg-shell (un)maximize operations
      use correct coords for determining input region calcs on comp objects
      move the comp canvas cursor object during wl surface grabs
      handle input detection for wl surface grabs more accurately using stacking
      feed mouse move and canvas mouse up upon breaking a wl surface grab
      add handler for triggering xdg-shell data cleanup on client del
      free xdg-shell data for xdg5 surfaces
      disable xdg6 positioner resize hints
      apply better algorithm during xdg6 positioner slide calc
      do not pop pointer types on client hide events if the client is pass_events
      set wl pointer surfaces to E_LAYER_CLIENT_PRIO during setup
      attempt to re-set wl surface pointer when popping back to "default" pointer type
      fix internal wl windows to exit when border X is clicked
      handle pass_event clients in e_comp_object_coords_inside_input_area
      Revert "Check for deleted client in e_pixmap_image_is_argb"
      use better check for getting wl surface alpha from cursor pixmaps
      revert all sizing commits to ibar/ibox for the past year
      maintain "empty" object's size hints when ibar/ibox resizes
      null out animator pointers in efx stop() operations
      null out bryce and site pointers when deleting bryce object
      add some internal functions for triggering fake screen hotplug events
      don't track gadget drop handler objects for deletion
      do not set aspect on luncher grid gadgets
      correctly set E_POINTER_RESIZE_BR mode for client keyboard resizing
      plug iterator leak in e_comp_object_render()
      remove extra SLEEP prints during startup on non-release builds
      fix auto-enabling of compiler warnings on non-release builds
      bump modapi
      revert desklock block_rect opacity change
      add method for unblocking zones during desklock show/hide
      handle desklock show animation unblocking in lokker
      resolve certain double/float comparisons in with increased correctness
      resolve battery float-equal warnings
      resolve efm float-equal warnings
      resolve efx float-equal warnings
      resolve compositor float-equal warnings
      fix selective disabling of -Wunused-parameter under clang in copied weston code
      resolve conf_* module float-equal warnings
      resolve evry float-equal warnings
      resolve winlist float-equal warnings
      resolve widget-related float-equal warnings
      resolve gadcon-related float-equal warnings
      resolve client float-equal warnings
      resolve misc module float-equal warnings
      resolve binding+action float-equal warnings
      resolve misc float-equal warnings
      specify format string for desk names in desk config
      add global macros for easily toggling warning flags
      mark strftime calls using struct tm in time module as safe
      mark strftime calls using struct tm in e_slider as safe
      Revert "warnings - disable y2k and format non literal and float comparison"
      use -Wno-format-y2k for non-release builds
      break out code to set clients as transients for a parent
      implement xdg-foreign v1
      free configs for demo gadgets on object free
      do not return sr window remembers if not looking for sr remembers
      do not perform frame coord adjustments for re_manage wayland clients
      use persistent clipping for comp object input rects
      use geometry from comp object input rect when determining if coords intersect
      ensure that gadget internal del callbacks are handled before other callbacks
      handle pixmap_refresh() failure cases more accurately under wayland
      throw xdg6 errors for unconfigured buffers as spec requires
      validate xdg-shell move/resize requests against latest button serial
      reset demo gadget id before deleting gadget object during drop operation
      do not double-free lists during luncher bar empty
      remove gadget drop object event callbacks during object deletion
      implement relative-pointer v1
      add flag for comp screen iface to indicate relative motion eventing
      generically handle relative motion eventing for non-featureful backends
      ignore intercepted mouse events for non-wl compositing
      implement pointer-constraints v1
      free string pointer in xkbswitch parsing
      add e_pointer_show()
      use e_pointer_show() when updating wl-drm seat caps to enable pointer
      make e_pointer_object_set() a no-op when passing the existing cursor
      simplify mouse-out cursor reset for wl clients
      use 1x1 for unsized (internal) clients
      hide wl client cursors when set_pointer is passed a null surface
      simplify xkbswitch rule parsing, ensure resource freeing
      remove del callbacks for xkbswitch list config objects
      remove callback for "gadget_destroyed" in pager
      add note in doc for "gadget_destroyed" callback re: callback ordering
      wrap time module strftime calls more loosely when disabling -Wflags
      remove E_Config->desktop_default_name
      plug list leak in luncher
      ref clients during exe_inst deletion to avoid invalid access after free
      start xwayland process 2.0s after module load
      only unset current pointer cursor object if new one is being set
      force mouse-out on wl clients during delete if mouse.in is set
      Revert "attempt to re-set wl surface pointer when popping back to "default" pointer type"
      reset compositor pointer cursor if wl surface destroy is the current cursor
      add specific handling for xwl cursor unsetting on mouse-out to ssd
      move wl data device focus-change handling to data device leave() fn
      simplify _e_comp_wl_data_device_drag_finished() slightly
      more correctly handle dnd completion for wl
      add wl_buffer output module
      fix return code checking for errors when generating wl key events
      Revert "e - wayland - fix double-resize if e wants a different initial size"
      future-proof client hook inlist initialization
      add client hook for UNIGNORE
      use E_Client->changes.size for validating wl client geom during configure
      unignore wl clients on first commit regardless of buffer attachment
      watch UNIGNORE hook for hooking window remembers
      allow new_clients to update their remembers
      never return remembers which apply uuid if not looking for sr remembers
      do not display sr rememebers in remember config dialog
      watch client UNIGNORE hook for adding new tiling clients
      make client placement eval not dependent on new_client flag
      always set E_Client->placed when successfully moving a comp object
      do not use new_client to determine placement-related paths during wl client commit
      ignore all non-NORMAL type wl windows in e_place
      fix wl_drm detection in e_mouse.c
      make wl key input generator take keynames instead of keycodes
      add client smart callback for post_render
      make e_comp_wl->ptr.x/y ints and fix usage to be consistent
      remove e_comp_wl->ptr.grab_x/y
      center pointer on wl_buffer output init
      block backlight changing for nested/buffer compositors
      add event for xwayland init
      save config when toggling option to disable startup splash
      register wl_buffer output canvas for input events
      e_menu_grab_window_get() -> e_menu_is_active()
      only attempt to place clients which are protocol-visible
      unadjust wl surface coords before applying position during commit
      set E_Client->remember before calling e_remember_update()
      redo wl client setting of E_Client->take_focus and E_Client->want_focus
      do not shortcut wl surface commit unignore path for internal wins
      free E_Remember->uuid on shutdown
      enable abort on critical error for non-release builds
      add new explicit method for enabling backlight depending on output type
      add function for printing debug info on an evas object
      only move new bryces to zone on create, not existing ones
      show already-visible comp util objects when changing frame type
      add E_Menu access from its comp object
      make 'after_restart' variable global
      remove all unnecessary efl version checks
      typo--
      hide wl clients before deleting them on surface destroy
      comment out inlist member of E_Comp_Object struct
      better protect comp object internals from dereferencing freed clients
      add all wl client frame callbacks with priority AFTER
      unset deskmirror client's client pointer upon client deletion
      fix dangling pointers in xdg-shell deletion
      Revert "e - wl mode - stop consuming 100 percent cpu"
      add Return and Caps_Lock handling to wl key event generation
      do not unset E_Client->placed for fullscreen/maximize clients
      defer menu activation mouse-up feed
      set ON_HOLD when activating start gadget
      add handler for EFREET_EVENT_DESKTOP_CACHE_BUILD to e_order init
      track and delete xdg-shell client hooks
      make E_COMP_SIZE a global comp resizing env var
      do not use saved e_randr screens if fake screens have been added
      manually center pointer using compositor size on init when not restarting
      run e_hints_window_init() on new_client eval and not during placement
      do not force comp objects to render for their proxies if real_hid is set
      show x11 parent windows during reparent only if not withdrawn
      return during comp object pixels function if client was deleted during render
      add wl client flag to indicate status of xdg6 pre-buffer configure
      make e_remember_del() work with sr remembers
      perform frame adjustments before applying wm spec hints during unmaximize
      only save client size info on maximize/fullscreen when protocol visible
      check changes.pos during client maximize/fullscreen and adjust window coords
      do not start xwayland repeatedly
      call wl/x compositor shutdown functions directly during comp shutdown
      force iconic state for iconic x11 clients during shutdown
      move x11 iconic window init from e_hints -> comp_x initial fetch
      call e_randr2_shutdown in comp shutdown
      handle null E_Comp->screen during randr2 shutdown
      don't set minw for keyboard layout dialog
      clear luncher instance icons on bar deletion
      only hide wl clients on surface destroy when surface is mapped
      handle nested compositor delete requests
      set title for buffer output canvas
      only set toolbar icon min size if icon exists
      always use jobs to create bryce menus
      use maximized geometry for shell maximize calls on wl clients if !buffer_commit
      do not use animations for wl clients with initial maximize state
      slow down mixer's pulse reconnect rate
      rework how pulseaudio is started in mixer backend
      handle window icons from elm for internal wins
      use show instead of bring_in for xkbswitch layout add dialog
      always get zone geometry when placing clients
      only re-set comp object position during show if client has been placed
      set dialog and tooltip flags for internal clients
      do not accidentally place unplaced clients during wl *shell configure
      add wrappers for elm_win util create functions
      send wl client resize edges during focus-in/out send_configure
      force sending of last-used geometry when terminating a resize in wl shell send_configure
      set signal move/resize clients as action_client internally
      compare against e_client_action_get() for rejecting wl mouse events
      Revert "Stop sending wayland motion events when the mouse is grabbed"
      do not send mouse events to ssd wl clients if mouse is within ssd region
      use even more accurate wl callbacks for detecting ssd mouse in/out events
      always feed mouse events for wl client move events
      block x11 focus eventing under xwayland
      do not attempt to set window hidden hints on non-internal x11 windows
      account for late object setup when adding ssd mouse in/out callbacks
      add flag for wl clients to determine ssd mouse-in vs client mouse-in
      use compositor win object for client volume slider
      disable client maximize anims when unmaximizing before a fullscreen
      only apply xdg-shell client del hooks to internal clients
      unset wl shell resource data on destroy
      always set E_Client->need_fullscreen when fullscreening
      force e_client_unmaximize() to complete during fullscreen operation
      slightly optimize maximize -> fullscreen protocol comms for wl clients
      add debug for xdg6 configure
      check pixmap size before triggering maximize animation
      force animationless re-maximize when unfullscreening
      only center internal windows once
      adjust size for frame geometry in no-animation maximize path
      call "maximize" smart callback before "maximize_pre"
      add E_Client->saved.set
      do not set intermediate client geometry when doing fullscreen -> maximized
      re-set backlight level when resuming from suspend
      explicitly stack child client above parent when calling parent_set
      center child clients on parent in parent_set()
      don't set wl xdg-foreign clients as modal
      use e_client_parent_set() in wl *shell parent setting methods
      add a client's children to the skiplist during place routine
      do not arbitrarily center "lost" child windows, center them on the parent
      support clients as positioner objects in e_comp_object_util_center_on()
      re-place transient wl clients when parent is first sized
      break out client transient restacking into function
      apply transient stacking to wl clients when restack would not otherwise occur
      remove duplicated client stacking code from wl restack callback
      do not adjust unplaced transient client position on parent move/resize
      add cache for dead x11 manager windows
      remove uuid references from e_pixmap.c
      re-set list of default desklock bgs when changing to custom bg in config
      set pass events on efm icons when deleting files
      remove unused struct members from wl E_Comp_Wl_Client_Data
      make RENDER_DEBUG activate with E_RENDER_DEBUG env var
      make SHAPE_DEBUG activate with E_SHAPE_DEBUG env var
      explicitly set nested wl output canvas as a toplevel window
      avoid refocusing deleted wl clients during comp input ungrabbing
      set initial x11 window geometry for windows which do not have wm hints
      remove unused struct members
      check image load error when checking dmabuf viability in gl
      better handling for iconify during comp object show/hide
      do not show iconic x11 clients on on icccm hint change
      add desklock interface handler for key press
      remove check for desklock in comp object autoclose handler
      check efm path existence before using it during dnd selections
      unset wl button mask when beginning a move/resize operation
      unset wl selection target client if that client is deleted
      don't dup fds during xwl bridged selection transfer, this happens in libwayland
      always run client icon update path when creating xdg6 role surface
      add error messages when symbols fail to resolve in xwl init
      force client pixmap refresh immediately during resize if nocomp is active
      do not perform zone updates on ignored clients during evas callbacks
      remove unnecessary comparison when applying new keyboard layout in gadget
      update wl input to use new keyboard context/keymap api
      bump efl version
      use FOREACH_SAFE when walking client list during logout
      another fix for e_comp_wl->ptr.x/y coords being wl_fixed instead of ints
      store current pointer client into pointer struct
      preserve cursor state in drm output during vt switch
      simplify _bar_check_for_duplicates() in luncher
      simplify handling of new exec clients when adding luncher icons
      use correct event struct in luncher's _bar_cb_client_remove()
      remove misleading null checks from _bar_cb_client_remove()
      remove client callback from luncher icon when necessary
      perform client raise before triggering move/resize BEGIN client hook
      delete client raise timer when beginning a move/resize operation
      do not trigger events/bindings on zone object events with timestamp==0
      use event_grabber to simulate explicit grab during window move/resize actions
      re-enable zone edges during window_move action
      send nograb signal to ssd theme on creation
      feed mouse up during window maximize if the current window is being dragged
      update wl_drm for recent efl_input_device api changes
      only remove left/right maximize when removing vertical if left/right is set
      route all mouse movements to action_client during action grab
      don't null pointer after deleting internal win during wl delete request
      hook client object unref callback to cleanup comp object internals
      use fake xinerama screens when initializing wl outputs
      store output subpixel value to randr2 screen data during drm init
      simplify drm output update event by using randr screen refresh queuing
      send version edje signal to ssd theme
      reject client mouse move if coords match previous position
      feed mouse-up to action client from event grabber, then attempt to end actions
      try only 1 reconnect to pulse when mixer fails to init
      set pass events on shape debug rects
      print object type if name is null during shape debug
      ensure flag to preserve gadget editor is unset after setup
      allow gadgets to return a null object for demo objects
      do not advertise luncher grid or sysinfo for gadget sites with orient
      do not attempt to pack cpumonitor into box in sysinfo mode
      redo the gadget editor (again)
      force horizontal orient for all gadget editors with orientation
      if gadget wizard returns a zero id, remove gadget from site and destroy
      reset demo gadget id before deleting gadget object during drop operation
      update gadget position during a resize from top/left edge
      use seat0 as default seat name instead of default
      Revert "e - allow env var to turn off aborting at any CRI issue"
      hide gadget editor when dragging/wizarding a new gadget
      always grab input when showing a gadget wizard
      use safe list iterating when clearing a gadget site during shutdown
      freeze client action event grabber stacking
      do not enable abort on critical in development builds for raster only
      block client mouse move calls from comp object during move/resize
      Revert "block client mouse move calls from comp object during move/resize"
      block "user" client resizes during comp client updating phase
      force shape queue when adding/deleting action client event grabber
      perform move after resize during comp object show
      unset gadget editor pointer on editor delete
      remove eeze init/shutdown calls from modules
      use event grabber for gadget editors to improve event detection
      multiply pointer axis values by 10 for wl clients
      check exit status from auth subprocess
      block pointer warping on override clients
      make e_comp_object_frame_allowed() return false for ignored clients
      only set E_Client->want_focus for wl override clients if not popup client
      use xwayland check for clients when checking whether to reset focus to root
      don't run x11 focus (un)set callbacks for override clients
      don't force shm for xwayland launch and enable gl
      check ec pointer before deref in luncher's E_EVENT_EXEC_DEL handler
      don't call comp object cleanup functions for clients without comp objects
      only unredirect clients during comp update after 3 failures
      try redirecting failed clients again during resize
      handle rotations with fake xinerama screens
      don't crash in randr module when using fake xinerama screens
      process screen events in wl when using fake screens
      save gadget site config when deleting gadget after wizard failure
      add function for a gadget to remove itself
      remove "gadget_removed" smart callback from gadgets which use it upon deletion
      add "focus" mode for render debug
      add handler to catch (new) fake elm win wl2 window client
      focus comp canvas's client when no real client is focused
      don't reject internal wl selections based on serial value
      unset DISPLAY in mixer when performing pulseaudio operations under wl
      use kbd focus resource's client instead of "focused" client in data device
      don't set E_Client->want_focus for wl overrides with parents
      move x11 suspend window grabbing to comp_x, ungrab on resume
      Revert "Revert "move x11 suspend window grabbing to comp_x, ungrab on resume""
      do not perform input grabbing during (un)blank if pointer will not animate
      always perform initial input ungrab when waking screen
      unset gadget site's layout pointer after destroying gadgets
      unpack gadget from site editor box on content_item del
      delete gadget editor site when editor is deleted
      move gadget del callbacks to AFTER priority
      update time gadget date string during clock timer
      handle multiple input regions for csd clients
      toggle NOGRAB on client input rects during move operations
      don't attempt desk flips from client move handler
      only set qt theme override env vars if option to do theme matching is enabled
      rename clock+time module event handler lists
      freeze edje during dpms
      disable clock+time gadget updating during dpms
      freeze pointer animations while screensaver is active
      prune unconfigured gadgets from comp object sites upon site del
      don't close gadget editor if ON_HOLD is set or click is not button 1
      add better handling for interacting with gadget popups while editor is up
      hide gadget editor if gadget triggers a popup
      always check for autoclose object when adding gadget objs to edit grabber
      use correct key name for BackSpace in desktop gadget key handler
      save config after clearing desktop gadget site
      update date for time gadgets when day timer ticks
      remove nonfunctional --enable-simple-x11 configure flag
      remove edje-cc from build
      remove egl from build
      remove unused defines
      fix wayland-only build
      fix e_alert build with wayland only
      reduce include deps for enlightenment_imc binary
      reduce include deps for enlightenment_thumb binary
      only store the compositor's own data manager resource to e_comp_wl->mgr.resource
      don't free x11 clipboard source immediately
      remove unused Evas.h include from e_fm_ipc.c
      bump E_VERSION_MAJOR
      split macros out of e.h into separate file
      make efm build without elm includes
      do not generate module.desktop files
      Revert "toggle NOGRAB on client input rects during move operations"
      Revert "handle multiple input regions for csd clients"
      handle multiple input regions for csd clients
      toggle NOGRAB on client input rects during move operations
      reduce include deps for enlightenment_imc binary
      reduce include deps for enlightenment_thumb binary
      fix E_API definition
      do not include e.h in batget.c
      check for different types of load errors during startup image load tests
      remove unused define from cflags and pc file
      use snapshot object for shot module
      remove wl screenshooter protocol
      only map wl pointer clients if they are the active cursor
      hide pointer cursor clients when unsetting them
      meson.
      move x11 randr defines to e_comp_x_randr.c
      use more descriptive label than '???' for unconfigured outputs in scren config
      use real sizing for screen config mode list, not 1xheight
      use 1 second for screen config apply delay
      add a configurable default policy (default: extend) for screen hotplugging
      pass screen id when opening config dialog with ASK hotplug policy
      do not set e_comp log level
      use e_util env functions in time module
      perform immediate move on bryce during autosize
      do not use elm api to unset centered flag during resize
      rework internal win centering
      resize comp bg_blank_object on zone update
      destroy desktop gadgets when the parent zone is removed
      rename bg_blank_object -> resize_object for a more accurate name
      abort meson build if source tree is not clean
      remove edje_cc results from configure output
      Revert "e comp - stop trying to set size again and again to the same"
      ignore wl client ssd mouse events for windows without ssd
      only do configure for wl clients in commit when a buffer is attached
      Revert "only do configure for wl clients in commit when a buffer is attached"
      remove wl focus check function
      save xwindow of x11 selection owner, not client
      add special case for xwl-originating drags to set dnd actions
      focus x11 root window on init when starting with xwayland
      handle xwl data source cleanup more effectively
      free xwl selection atom names after creating selection source
      set xwl-originating data source dnd actions during source creation
      add text/plain;charset=utf-8 to xwl-created wl clipboard data source
      don't create xwl receive pipe for SelectionRequest when getting the selection
      fix mixer logging to use mixer log domain
      reject invalid comp object resizes
      ignore desktop gadget editor keybinds while editor is hidden
      break out gadget aspecting into separate function
      handle time gadget removals for unconfigured gadgets without crashing
      apply gadget aspects with greater precision
      position desktop gadgets more accurately during resize
      make gadget resize anchoring able to omit axes
      defer setting recalc on gadget sites
      trigger gadget site recalc job if gadget object hints change
      abort gadget site layouts if the gadget site has not been sized
      use zone size for un-oriented new gadgets
      return immediately when setting a null gadget style if current style is null
      set max size hint on desktop gadget editor gadgets when editor is resized
      remove tooltips from desktop gadget editors
      partially revert "add new powersave features for supporting a live sleep mode"
      show clients immediately after pixmap refresh if visibility is pending
      return updates_full state from e_comp_object_damage_exists()
      use ecore_x_netwm_opacity_get() for x11 opacity checking
      handle updates_full when adding comp object update regions
      reset comp object update regions when a render occurs
      continue to fetch netwm opacity hint if it changed since the last fetch
      set client opacity any time netwm hint has changed in fetch
      remove left/right maximize before removing vertical maximize
      implement support for wl aux hints
      Revert "reset comp object update regions when a render occurs"
      set gadget recalc immediately when not in canvas smart calc
      reject gadget site layout attempts only when it would be impossible
      do not reposition new bryces after using editor
      check for desk/zone mismatch in e_zone_desk_useful_geometry_get()
      clamp vertical bryce size to useful zone geometry
      do not immediately rescale windows when changing zone geometry
      add and use new event for zone useful geometry changing
      break out client rescaling into separate function
      rescale clients on useful geometry dirty
      deduplicate zone move/resize code
      mark zone useful geometry as dirty when applying move/resize
      track zone states and modify bryces accordingly
      use explicit rounding for bryce scaling
      remove wizards from time module gadgets
      restack child windows on parent_set() even if child is ignored
      do not add delete/kill request smart callbacks for non-internal wl clients
      center wl clients on their parent when doing first commit
      move Ecore_X_Stack_Type member from client to x11 comp_data
      finish wl window stacks
      set gadgets in the editor's pointer site as moving
      more accurately determine gadget editor visibility
      add module file to E_Module struct
      apply client hints when rescaling a client
      optimize setting zone useful geometry as dirty
      rescale x11 clients after fetching hints
      make client size hints apply more accurately
      save config automatically when removing gadgets
      add gadget site as param for gadget wizard callbacks
      split out gadget enums into separate header
      add function to return a currently-active menu
      implement action routing for wayland clients
      extend key action routing for general action contexts
      make action routes usable in subcompositors
      don't arbitrarily bind version=1 for wl extension resources
      make menu_show action pop the menu in automatically-calculated direction
      make mouse-activated menus function as expected with 0 passed as activate time
      do not defer wl gl init
      clamp internal win min/max size hints to 0
      set clock gadget id on creation
      destroy gadget configs when deleting a gadget site
      don't center wl popups on their parents
      add wayland variable to pkgconfig
      avoid object hide animations during shutdown
      handle case where eglBindWaylandDisplay fails during wl init
      prune gadgets from editor if destroyed while editor is active
      disallow demo gadget ids from counting towards wizard success
      further improve keyboard handling while gadget editor is active
      handle destruction of demo gadgets without crashing
      add support for external gadget providers in the gadget editor
      manually get client under pointer for checking x11 pointer focus
      do not apply x11 pointer focus if key/mouse grabs exist
      capture zone for newly-added bryces based on name
      make menu autoplacement more consistent by preferring DOWN placement
      add internal action for showing a menu using object geometry
      set gadget ctxpopup priority based on anchor
      end xdnd operations on window hide if no FINISHED event is received
      don't force xwl drag client motion for override drag clients
      use xwindow check to determine whether to check icccm accept/take focus attrs
      don't set focus attrs in wl surface commit for xwl clients
      always align ibar inner box to the left
      set transparent state for luncher preview wins when win has alpha
      do not center xwl clients on their parent during first commit
      send theme signal for dialogs when no buttons are present
      only pop a single dialog to notify about all fail themes in theme dialog
      block updating window remembers while applying them
      use EC_CHANGED for client menu attr changes
      add separate desklock key up handler to correctly handle caps lock on wayland
      ensure client rescale picks up current geometry
      unify tasks module client property handlers
      avoid hiding->showing->hiding->etc submenus for active menu items
      add MISC client property event to be manually triggered whenever misc props change
      refill tasks gadgets on MISC client property events
      re-select previously selected font+size in font class config
      clamp xsettings font size to 12 when size is 0
      only update wl client window size on commit if no pending resize exists
      handle focus reverting correctly when using desk flip all actions
      replace existing resize pointer mode for x11 client-initiated resizes
      lock menu eventing during menu idler positioning
      use menu item geometry to determine whether menu item is onscreen
      only set new clients to current desk if desk has not yet been set
      temporarily cache x11 configure requests which reposition hidden windows
      remove invalid framelist call on frametable object in imc dialog
      check imc exe existence before showing in imc dialog list
      locally store the backlight level when suspending/hibernating
      don't set gadman overlay gadgets as editing if overlay not visible
      batch x11 maximize state change requests
      force min size calc on dialog show
      replace <br> with <ps/> for all text
      make grab dialog text read a bit more clearly
      always use client geometry for comp object centering functions
      do not add del callback for demo mixer gadgets
      remove distro packaging files
      handle gadget ctxpopup placement for desktop gadgets
      set moving gadgets in pointer site to have moving state
      perform gadget site layout before calling drop callback
      destroy dropped gadgets after drop operation completes
      fix color class dialog sizing
      use client geometry for fileman popup positioning instead of win object geometry
      use evas size hints for image widget internals if internal obj is not edje obj
      go back to image widget for video filepreviews
      use client frame for internal win geometry setting on show
      perform client zone updates on canvas move/resize when not ignored
      do not rescale override x11 clients during hint fetching
      use clone of remembers list in window remember config
      simplify placed flag setting during wl surface commit
      handle xdg "autostart" directories in apps dialogs
      handle bryce setup when theme is broken
      add gadget api for determining if a gadget site is a desklock site
      block some gadgets from appearing on desklock gadget sites
      hide wl shell clients again after mapping if clients are on a hidden desk
      track setxkbmap processes and allow only one to run at a time
      check whether gadgets are elm objects before calling elm functions
      add spacer gadgets for bryces
      clamp luncher icon size to 8x8
      Revert "force recalc on bryce scroller when doing recalc on gadget site"
      manage corresponding elm profiles when changing e profiles in cfg dialog
      set elm profile to match e profile during startup
      Revert "handle updates_full when adding comp object update regions"
      force client render on mirror show for clients which have not yet been rendered
      don't pretend randr mode can be null when it can't
      check correct client prop bitflag in tasks module event
      initialize stack variables
      check returns for read/write to powersave fds
      prevent leak on tiling insert failure
      use int array for client maximize hint state update
      formatting
      use focus_set_with_pointer to focus from clients menu (middle click)
      remove e_util_pointer_center()
      set packagekit popup title entry as non-editable
      track gadget ctxpopups and reposition within zone on resize
      redo wireless gadget network list popup to use a table
      do not reset existing client damage on resize if tiler size matches pixmap size
      move pending client render queue in pixel callback to before render call
      return during client pixel callback if pixmap is dirty and no updates exist
      avoid adding render updates on client resize while shading the client
      recalc desktop gadget sites on compositor update event
      rename E_EVENT_COMPOSITOR_RESIZE -> E_EVENT_COMPOSITOR_UPDATE
      check for matching '/' in screen edid before fuzzy matching in randr init
      use correct string for randr screen fuzzy matching
      set shaped client image alpha after setting image data
      don't update clock timer for time gadgets when deleting a non-advanced gadget
      stack gadgets below site event rect when reparenting gadget
      add desklock gadget site event rect to event grabber while editor is visible
      add time config event rects to gadget popups list
      always set gadget ids when creating new non-demo gadgets
      block pager gadgets on desklock sites
      do not force client focus setting after calling e_desk_last_focused_focus()
      fix autotools sysinfo module build
      fix uninitialized var warning in pager
      use tar-ustar for autotools dist
      add meson files to autotools dist
      reset zone edge objects after comp canvas update
      disable auto positioning of gadget ctxpopups for now
      block all desk flips during window resize
      add more files to autotools dist
      further improve wireless gadget popup sizing
      warp pointer to center of internal dialog on show if dialog has focus
      apply pointer focus to existing config dialogs from settings window
      handle first time desk setting for fullscreen clients without crashing
      remove fullscreen clients from vdesk clients list when toggling sticky state
      restore 'application name' remember setting in dialog
      make some pager global vars EINTERN
      add options for hiding service types in wireless gadget
      refresh wireless gadgets upon toggling hide for services types
      only show options for hiding non-active wireless services in gadgets
      make spacer gadgets smarter when multiple spacers exist
      always hide wireless non-wired icons in gadget if wired connection exists
      use animator del function to delete comp object animators
      handle shade <-> unshade toggling in same frame
      add/use helper function for rescaling individual clients
      bump efl version reqs to 1.20.3
      handle gadget site layout when last gadget in site is a spacer
      revert gadget ctxpopup autopositioning attempts
      resolve desktop spec issues with emixer.desktop
      22.0-alpha release
      0.22.0-alpha NEWS updates
      unset release mode
      install wayland session file
      install session files conditionally based on the available session types
      use EC_CHANGED when setting changed flag in client idler
      hide clients again after show in idler if clients are on hidden desk
      add some hidden boxes to use as gadget popup hover parents
      block recursive mouse eventing in bryce action handlers
      handle unmovable gadgets in gadget move action
      flag zone/edge mouse binding activation with ON_HOLD
      fix clickable edge binding activation with other mouse buttons
      remove futile null check
      avoid div by 0 in gadget layout
      fix meson wayland build without drm
      remove fdo interfaces from music control dbus xml
      don't perform zone updates on client resize
      make e_bindings_modifiers_from_ecore() an externally usable function
      store the currently active key binding as an accessible variable
      add a client parameter to wl key down/up event processing functions
      add action router action to route specific key presses to specified clients
      add fd passing to aux hints protocol
      move meson-chmod.sh into meson/
      require efl 1.20.4+
      fix typo in finding chmod meson script
      fix meson wayland-only detection when xwayland is enabled
      do not perform client moves during comp updates
      remove input-only client fastpath to resize crashes
      fix undefined variable warnings for meson build
      fix proxy_excludes handling for connman in previous commit
      don't do full client rescale on x11 hint change if not maximized/fullscreen
      use correct env vars for connman proxy setting
      use client geometry for visibility effect geometry, not comp object geometry
      emit E_EVENT_EXEC_NEW_CLIENT with phony exes
      Revert "do not perform client moves during comp updates"
      block client rescales during render updates
      do not unnecessarily rescale clients
      22.0-beta release
      0.22.0-beta NEWS updates
      unset release mode
      unbreak nls build
      don't show xwayland clients unconditionally on commit
      defer wl startup apps until after xwayland init completes
      add comp object function to get the content of a util_add object
      move gadget editor help text onto the editor popup
      pass keys through xkbcommon under wayland lockscreen
      do not set E_Client->take_focus for popup wl clients
      simplify focus on commit block for wl clients
      handle gadget site layouts using accurate parent geometry
      clamp expanding gadget size to 0 to prevent sizing overflows
      do ecore-x shutdown on xwayland shutdown
      redo bryce eventing
      deduplicate global gadget handler variables
      block gadget configuration unconditionally while desklock is active
      set comp object alpha state when applying native surface
      add max size input rects for wl clients on creation
      handle x11 shaped input under xwayland
      set default cursor on root window for xwl pointer
      Revert "disable option for mouse to use Application theme if we are running in Wayland"
      move 'show cursor' option in mouse settings inside frame
      do not show cursor theme options in wayland compositor mode
      move cursor theme options into separate frame
      do not apply enlightenment cursor theme for xwayland clients
      block relative motion event sending when pointer is outside input area
      use e_client_unfullscreen() to handle xdg-shell unfullscreen requests
      Revert "do not apply enlightenment cursor theme for xwayland clients"
      check for non-wl compositor when forcing application cursors onto pointers
      always use e cursor theme for canvas pointers
      recreate x11 root pointer when changing application<->enlightenment theme
      add render update when showing clients if damages exist
      add client refs for the nocomp client
      do not unqueue render when deleting a client's render update
      ignore set_input_region requests for wl surfaces which are cursors or drags
      set null input regions for surfaces upon calling set_cursor or start_drag
      null wl clipboard+selection source pointers when destroying clipboard source
      cancel wl selections after removing destroy listener
      make some find_program() calls non-required in meson build
      require efl 1.20.5
      22.0-rc release
      0.22.0-rc NEWS updates
      unset release mode
      move x11 compositor cleanup into shutdown function
      add client refs for volume control sinks
      unset client's mouse-in state on mouse out even while fullscreen or deleted
      send wl pointer leave for deleted clients if viable
      unset xwayland client changes.pos flag during xwl->wl switch if client is unplaced
      block wl modal window destructor from intercepting xwl modal windows
      handle more mouse buttons under wayland
      explicitly free client animation agent object during fullscreen operation
      pass key downs through xkbcommon
      fix non-pam build with meson
      disable cpuclock powersave updating for demo gadgets
      correct some edje api usage in luncher preview setup

Romain Naour (4):
      E: include uuid.h only when Wayland support is enabled.
      configure.ac: wayland only build fix
      e_xkb: add guard around skip_new_keyboard
      E: fix Wayland without xwayland build

Simon Lees (4):
      README.wayland --enable-elput is required for building wayland efl
      Also set QT_STYLE_OVERRIDE
      I should probably be in the Authors list
      More mailmapping

Stefan Schmidt (10):
      mailmap: sync updated file from efl repo
      e_fm: fix last commit to compile again with clang
      luncher: fix shadowed local variable
      luncher: mark unused function parameters as such
      mixer: mark unused function parameter as such
      mixer: remove unused variables
      e_fm: remove unused variable
      e_comp_object: remove unused variable
      e_client_colume: remove unused variables and add EINA_UNSED where needed
      meson: remove double entry for NLS support option

Stephen 'Okra' Houston (158):
      Luncher: Make sure previews are hidden and destroyed.
      Luncher: Make sure to delete preview when icon is deleted.
      Luncher: Fix leaking caused by luncher.
      Luncher: Be aware when a ctxpopup has been dismissed but not yet deleted.
      Luncher: Add preview windows to the popup on exec if they are already visible.
      Luncher: Pass the e_comp client to the preview add callback.
      E_Config: Auto load luncher if ibar is enabled and bump config.
      E_Config: Fix auto load of luncher
      Fix luncher crash on right click
      Sysinfo: Add sysinfo to the configure list.
      Luncher: Fix right click menu popup crash.
      E gadgets: Prepare for sysinfo to arrive.
      Enlightenment: Add the sysinfo gadget that includes battery, temp, frequency, cpu, mem, and net
      Enlightenment: Sysinfo gadget supporting files
      Enlightenment: Add the necessary Makefile for sysinfo.
      Enlightenment: Add a scroller to the sysinfo gadget.
      Enlightenment: Make sure to compile sysinfo gadget for bsd correctly
      Enlightenment: Fix double compare in batman and fix compilation on bsd.
      Batman: Allow multiple instances of batman to work correctly.
      Enlightenment: Fix cpumonitor gadget to do per core.
      Enlightenment: Fix cpumonitor gadget core usage calc
      Enlightenment: Sysinfo gadget: Calculate aspects correctly.
      Enlightenment: Improve cpumonitor calculation
      Enlightenment: Sysinfo gadget. Free edje messages.
      Enlightenment: Sysinfo gadget: Free up the edje message correctly.
      Enlightenment: Pager gadget - Add a button to configure virtual desktops.
      Enlightenment: Fix coverity issues related to new sysinfo gadget
      Enlightenment: Make gadget editor popup scrollable:
      Enlightenment: Luncher gadget - Scroll the window previews when the extend beyond the current screen.
      Enlightenment: Wireless gadget - place the ctxpopup after the size hints are set, not before
      Revert "luncher: do not add clients twice"
      Revert "luncher: do not add clients twice"
      Enlightenment: Fix luncher to not duplicate clients who report as both having and not having a .desktop.
      Enlightenment: Luncher gadget - Don't delete the hash if there is more than one client using it.
      Enlightenment: Luncher gadget - Add more duplicate checking.
      Enlightenment: Sysinfo gadgets - Remove temporary gadgets correctly.
      Enlightenment: Luncher gadget - don't allow .desktop actions on non .desktop icons.
      Enlightenment: Luncher - Use internal icons for non .desktop clients.
      Enlightenment - Luncher Gadget - Show preview immediately for icons that have iconified windows.
      Enlightenment: Sysinfo Gadget - Add an informative popup, as well as a config panel to memusage, cpumonitor, and netstatus.
      Enlightenment: Sysinfo Gadget - Properly mark popup as deleted.
      Enlightenment: Luncher gadget - Don't proceed with hiding the preview if the preview's icon is NULL.
      Enlightenment: Sysinfo gadget - Calculate netstatus max automatically and send percentages to the theme.
      Enlightenment - Luncher gadget - Don't assume all internal windows are the same.
      Enlightenment - Luncher Gadget - This fixes a massive bug in client comparisons within luncher.
      Enlightenment: - Sysinfo gadget - Calculate net percentages correctly.
      Enlightenment - Sysinfo Gadget - Allow configuring of max speeds for netstatus gadget.
      Enlightenment: Whitelist and autoload the sysinfo gadgets.
      Enlightenment - Sysinfo Netstatus Gadget - Use proper data passed to callback to avoid crash.
      Enlightenment: Sysinfo Gadget - Show real time data in popups and fix sizing of memusage and cpumonitor.
      Enlightenment: Sysinfo Gadget - Base size on edje extends calcs.
      Enlightenment - Sysinfo Gadget - Size all sysinfo gadgets by aspect - should allow for proper theming.
      Enlightenment - Sysinfo Gadget - Add some safety fallbacks for thermal - Fixes a dnd crash.
      Sysinfo Gadget - Cpumonitor gadget resize callback needs to be removed after resize to prevent looping.
      Sysinfo Gadget: Don't set aspect to 1:1 out of the box. Let edje determine aspect.
      Sysinfo - Netstatus gadget - Fix netstatus calculation.
      Enlightenment - Fix Coverity issues CID 1369051 and 1369052
      Luncher - Free hashes at the appropriate time.
      Luncher: Remove closed clients from the preview popup if visible, and close the popup if no more clients are active.
      Wireless: Don't autoclose left click popup in order to be on the same page with other gadgets.
      Luncher: Don't update and show the preview on client del unless the preview exists.
      Batman - Don't show hard to read and redundant text in the gadget itself - Move it to a popup on left click.
      Batman - Add the config popup to configure batman.
      Luncher: Determine if client icon is an evas_object_image or edje_object.
      Batman: Don't show time left in the popup when battery is charged.
      Pager and Batman: Use pages in config popup and standardize look.
      Cpumonitor: Add a similar popup to memusage.
      Batman - Don't destroy the popup on hide.
      Sysinfo gadgets: Prevent info popup from getting stuck.
      Sysinfo Gadgets: Allow for vertical themes for all sysinfo gadgets
      Use an event rect to better handle mouse events in cpumonitor.
      Luncher/Batman: Don't access an invalid icon structure.
      Cpumonitor: Return the correct object.
      Batman: Only show unique batteries.
      Bryce: Don't proceed to process the mouse down event structure if it is null in the post callback.
      Revert "Bryce: Don't proceed to process the mouse down event structure if it is null in the post callback."
      Luncher: Unify icon image file setting code.
      Luncher: Add config options to function only as a launcher, only as a taskbar, or as both.
      Luncher: Check for popups when determining clients to add to the tasks.
      Merge branch 'master' of git+ssh://git.enlightenment.org/core/enlightenment
      Luncher: Check popup status on the correct client.
      Sysinfo: Use the correct define for DragonFly.
      Luncher: Begin work to handle engage sizing correctly.
      Luncher: Reset scale on mouse out or new effect.
      Luncher: Don't try to perform aspect set on a deleted bar.
      Luncher: Show the preview popup based on icon placement.
      xkbswitch: Remove e_widgets from the add dialog and replacing them with elm
      Xkbswitch: Use E_Dialog (which uses elm) instead of elm_win directly to make use of built in extra features.
      Luncher: Show previews on client creation if the point is inside of the corresponding icon.  Pass events on popups once they are deleted.
      Luncher: Improve mouse in/preview management and fix luncher bar on the desktop.
      Luncher - Set an icon to inactive when the preview is dismissed as well as on mouse out.
      Luncher: Improve sizing, animations (including engage), and the functionality of a bar on the desktop.
      Luncher: Make current preview tracking per instance.
      Luncher: Make transitions such as engage smoother by including the icon spacers in events.
      Bryce/Gadgets:  Add backlight, xkbswitch, and mixer gadgets.  This should round out the core gadget ports.
      Backlight Gadget: Properly set on hold events.
      Gadgets: Send proper theme strings, and set aspect/size correctly.
      Sysinfo: Fix use for non linux/bsd os's.
      Mixer/Backlight: Set correct levels on creation.
      Luncher Improvements: Don't add multiple global handlers for the same events and don't show preview immediately for iconic.
      Pager Gadget: Fix potential crash on screen changes such as screen size change.
      Luncher: make sure all global handlers get created -- check for different luncher types in the callbacks.
      Gadgets: Remove the word "Gadget" from the name of gadgets.
      Luncher: Allow the size of previews to be configurable.
      Gadgets: Follow gadget theme naming conventions.
      Gadgets: Clamp aspect sets to a minimum of width and height minimum of 1.
      Wireless Gadget: Make the network list popup and right click popup work correctly.
      Luncher: Hint the preview popup to have the same min size as the preview windows.
      Thermal Gadget: Add configuration popup.
      Cpuclock: Fix sysinfo cpuclock theme name.
      Thermal config: Fix rounding and math issues when switching between units.
      Sysinfo - Cpuclock: Add the left click info and right click config popup.
      Sysinfo: Update Cpuclock and Thermal to the powersave api.
      Thermal: Add left click info popup
      Cpuclock: Clean up some governor handling code.
      CPUClock: Allow setting of governors.
      Luncher: Remove useless and dangerous global.
      Thermal: Add units.
      Gadgets: Make sure to avoid conflicts with functions and globals.
      Cpuclock: Don't debug print the exec string.
      Backlight Gadget: No need for a settings button as the uniform right click does the same.
      Gitignore the sysfs frequency bin.
      Sysinfo Gadgets: Thread handling improvement. Pause on Screensaver. Follow powersave.
      Sysinfo Gadget: Thread Lifetime vs Object Lifetime management.
      Sysinfo Gadget: Unify define macro checking.
      Sysinfo Gadget: More thread vs object lifetime work: Make threads no longer dependent on the main loop objects and vice versa.
      Netstatus - Fix dupclicate Receiving labels.
      CPUMonitor: Don't try and delete objects after the gadget has been removed.
      Sysinfo Gadgets: Provide only demo data and don't poll/thread when gadgets are in demo mode.
      Backlight: Use a static number for demo purposes.
      Mixer Gadget: Use demo gadget in places where demo gadgets are used.
      Backlight: Don't add del callback for demo gadgets.
      Gadgets: Don't set gadgets to expand.
      Pager gadget: Take advantage of new theme. For this to work, you must update EFL first.
      Luncher: Don't use a second object for the overlay. This requires EFL updating due to theme.
      CPUMonitor: Fix aspect by using correct theme names.  This requires an EFL update too.
      CPUMonitor: Make sure to set the number of cores so aspect calcs.
      Batman: Set the demo gadget to have full battery.
      CPUMonitor: Don't pack the box in sysinfo mode.
      Don't dereference NULL pointers in sysinfo and cpuclock.
      Pager: Add the option to switch between live and plain pagers as well as switch to plain pager when saving power.
      Pager: Don't empty/fill pager unecessarily.
      Pager: Remember to remove deleted desks.
      Luncher: Don't set preview state to menu. Set to alpha. Requires EFL update.
      Luncher: Remove the engage feature
      Netstatus: Don't show an incorrect unit on the popup label.
      Netstatus: Use proper label for throughput in config.
      Show netstatus output in bits per second while still polling based on ticks to avoid unnecessary wake ups.
      Netstatus: Average out throughput when time elapsed is greater than 1 second.
      Luncher: Don't keep callbacks placed on dead objects hanging around.
      Luncher: When the icon is deleted, don't leave client menu callbacks hanging.
      Sysinfo gadgets: Revert all uses of faulty e_powersave_sleeper.
      Temperature module: Don't use e_powersave_sleep.  It doesn't work for ticks faster than a second.
      Fix bad formatting.
      Update netstatus in/out in the same file read. Fix cpufreq to use powersave again.
      Pager gadget config: Don't add icon to an evas, add it to an elm widget.
      E Exe: Since we no longer ref clients in the phony cb, don't free them after reffing them in instance_client_add.
      E Exe: Semi revert 2082bb51d3abffd991b4d791ace2567888e2e9fb. The ref count was off to begin with.

Stephen Houston (8):
      Introduce pager gadget using new gadget api.
      Enlightenment - Luncher Grid Gadget - Do not double-free lists during empty.
      Enlightenment - Sysinfo Gadget - Size cpumonitor correctly wrt to bryce.
      Nothing to see here. debug--
      Sysinfo: Cpuclock, Netstatus, and Thermal now use progressbars in the popups to unify and match all sysinfo gadgets.
      Luncher: Keep aspect on previews - don't force max sizes.
      Luncher: Don't manually apply min sized aspect - The edje aspect set call handles this.
      Align the preview properly.

Stephen okra Houston (35):
      Luncher: Introduce Enlightenment's new launcher/taskbar/iconify manager: Luncher
      Luncher: Preview popup should have a shorter delay.
      Luncher: Respect events when on hold.
      Luncher: Don't send mouse events when modifiers are set.
      Luncher: Improve client tracking.
      Merge branch 'master' of git+ssh://git.enlightenment.org/core/enlightenment
      Luncher: Improve client/exec count.
      Luncher and Pager gadgets: Handle multi head and use the correct zone.
      Time Gadget: Change the calendar month on mouse wheel.
      Pager: Fix gadget zone.
      Pager Gadget: Only empty/fill pager if zone has changed.
      Luncher: Use the desktop for client population if exists.
      Luncher/Pager Gadget: Fix coverity issues.
      Pager Gadget: Respect HOLD flag as well as modifiers on mouse events.
      Luncher: Use E_FREE_FUNC to del variables that are checked for null.
      Luncher: Remove useless if statements and make sure to delete an order when instance is deleted.
      Luncher: Send the off signal with orientation detail so themers can theme icons based on orientation.
      Luncher: Use more accurate buffer sizes.
      Pager Gadget: Use the correct value for the popup checkbox when config window is opened.
      Luncher/Pager Gadgets: Fix coverity warnings for CID 1365330, CID 1365332 and CID 1365405
      Pager Gadget: Use the current zone for popups.
      Gadcon Pager: Don't show popup if no gadcon pagers exist.
      Luncher: Make sure that there is a valid drop before object on dnd.
      Luncher/Pager gadgets: Make sure to lock/unlock the gadget site on dnd.
      Luncher Gadget: Don't set aspect twice.
      Luncher: Fix shadowed declarations.
      Luncher: Fix ctxpopup delete leak -- Add the style chooser to the config and the engage style.
      Luncher: Make sure to free the previous window preview, not the current one on mouse in.
      Luncher module: Use the correct icon for the .desktop.
      Luncher: Share common code for dismissing the window preview.
      Luncher: Make sure to correctly create config.
      Luncher: Add the second gadget to luncher: Luncher Grid.
      Cpufreq: Don't check for NULL then depend on the value not being NULL. Fixes CID 1365406
      Luncher: Fix Coverity Issues: CID 1366276 1366275
      Pager Gadget: Don't recalculate the pager if the zone is NULL.

William L. Thomson Jr (1):
      meson: Make sleep.sh and hibernate.sh not required, fixes T6210

YeongJong Lee (1):
      fix korean translation mismatch

scootergrisen (1):
      Update danish translation


Release 0.21.10:
---------------------
Al Poole (1):
      Efm: file properties, fix widget sizing issue.

Carsten Haitzler (5):
      wireless module - dont segv e if connman daemon restarts
      e - fix eet image format test to actually use key when loading
      filepreview - properly set min size on cells not in a broken way
      xsettings - fix warning for buffer that could be a bit small
      batget - fix warnings about buffer sizes

Derek Foreman (1):
      Remove ecore_drm support

Marcel Hollerbach (6):
      e_startup: check for efreet errors
      tiling: show notification if a client cannot be tiled
      everything: use correct edje api
      mixer: find a better name
      tiling: give a better error message if a client doesnt fit
      everything:declare this object as const

Mike Blumenkrantz (79):
      reject gadget site layout attempts only when it would be impossible
      do not reposition new bryces after using editor
      clamp vertical bryce size to useful zone geometry
      use explicit rounding for bryce scaling
      do not add delete/kill request smart callbacks for non-internal wl clients
      apply client hints when rescaling a client
      rescale x11 clients after fetching hints
      don't arbitrarily bind version=1 for wl extension resources
      make mouse-activated menus function as expected with 0 passed as activate time
      do not defer wl gl init
      clamp internal win min/max size hints to 0
      set clock gadget id on creation
      destroy gadget configs when deleting a gadget site
      avoid object hide animations during shutdown
      handle case where eglBindWaylandDisplay fails during wl init
      capture zone for newly-added bryces based on name
      make menu autoplacement more consistent by preferring DOWN placement
      set gadget ctxpopup priority based on anchor
      end xdnd operations on window hide if no FINISHED event is received
      don't force xwl drag client motion for override drag clients
      use xwindow check to determine whether to check icccm accept/take focus attrs
      always align ibar inner box to the left
      send theme signal for dialogs when no buttons are present
      only pop a single dialog to notify about all fail themes in theme dialog
      block updating window remembers while applying them
      use EC_CHANGED for client menu attr changes
      avoid hiding->showing->hiding->etc submenus for active menu items
      re-select previously selected font+size in font class config
      clamp xsettings font size to 12 when size is 0
      only update wl client window size on commit if no pending resize exists
      handle focus reverting correctly when using desk flip all actions
      replace existing resize pointer mode for x11 client-initiated resizes
      lock menu eventing during menu idler positioning
      use menu item geometry to determine whether menu item is onscreen
      only set new clients to current desk if desk has not yet been set
      temporarily cache x11 configure requests which reposition hidden windows
      remove invalid framelist call on frametable object in imc dialog
      check imc exe existence before showing in imc dialog list
      don't set gadman overlay gadgets as editing if overlay not visible
      batch x11 maximize state change requests
      force min size calc on dialog show
      always use client geometry for comp object centering functions
      handle gadget ctxpopup placement for desktop gadgets
      set moving gadgets in pointer site to have moving state
      perform gadget site layout before calling drop callback
      destroy dropped gadgets after drop operation completes
      fix color class dialog sizing
      use client geometry for fileman popup positioning instead of win object geometry
      use evas size hints for image widget internals if internal obj is not edje obj
      use client frame for internal win geometry setting on show
      perform client zone updates on canvas move/resize when not ignored
      do not rescale override x11 clients during hint fetching
      use clone of remembers list in window remember config
      handle xdg "autostart" directories in apps dialogs
      handle bryce setup when theme is broken
      track setxkbmap processes and allow only one to run at a time
      Revert "force recalc on bryce scroller when doing recalc on gadget site"
      Revert "handle updates_full when adding comp object update regions"
      force client render on mirror show for clients which have not yet been rendered
      initialize stack variables
      use int array for client maximize hint state update
      use focus_set_with_pointer to focus from clients menu (middle click)
      track gadget ctxpopups and reposition within zone on resize
      do not reset existing client damage on resize if tiler size matches pixmap size
      move pending client render queue in pixel callback to before render call
      return during client pixel callback if pixmap is dirty and no updates exist
      avoid adding render updates on client resize while shading the client
      check for matching '/' in screen edid before fuzzy matching in randr init
      use correct string for randr screen fuzzy matching
      set shaped client image alpha after setting image data
      don't update clock timer for time gadgets when deleting a non-advanced gadget
      stack gadgets below site event rect when reparenting gadget
      add time config event rects to gadget popups list
      reset zone edge objects after comp canvas update
      block all desk flips during window resize
      warp pointer to center of internal dialog on show if dialog has focus
      apply pointer focus to existing config dialogs from settings window
      handle first time desk setting for fullscreen clients without crashing
      remove fullscreen clients from vdesk clients list when toggling sticky state


Release 0.21.9:
---------------------
Amitesh Singh (1):
      e widget entry: fix the compilation warning

Carsten Haitzler (2):
      e - fix entry wrapper - e entry was plain. elm is markup. do it properly
      randr - discovered new output names that are display panels in laptops

Derek Foreman (13):
      Don't require dmabuf buffers to be writeable
      Fix wl_drm session activation callback
      Fix wl_drm session (de)activation callback
      Remove some duplicate operations
      Fix unused var compiler warning in wl_drm
      clean up some code
      Clear the native surface structure before initializing it
      Initialize the Evas_Native_Surface to 0 for dmabuf tests
      Test dmabuf via native_surface_set even in software render
      Make wayland clients render when only visible from mirrors
      Fix xwayland selection crash
      Don't block wayland client updates during screen saver fade out
      Fix geometry for drm outputs

Jean-Philippe ANDRÉ (1):
      pulse: do not leak strbuf

Marcel Hollerbach (3):
      emixer: use a better name for the sink inputs
      mixer: the name has to be a stringshare
      mixer: do not leak a allocated string

Mike Blumenkrantz (81):
      check efm path existence before using it during dnd selections
      unset wl button mask when beginning a move/resize operation
      unset wl selection target client if that client is deleted
      don't dup fds during xwl bridged selection transfer, this happens in libwayland
      add error messages when symbols fail to resolve in xwl init
      force client pixmap refresh immediately during resize if nocomp is active
      do not perform zone updates on ignored clients during evas callbacks
      use FOREACH_SAFE when walking client list during logout
      another fix for e_comp_wl->ptr.x/y coords being wl_fixed instead of ints
      perform client raise before triggering move/resize BEGIN client hook
      delete client raise timer when beginning a move/resize operation
      do not trigger events/bindings on zone object events with timestamp==0
      only remove left/right maximize when removing vertical if left/right is set
      don't null pointer after deleting internal win during wl delete request
      hook client object unref callback to cleanup comp object internals
      use fake xinerama screens when initializing wl outputs
      reject client mouse move if coords match previous position
      try only 1 reconnect to pulse when mixer fails to init
      set pass events on shape debug rects
      print object type if name is null during shape debug
      if gadget wizard returns a zero id, remove gadget from site and destroy
- have your system administrator add LIBDIR to '/etc/ld.so.conf'
      update gadget position during a resize from top/left edge
      use seat0 as default seat name instead of default
      use safe list iterating when clearing a gadget site during shutdown
      block "user" client resizes during comp client updating phase
      perform move after resize during comp object show
      multiply pointer axis values by 10 for wl clients
      check exit status from auth subprocess
      make e_comp_object_frame_allowed() return false for ignored clients
      use xwayland check for clients when checking whether to reset focus to root
      don't run x11 focus (un)set callbacks for override clients
      don't force shm for xwayland launch and enable gl
      don't call comp object cleanup functions for clients without comp objects
      only unredirect clients during comp update after 3 failures
      try redirecting failed clients again during resize
      don't crash in randr module when using fake xinerama screens
      simplify drm output update event by using randr screen refresh queuing
      only call old ecore_drm2 functions if built and run against < 1.20 efl
      add "focus" mode for render debug
      unset DISPLAY in mixer when performing pulseaudio operations under wl
      use kbd focus resource's client instead of "focused" client in data device
      unset gadget site's layout pointer after destroying gadgets
      move gadget del callbacks to AFTER priority
      update time gadget date string during clock timer
      only set qt theme override env vars if option to do theme matching is enabled
      rename clock+time module event handler lists
      disable clock+time gadget updating during dpms
      freeze pointer animations while screensaver is active
      prune unconfigured gadgets from comp object sites upon site del
      only store the compositor's own data manager resource to e_comp_wl->mgr.resource
      don't free x11 clipboard source immediately
      check for different types of load errors during startup image load tests
      hide pointer cursor clients when unsetting them
      use more descriptive label than '???' for unconfigured outputs in scren config
      use real sizing for screen config mode list, not 1xheight
      do not set e_comp log level
      use e_util env functions in time module
      perform immediate move on bryce during autosize
      do not use elm api to unset centered flag during resize
      rework internal win centering
      resize comp bg_blank_object on zone update
      save xwindow of x11 selection owner, not client
      add special case for xwl-originating drags to set dnd actions
      focus x11 root window on init when starting with xwayland
      handle xwl data source cleanup more effectively
      free xwl selection atom names after creating selection source
      set xwl-originating data source dnd actions during source creation
      add text/plain;charset=utf-8 to xwl-created wl clipboard data source
      don't create xwl receive pipe for SelectionRequest when getting the selection
      reject invalid comp object resizes
      apply gadget aspects with greater precision
      abort gadget site layouts if the gadget site has not been sized
      return immediately when setting a null gadget style if current style is null
      show clients immediately after pixmap refresh if visibility is pending
      return updates_full state from e_comp_object_damage_exists()
      use ecore_x_netwm_opacity_get() for x11 opacity checking
      handle updates_full when adding comp object update regions
      reset comp object update regions when a render occurs
      continue to fetch netwm opacity hint if it changed since the last fetch
      set client opacity any time netwm hint has changed in fetch
      remove left/right maximize before removing vertical maximize

Release 0.21.8:
---------------------
Al Poole (4):
      Fix macro namings in relation to endianness.
      Fix compiler type warnings (snprintf)
      E keyboard settings - use the same icon as the keyboard settings dialog
      Add user to AUTHORS.

Carsten Haitzler (3):
      e randr2 - fix freeing of stringshare by making it a stringshare
      fix fullscreen no blank logic in e's dpms code
      further fixes to screensaver/banking with window states like fullscreen

Mike Blumenkrantz (65):
      hide wl clients before deleting them on surface destroy
      comment out inlist member of E_Comp_Object struct
      better protect comp object internals from dereferencing freed clients
      add all wl client frame callbacks with priority AFTER
      unset deskmirror client's client pointer upon client deletion
      unset deskmirror client's client pointer upon client deletion
      defer menu activation mouse-up feed
      set ON_HOLD when activating start gadget
      add handler for EFREET_EVENT_DESKTOP_CACHE_BUILD to e_order init
      do not use saved e_randr screens if fake screens have been added
      do not force comp objects to render for their proxies if real_hid is set
      show x11 parent windows during reparent only if not withdrawn
      return during comp object pixels function if client was deleted during render
      perform frame adjustments before applying wm spec hints during unmaximize
      only save client size info on maximize/fullscreen when protocol visible
      check changes.pos during client maximize/fullscreen and adjust window coords
      do not start xwayland repeatedly
      call wl/x compositor shutdown functions directly during comp shutdown
      force iconic state for iconic x11 clients during shutdown
      move x11 iconic window init from e_hints -> comp_x initial fetch
      call e_randr2_shutdown in comp shutdown
      handle null E_Comp->screen during randr2 shutdown
      don't set minw for keyboard layout dialog
      only hide wl clients on surface destroy when surface is mapped
      handle nested compositor delete requests
      only set toolbar icon min size if icon exists
      always use jobs to create bryce menus
      handle window icons from elm for internal wins
      only re-set comp object position during show if client has been placed
      set dialog and tooltip flags for internal clients
      add wrappers for elm_win util create functions
      send wl client resize edges during focus-in/out send_configure
      set signal move/resize clients as action_client internally
      compare against e_client_action_get() for rejecting wl mouse events
      do not send mouse events to ssd wl clients if mouse is within ssd region
      use even more accurate wl callbacks for detecting ssd mouse in/out events
      always feed mouse events for wl client move events
      block x11 focus eventing under xwayland
      do not attempt to set window hidden hints on non-internal x11 windows
      account for late object setup when adding ssd mouse in/out callbacks
      disable client maximize anims when unmaximizing before a fullscreen
      always set E_Client->need_fullscreen when fullscreening
      force e_client_unmaximize() to complete during fullscreen operation
      slightly optimize maximize -> fullscreen protocol comms for wl clients
      check pixmap size before triggering maximize animation
      force animationless re-maximize when unfullscreening
      only center internal windows once
      adjust size for frame geometry in no-animation maximize path
      call "maximize" smart callback before "maximize_pre"
      re-set backlight level when resuming from suspend
      add a client's children to the skiplist during place routine
      do not arbitrarily center "lost" child windows, center them on the parent
      support clients as positioner objects in e_comp_object_util_center_on()
      add cache for dead x11 manager windows
      remove uuid references from e_pixmap.c
      re-set list of default desklock bgs when changing to custom bg in config
      set pass events on efm icons when deleting files
      make RENDER_DEBUG activate with E_RENDER_DEBUG env var
      make SHAPE_DEBUG activate with E_SHAPE_DEBUG env var
      explicitly set nested wl output canvas as a toplevel window
      avoid refocusing deleted wl clients during comp input ungrabbing
      set initial x11 window geometry for windows which do not have wm hints
      check image load error when checking dmabuf viability in gl
      better handling for iconify during comp object show/hide
      do not show iconic x11 clients on on icccm hint change

Release 0.21.7:
---------------------
Carsten Haitzler (19):
      enlightenment_sys - eina_init BEFORE switching uid - safer
      e ervything md5 code - fix warnings about alignment
      e fileman config - fix definite alignment bug with cast char to int ptr
      e theme conf config - fix casting char fileds to int ptrs
      e ptr cast via void fix to reduce warnings
      efm ipc - fix unaligned int read on ipc decode
      e comp x - fix property fetch to use int ptr from the start
      e xsettings - fix warnings about unaligned ptr access
      e comp - wl - add void cast to reduce warnings
      e notification - silence alignment warning
      efm - fix warnings for progress time display
      evry module - fix warning about comparing signed to unsigned
      e mixer pulse backened -f ix warning about use of uninit var
      e comp object - fix warning where a void cast is as goos as the old one
      e comp - fix stupid cast to from eina rect* to char* to eina rect* again
      e comp - quiet some warnings for casts that are ok
      tiling module - fix some warnings with casts and alignment
      efx - fix unaligned ptr fill that is actually a bug
      efm - fix nuisance warning about enlightenment

Derek Foreman (1):
      Dispatch wayland frame callbacks in the correct order

Marcel Hollerbach (1):
      tiling: dont use floating state when toggling

Mike Blumenkrantz (24):
      Revert "re-enable getting and setting output rotations in wl_drm"
      make e_pointer_object_set() a no-op when passing the existing cursor
      simplify mouse-out cursor reset for wl clients
      use 1x1 for unsized (internal) clients
      hide wl client cursors when set_pointer is passed a null surface
      add note in doc for "gadget_destroyed" callback re: callback ordering
      ref clients during exe_inst deletion to avoid invalid access after free
      start xwayland process 2.0s after module load
      only unset current pointer cursor object if new one is being set
      force mouse-out on wl clients during delete if mouse.in is set
      Revert "attempt to re-set wl surface pointer when popping back to "default" pointer type"
      reset compositor pointer cursor if wl surface destroy is the current cursor
      add specific handling for xwl cursor unsetting on mouse-out to ssd
      move wl data device focus-change handling to data device leave() fn
      simplify _e_comp_wl_data_device_drag_finished() slightly
      more correctly handle dnd completion for wl
      fix return code checking for errors when generating wl key events
      future-proof client hook inlist initialization
      always set E_Client->placed when successfully moving a comp object
      ignore all non-NORMAL type wl windows in e_place
      save config when toggling option to disable startup splash
      only move new bryces to zone on create, not existing ones
      show already-visible comp util objects when changing frame type
      Revert "e - wl mode - stop consuming 100 percent cpu"

Release 0.21.6:
---------------------
Andreas Metzler (1):
      10_typo_restore_LDFLAGS.diff: Fix typo in configure.ac (upstream), causing empty LDFLAGS.

Carsten Haitzler (8):
      tasks - calculate min width properly given a known height of a gadget
      efm - warning - change invalid #if toe #ifdef as this is right
      efm - fix ifs to be ifdef as they should be
      e bindings - fix warnings about possible use of undefined var
      appmenu - make appmenu work with click+release and not hide on focus out
      ibar - fix seg with ibar icon task menus are up while desktop files change
      e - wl mode - stop consuming 100 percent cpu
      e dialog - fix unreszable dialogs to not be 1x1

Christopher Michael (2):
      Use proper coordinate adjustment
      re-enable getting and setting output rotations in wl_drm

Derek Foreman (3):
      Fix wayland frame callback times
      Use a monotonic clock for frame callback times

Mike Blumenkrantz (11):
      null out animator pointers in efx stop() operations
      correctly set E_POINTER_RESIZE_BR mode for client keyboard resizing
      plug iterator leak in e_comp_object_render()
      remove extra SLEEP prints during startup on non-release builds
      free configs for demo gadgets on object free
      do not perform frame coord adjustments for re_manage wayland clients
      use persistent clipping for comp object input rects
      ensure that gadget internal del callbacks are handled before other callbacks
      handle pixmap_refresh() failure cases more accurately under wayland
      reset demo gadget id before deleting gadget object during drop operation
      add conditional updates for latest efl apis

Stephen 'Okra' Houston (2):
      Enlightenment: Make gadget editor popup scrollable:
      Enlightenment: Wireless gadget - place the ctxpopup after the size hints are set, not before


Release 0.21.5:
---------------------
Carsten Haitzler (1):
      e_util_defer_object_del - ensure order of deferred deletions are right

Christopher Michael (1):
      remove unused variables in e_comp_wl

Derek Foreman (5):
      Fix keyboard tracking when leaving an xdg shell window
      Fix crash when exiting an xdg shell application
      More aggressively prune keyboard focus list
      Stop sending key up/down events on focus change under wayland
      test dmabuf pixmaps properly

Mike Blumenkrantz (10):
      handle xdg-shell maximize/unmaximize calls correctly
      stack subsurfaces above their parents upon creation
      use more accurate determination for applying xdg-shell (un)maximize operations
      do not pop pointer types on client hide events if the client is pass_events
      set wl pointer surfaces to E_LAYER_CLIENT_PRIO during setup
      attempt to re-set wl surface pointer when popping back to "default" pointer type
      fix internal wl windows to exit when border X is clicked
      use better check for getting wl surface alpha from cursor pixmaps
      revert all sizing commits to ibar/ibox for the past year
      maintain "empty" object's size hints when ibar/ibox resizes

Release 0.21.4:
---------------------
Al Poole (1):
      efm - fix popup if file is a fifo

Alexander Pyhalov (1):
      actually check if PIE is supported for SUID

Carsten Haitzler (3):
      e fm - fix popup to not crash by referring to possibly deleted data
      cpufreq - move cpuinfo polling into thread to not block mainloop ever
      wizard - do not set scale to 1.2 forcibly. use dpi as the def prof says

Christopher Michael (2):
      check if a client is internal or not before deleting
      fix missing definition of DRM_FORMAT_XRGB8888

Derek Foreman (6):
      Block session recovery for internal windows
      Remove EVAS_CALLBACK_HIDE on shelf when freeing
      Increase area of tilers for regions
      Fix massive wayland input region brokenness
      Fix wayland opaque regions
      Stop passing dimensions to _e_comp_wl_surface_state_init

Joshua McBeth (1):
      add dbus message 'org.enlightenment.wm.Window.SendToDesktop'

Marcel Hollerbach (5):
      wizard: make page 065 translatable
      mixer: we changed that name when we merged the mixer in
      update german translation
      The potfile has changed,
      mixer: do not set back the value from emix once the drag is finished

Massimo Maiurana (1):
      Updating italian translation

Michaël Bouchaud (yoz) (2):
      mixer: fix the volume conversion calc into pulseaudio backend
      Revert "mixer: lock up the slider for the case a drag is in progress"

Mike Blumenkrantz (80):
      enforce bryce resizing when orientation changes
      add EINTERN function for renaming gadget sites
      fix bryce check for shelf existence on orientation/anchor to break when expected
      add zone number to bryce names
      do not check for shelf/bryce existence in opposing anchorages during bryce wizard
      further improve bryce portability across zones
      also do full bryce rename when moving between zones
      add new flag for zone edge objects to allow shape cutting while repeating events
      force bryce visibility during editor activity
      add gadget_site_(un)locked smart callbacks for forcing gadget site visibility
      call gadget_popup smart callback when configuring gadgets
      handle gadget_popup smart callback on gadget's display object
      set ON_HOLD flag when triggering gadget mouse buttion actions
      remove unused attribute from used param
      trigger bryce menus from right click if event has not been consumed
      fix bryce upgrade path from 0 -> 2 re:naming
      set ON_HOLD flag more accurately when activating gadget actions
      avoid extra recalc when resizing a bryce on its oriented axis
      add gadget site sizing workaround to avoid elm box sizing desync
      rename bryces when changing anchors
      loop bryce autosize recalc when gadget site has not yet calculated its size
      only find the session recovery remember if ec->remember is not it
      apply non-session recovery remember to client when creating recovery remember
      correctly handle applying of non-SR remember in remember config
      reject successive zone_geometry_dirty() calls
      trigger zone geometry events when updating zone/desk obstacles
      force min size on wireless popup during show
      add workarounds for ctxpopup geometry for use in input shape tiling
      force recalc on bryce scroller when doing recalc on gadget site
      handle no-orient gadget visibility based on site->events visibility
      force gadget site recalc on gadget object creation to ensure sizing
      copy gadget position from pointer gadget -> drop gadget when executing drop
      calc new gadget size based on ratio of size:target site size
      allow client frame changes when switching from frame -> no frame
      optimize out re-applying of borderless client theme
      block remembers of e_sys windows
      use eina_streq for string comparison in e_zone_for_id_get()
      fix use after free when renaming a bryce
      clamp bryce position to its parent zone
      avoid potential divide by zero during bryce startup
      do not modify bryce zone/name during startup
      center desktop gadget editor popups upon the zone they have activated
      attempt to handle non-orient gadget resizes based on anchor corners
      allow scaling gadgets using wheel events during initial placement
      attempt to recalc gadgets which overflow their container
      do not apply efx anchoring to move effects if a resize effect is not active
      do not return early from _bryce_position()
      add bool return for e_exec_phony_del() to return deletion success
      feed mouse-up when dropping a gadget site before enabling events on the site
      force gadget site recalc from style object if gadget's hints change
      return correct values from bryce post event callbacks
      determine wl pixmap argb solely based on image_argb flag
      avoid crash when calling e_pixmap_image_exists on wl pixmaps without buffers
      add more parens for previous pixmap commit
      add special case for returning pixmap argb of unusable wl cursor pixmaps
      move bryces to E_LAYER_DESKTOP_TOP when not above windows
      force bryce repositioning onto target zone during startup
      use only zone coords when moving bryce to its zone during editing
      clamp e_place calcs to zone geometry
      break out e_place_desk_region_smart() area calcs into separate function
      break out repeated code from _e_place_desk_region_smart_area_calc() into separate function
      reset initial internal wl client states when hiding (but not deleting)
      unset wl client surface pointer on surface destroy
      remove wl client pixmap aliasing on del
      always free wl pixmap buffer list on non-cache image clear
      unalias internal wl client pixmaps in elm win hide trap callback
      handle e_scale correctly in bryces
      keep bryce starting size unscaled
      unset cur_mouse_action upon deleting client menu
      send orientation signal to bryce scroller theme
      only unset cur_mouse_action on client menu delete for the right action
      focus confirmation option in efm delete dialog
      disable bindings during desklock
      reject non-printable characters from lokker entry
      make confirm dialogs autoselect the confirm option
      require an elm win to apply auto-visibility for internal wins in wl surface commit
      clarify some wl surface checks to require elm wins
      make fake mouse-out upon focus-out conditional on pending pointer warp
      revise internal window session recovery blocking to compile with older efl
      prevent divide by zero when calculating gadget aspect sizing

Romain Naour (1):
      E: fix Wayland without xwayland build

Stefan Schmidt (2):
      e_fm: fix last commit to compile again with clang
      e_fm: remove unused variable

Stephen okra Houston (1):
      Time Gadget: Change the calendar month on mouse wheel.


Release 0.21.3:
---------------------
Carsten Haitzler (4):
      update e po files
      e exec - fix exec of enlightenment_open to use actual e prefix
      explicitly use eina list types passing into EINA_LIST_FREE()

Cedric BAIL (1):
      fix text preview to use eina_strbuf_append_length that doesn't call strlen and crash.

Christopher Michael (3):
      Remove unused variables from ibar_resize_handle function
      add missing EINA_UNUSED for function parameter
      Update wayland readme file

Derek Foreman (6):
      Don't send keyboard leave events to unfocused clients
      Fix error print when wl_wl fails to start
      Fix xwayland binary location detection
      Don't kill self during shutdown
      NULL out xwayland fd handlers after deleting them

Flavio Ceolin (1):
      emix: when in alsa mode only operate on master

Marcel Hollerbach (7):
      ibar: try to get a better min size
      tiling: place popup on the current active zone
      tiling: be more accurate on the description
      mixer: introduce Barrier checks
      mixer: introduce emix_max_volume_get
      ibar: multiply size with scale
      mixer: lock up the slider for the case a drag is in progress

Massimo Maiurana (1):
      Updating slovenian translation

Mike Blumenkrantz (34):
      use stringshare_add() for evry files plugin mime types
      another case of stringshare misuse re:efreet_mime_type_get()
      ignore xwl clients when flagging wl surfaces as internal
      add event handler for evry event type, not #define value
      do not attempt to populate gadgets during type_add if site has not yet been populated
      add docs for E_Comp struct members
      move 'unmaximize' smart callback to after geom calc in client_unmaximize
      use comp canvas win by default for any drop handler with an E_Object
      handle e_comp deref during e_dnd shutdown to avoid crash
      always use compositor object stacking when performing internal drags
      clamp bryces to a lower canvas layer
      use same layer in bryce editor for "above window" setting
      set gadget added flag any time a gadget is created or wizarded
      add separate codepath for handling layout of moving gadgets
      force smart calc on gadget sites at key points during move operations
      attempt to retain gadget size when executing move operations
      adjust gadget drop coords for pointer offset
      check visibility of gadget site 'events' member to determine drop availability
      add backspace/delete for clearing all lockscreen gadgets
      always use largest available size for free-oriented gadgets
      add gadget doc note for gadget_destroyed callback re:object lifetimes
      force bgpreview widget to resize after a wallpaper update
      always delete gadget's display object and ensure gadget object is null
      do not update bryce layer when restacking to a higher layer than CLIENT_ABOVE
      remove extraneous recalc trigger when deleting a gadget
      do not consume key events in comp autoclose key callback if desklock is active
      add e_util_open(), unify all callers of enlightenment_open
      remove (wrong) setting of layer for time's clock gadget popup
      do not show wireless gadget popups if desklock is active
      force shape queue when gadget util ctxpopups change visibility
      print object type in shape debug if name does not exist
      clamp gadget util ctxpopups to E_LAYER_POPUP at the lowest
      handle "unmaximize" smart callback differently depending on fullscreen state
      force zone useful geometry recalc on desk flip if prev/next desk has obstacles

Romain Naour (2):
      configure.ac: wayland only build fix
      e_xkb: add guard around skip_new_keyboard

Simon Lees (3):
      Also set QT_STYLE_OVERRIDE

YeongJong Lee (1):
      fix korean translation mismatch

Release 0.21.2:
---------------------
Carsten Haitzler (6):
      e - fix dnd problems coming from getting top object in comp canvas
      e ibar/ibox port to elm box - fix assumption on resize
      e temp module - kill tempget process not terminate to ensure death
      e ibar - fix devilhorns fix to use the right widght and hight for separator
      e comp - set alpha after setting native surface to avoid random crash
      e ipc - fix cleanup of ipc socket on shutdown

Chidambar Zinnoury (3):
      e: Don’t show two consecutive menu separators if there is no need in client menu.
      e fm: Add a separator only if there is something before.
      e fm: Don’t check every other line whether the location is writable when creating menu.

Christopher Michael (6):
      remove unused variables from _ibar_resize_handle
      use proper variables to set size_hint_max on ibar
      e ibar - fix "old man" fat finger typo ;)
      remove need to create different dialog windows under wayland
      wl_fb: Check that e_comp_wl_init does not fail.
      add key_up and key_down methods to sreen interface

Derek Foreman (2):
      Fix wayland clients not deleting when they're hidden
      Fix wayland extension global creation

Jean-Philippe ANDRÉ (1):
      bg: Fix bg with single jpeg images (no edj)

JengHyun Kang (1):
      e_comp_wl: break from meaningless loop

Marcel Hollerbach (4):
      e_comp_wl: destroy e_drag when source disappears
      e_alert: define EFL_BETA_API_SUPPORT before any include
      e_dnd: move the ungrab to the object free
      xwayland: show the dialog after ecore_wl2 is in sync

Massimo Maiurana (2):
      Updating italian and spanish translations
      Updating italian translation

Mike Blumenkrantz (9):
      only check x11 configurerequest geometry changes when applicable
      improve quickaccess relaunch help dialog text
      move new version of e_comp_top_window_at_xy_get() to dnd, restore old version
      clear wl subsurface data during delete only if subsurface is not also deleted
      add xwayland compat for efl 1.19+
      bump efl wayland req to 1.18 now that it's out
      Revert "track/manage size hints for zoomap child objects"
      track current bryce geom, force recalc on gadget site upon change
      clean up some string leaks in wireless gadget popups

Romain Naour (1):
      E: include uuid.h only when Wayland support is enabled.

Simon Lees (1):
      README.wayland --enable-elput is required for building wayland efl

Stefan Schmidt (1):
      mailmap: sync updated file from efl repo

Release 0.21.1:
---------------------
Al Poole (1):
      fwin: prevent segv when the vaarg abi messup with unused parameter.

Carsten Haitzler (1):
      e ibar/ibox fix starrting/started signal emittion

Cedric BAIL (1):
      filepreview: avoid race condition when destroying txt file preview with slow hard drive.

Chidambar Zinnoury (1):
      e desks config: Bring some flip settings back.

Chris Michael (1):
      add missing EINA_UNUSED for unused function params

Derek Foreman (3):
      Properly send kbd focus to xdg_shell popups
      Make sure the same keyboard resource doesn't end up on the focus list twice
      Fix xdg_shell focus logic

Marcel Hollerbach (1):
      e_comp_data: NULL out source once it is freed

Mariusz Bialonczyk (1):
      modules/temperature: cosmetics: typo fix (celcius -> celsius)

Mike Blumenkrantz (6):
      handle e_comp_x init failure more effectively and perform cleanups
      set x11 randr iface for wl_x11 based on wm presence, not composited state
      match wl_wl output sizing in wl_x11 when running in an existing wm session
      set unmax flag for xdg shell unmaximize
      set/unset smart parent as e_widget when adding sub-objects
      adjust xdg-shell window menu coords by client's coords


Release 0.21.0:
---------------------
Highlights:
      * Greatly improved Wayland support
      * New gadget infrastructure
      * Wizard improvements
      * Video backgrounds


Al Poole (1):
      fix openbsd battery calc on amd64

Andy Williams (2):
      Set the fdo theme to Elementary as well
      Only set the icon theme in elm on change

Carsten Haitzler (36):
      e backlight - avoid seg when comp is shut down and backlight updated
      e comp - set e_comp to null on shutdown so others dont access junk
      e zone - handle null e_comp if comp is already shut down
      e randr - feature fix that allows config to jump to specific screen
      e exec - fix missing ref and unref for instance event
      e randr - fix silent free of data behind randr's back
      e comp randr support - fix leak of randr info
      e randr2 - remove auto-clone and now make randr dialog come up instead
      e randr - slicken up fade to use sinusoidal interpolation
      e randr - fix leak of modes list in randr code
      e - fix using an invalid icon theme - fall back to hicolor if not exists
      e - fix leak added by previous fix for icon theme
      e randr2 - provide lookup funcs for screen and dpi
      randr - improve header indenting
      per-desk profiles - move to per screen and use elm derived profiles
      e logs - the custom e log func breaks eina backtraces, so don't use it
      e randr - fix randr dialog to do restore right again
      e comp: fix crashes on exit/restart when e_comp is NULL
      e - video bgs - allow selection of video files for wallpapers
      e - bgpreview widget - fix sizing of normal wallpapers after video add
      e bg: remove debug printf
      Revert "e bg: remove debug printf"
      e - restart window positioning - fix it
      e po: add completeness lister script into po dir
      e - efm: fix op registry listener add and dont use eina_error
      e xkbswitch: don't free layouts that are just pointed to in instances
      e mod: cpufreq - handle the case where cpu has zero freqs - dont crash
      e icons: reduce mem usage (in x11) by a fair bit by de-duplicating
      e intl - fix string buffer length size
      e intel - fix number 2
      e - wireless module - remove horrible memcpy with offsetof magic
      e - e_start - update mtrack to use new debug mode for hunting bugs
      e syscon - dont show syscon if desklock is up - you can't respond
      warnings - silence some theoreitcal wranings in build
      e start - no it doesny need dbus-launch
      e - suspend.hibernat intelligently - dont account for ac power

Chris Michael (54):
      Make configure check for Ecore_Wl2 library
      include header for Ecore_Wl2
      remove unused event loop and add external Ecore_Wl2_Display variable
      port wayland compositor to use Ecore_Wl2
      port e_grabinput to use Ecore_Wl2
      port e_scale to use Ecore_Wl2
      Port shot module to use ecore_wl2 library
      Fix formatting of wl_weekeyboard module
      Don't leak eina_iterator in shot module
      Port wl_weekeyboard to use Ecore_Wl2 library
      Port wl_fb module to use Ecore_Wl2 Library
      Fix formatting
      Fix formatting
      Try to init (and error check the init) of ecore_wl2 library before we     create a compositor
      Fix using global ewd variable by making it part of e_comp_wl
      disable building wl_wl module for now
      Add function to clear and reload keyboard modifiers
      Fix type of size fields for E_Shell_Data
      Add missing function prototype for e_winlist_direction_select
      Fix xbl_avail variable being used when it could be undefined
      Fix issue of nested compositors not working with Ecore_Wl2 library
      Reenable building wl_wl module
      Update wl_weekeyboard for ecore_evas_wayland_window_get2 function rename
      Update dependencies for enlightenment_alert binary
      Port e_alert to implement WBOD for drm/wayland
      Fix build break for non-wayland builds
      Fix issue of compositor surface create passing wrong parameter to     e_pixmap_new function
      Fix issue of using the wrong id when finding pixmap client
      fix compiler warning about comparison between signed and unsigned ints
      check siginfo si_code to verify that SIGUSR2 comes from user
      add missing EINA_UNUSED for _xkb_changed_state function
      update mailmap addresses
      update mailmap addresses
      Add support for configuring output rotations
      wrap 1.18 drm rotation functions around #ifdefs
      correctly wrap 1.18 API function calls
      only specify sw, sh, fh variables if we intend on using them
      don't define variables that we are not going to use
      add prototype functions for missing wl_data_offer interface
      add prototype function for missing wl_seat interface
      don't call deprecated ecore_drm_fb_set function when displaying drm     alert box
      add prototype functions for missing wl_data_source interface
      don't have to hook the ecore_evas resize callback here as that should     be handled by elm now
      make e_alert WBOD work in X11 even when built with wayland support
      destroy seat resource when we get a release request
      add EINA_UNUSED for unused function parameter
      Reverting this commit to handle a better way
      add #else to #if 0'd block in order to avoid compiler warning about     unused variable.
      disable option for mouse to use Application theme if we are running in Wayland
      stop filling logs with buffer transform/scale spam
      remove unused variables in _dmabuf_add function
      change 'if' clause to make gcc-6 happy
      add checks for building with Ecore_Drm2 support
      port enlightenment to use drm2

Dave Andreoli (1):
      enlightenment_open: correctly return the exist status code of the executed command

Derek Foreman (69):
      emix: Rename parameter bool to mute
      wayland: Add support for wl_surface.damage_buffer
      Remove inappropriate usage of %m
      Ensure wayland clients haven't been deleted when processing callbacks
      Initialize pointer before calling e_bindings_mouse_button_find()
      Remove wayland frame callbacks from subsurface cache on destruction
      Initialize pointer before passing to e_wheel_bindings_find()
      Fix xdg-shell destructors
      Protect the wayland frame callback list from corruption
      Use eina_list_merge instead of eina_list_move for wayland lists
      Move pixmap free to client free from client destroy
      Bump wayland version requirement
      Remove wayland focus timer in delete callback
      Add a NULL check in native_surface_init under wayland
      Render deleted objects as long as they still have a pixmap
      Track whether objects are on the post_updates list or not
      Take an extra reference on wayland clients
      Don't allow deleted wayland clients to set the cursor
      Track whether a render is in progress or not
      Rework wayland buffer handling
      Remove wayland buffer reference
      Re-enable window close animations for wayland
      Stop copying all wayland buffers
      Don't use e_pixmap_image_data_argb_convert for wayland images
      Remove argb_convert for wayland buffers
      Fix wayland hide for internal windows
      Fix internal window borders on 32-bit computers
      Free pixel data after taking a wayland screen shot
      wayland: Don't leak a clipboard source if adding fd handler fails
      wayland: Stop E from consuming all CPU as soon as a selection is made
      xwayland: Don't leak memory on dnd read failure
      wayland: Fix xdg-popup crash
      Clean up some header inclusion
      Remove unwanted debug detritus from last commit
      wayland: Bump ecore-wl2 dependency to 1.17.99
      wayland: Fix crash when attempting to create surfaces for deleted clients
      Add e_pixmap API for testing if a pixmap is a native surface
      Break native surface test criteria into explicit wayland and X cases
      Move the test for resetting no native surface to after caps checks
      Remove GL presence test from native surface set on dirty objects
      Track parent compositor dmabuf capabilities on wayland on wayland
      Disable wayland dmabuf for the X11 backend
      Add DMABuf support for wayland
      clean up warnings in dmabuf code
      Fix dmabuf breakage of non wayland builds.
      Bump wayland version requirement to 1.11.0
      Allow pixmap argb state to override window state for wayland clients
      Fix crash in wl_shell surface destroy
      Fix wl_shell clamping rules
      Fix wl_shell popup livelock
      Fix eo object use after deletion in evry
      Add new API for finding a zone by its id string
      Track wayland outputs for zones
      Track X outputs for zones
      Send wayland surface enter and leave events
      Update some wl_shell window handling logic
      Always clear the mirror image data pointer
      Use e_client_util_is_popup for checking wayland clients
      Don't send configure to wl_shell popups
      Don't try to send surface presence events for zones with no wayland output
      Fix zone setup for wayland compositor on X
      Fix wayland pixmap ids again
      Revert "Always clear the mirror image data pointer"
      Add a pixel get callback for mirrors
      Only unignore a client on the first commit with a buffer
      Set up attributes properly for wl_shell transient windows
      Track whether a surface is an xdg one
      Don't send keyboard leaves to unmapped wayland surfaces
      Fix xdg_shell keyboard enter/leave events

Eduardo Lima (2):
      Bluez 5
      WIP

Eduardo Lima (Etrunko) (5):
      Update .gitignore
      Fix warnings about uninitialized use of variables
      Revert "Update .gitignore"
      Revert "WIP"
      Revert "Bluez 5"

Gustavo Lima Chaves (1):
      e/quickaccess: Make "Skip window list" a quickaccess behavior option too.

Hannes Janetzek (1):
      just a small patch to make sure evry_hide does not get called synchronously from an Evry_Action

Jean-Philippe ANDRÉ (1):
      Fix spelling in .pc file

JengHyun Kang (2):
      Set cached xkb context/keymap
      Add functionality for setting left handed mode in drm

Lukasz Stanislawski (1):
      conf_apps: fix add/remove screen lock applications.

Marcel Hollerbach (31):
      e_randr2: Add NULL check
      alsa: fix a valgrind warning
      mixer: only save state if not in init
      xdebug: add clouseau_start
      e_main: init e_xkb before e_comp
      e_xkb: implement keyboard setting on wayland.
      e_grabinput: do not pass a faulty time
      e_xkb: emit changed event if wayland keyboard has changed
      e_xkb: emit changed event if ECORE_X_EVENT_XKB_STATE_NOTIFY is emitted
      xkbswitch: enable module for wayland
      xkbswitch: change icon if E_EVENT_XKB_CHANGED is emitted
      e_comp_wl: only ignore ignored clients
      re-apply xkb layout groups whenever an xkb event occurs
      add skip event counter for xkb events
      e_xkb: refactor command creation code
      e_comp_wl: allow variants and options for keyboard settings
      e_xkb: configure model and a list of layouts variants and options to use
      wl: remove useless calls to e_comp_wl_input_keymap_set
      e_comp_wl: remove useless params from keymap_set
      e_comp_wl: let keymaps be set when compositor is not running
      e_xkb: init before e_comp_wl init
      e_xkb: use new_keyboard event to restore known layout
      mixer: try to fix a possible bug
      e_xkb: split up e_xkb_update
      e_xkb: reconfig when we have set a new set of layouts
      e_xkb: init the keyboard on init
      music-player: add spotify
      e_xkb: eval group before setted to wl
      e_comp: silence warning
      e_comp: silence warning, this time really
      emix: update sink of sink_input when changed

Massimo Maiurana (3):
      Updating italian translation
      Updating italian translation
      Updating italian translation

Michael Jennings (1):
      enlightenment.spec.in:  Update spec file to work with current Git.

Mike Blumenkrantz (498):
      unset release mode
      bump version
      add config option for allowing sticky windows to receive focus reverts
      use client geometry for calculations in x11 ConfigureRequest handler
      reshuffle all notifications on a notification merge
      disable redirection toggling for the nocomp client
      call ecore_wl2_init() during compositor init
      create wl client connection during compositor init, use in shot module
      fix wl-x11 make/install rules to not include nonexistent DATA files
      enforce wayland subsurface stacking order when parent surface is restacked
      apply already-committed wayland subsurface positioning after parent surface move
      init ecore-x during wl-x11 init to ensure DISPLAY is set
      move comp canvas resize callback to monitor elm win geometry
      do not apply x11 randr iface in wl-x11 if running nested in x11
      add wayland shell private data for managing shell-specific data
      do not drop subsurface buffer early after commit from cache
      make e_comp_wl_surface_attach static and take a surface state
      set wayland new client focus based on accepts_focus and !override
      use canvas RENDER_PRE callback to trigger compositor pre-render callbacks
      do not reapply x11 icccm state during fetch
      never set withdrawn state on x11 clients
      use current box geometry for calculating desktop ibar/ibox sizing
      simplify e_mouse_update() code for x11 compositors
      only show x11 clients during MapNotify/Request if they have Normal state
      show non-new x11 clients immediately when changing Withdrawn -> Normal
      ignore withdrawn state for x11 override clients during show
      add E_BINDING_CONTEXT_LAST as sentinal enum value
      call ecore_wl2_shutdown() in wl compositor delete callback
      block input devices from backlight list
      unpopulate all gadcons during shutdown
      add shelf callback for hidden state and trigger extra hide-on-show if hiding
      un-defer comp util object hiding if second hide occurs during animation
      add special case for frame adjustment during first recalc of new clients
      test given coordinates in smart window placement algorithm
      bump modapi to 18
      define EFL_BETA_API_SUPPORT explicitly in e.h if wayland support is enabled
      remove defines for various beta api in other places
      remove wayland function usage from grabinput methods
      simplify and clarify winlist directional selection action code
      break out comp util object type setting into separate function
      add back comp object data from typo in previous commit...
      check all corners of an object in e_comp_object_util_zone_get()
      Revert "e logs - the custom e log func breaks eina backtraces, so don't use it"
      disable custom logging when eina backtrace is active
      select mixer popup sink after popup has been fully initialized
      optimize zoomap recalc during recursion
      make ibar config pointer EINTERN
      do full cleanup when overriding existing comp autoclose object
      remove configs for illume modules
      allow NULL object in e_comp_object_util_autoclose()
      improve menu hiding and autoclose
      make e_desk_at_xy_get() const
      make E_DESK_TYPE an int define
      implement zone obstacles for calculating useful geometry
      update shelf obstacles on move/resize
      use zone obstacles for window placement during shelf coverage calcs
      enforce border_fix_on_shelf_toggle config option in shelf
      unify a large portion of repeated code in e_place
      use zone obstacles when generating list of obstacles in smart place
      only recalc shelf obstacles on desk count change if shelf uses desk_show_mode
      update existing shelf obstacle geometries on shelf move/resize
      set zone-based name on lokker comp objects
      add function for creating a demo version of the lockscreen
      apply zone coords when calculating zone useful geometry
      create comp object updates tiler in helper function from either show or damage
      do not unset comp object native surface during shape apply
      unset WM_STATE for x11 clients upon unmapping them
      use 2/3 screen size for wl output (nested) compositor size
      if available, use wl output (nested) for wayland compositor creation
      use more correct defines for enabling wl output modules during comp init
      automatically attempt to create a wayland x11 output during comp init
      remove need_reparent, reparented, first_damage flags from wl client comp_data
      Revert "Fix issue of compositor surface create passing wrong parameter to"
      call xdg surface map when creating a surface for visible internal windows
      set want_focus for xdg popup surfaces on creation
      only do passthrough surface map on xwayland surfaces during commit
      more correctly handle evry mouse detection on wayland
      improve focus setting during wayland client show callback
      |= instead of = flag setting for want_focus during wayland surface commit
      remove WAYLAND_ONLY ifdefs from kbd layout change actions
      add function for wayland compositors to generate (fake) keyboard events
      add wayland-only mouse action for translating a button press to a key
      automatically mark wayland cursor surfaces as visible during set_cursor
      do not set focus in wayland client show callback for cursor clients
      always apply damages and input regions during wayland commit
      remove duplicate visibility setting blocks from wayland surface commit
      add render updates for cursor clients if damages exist during set_cursor
      reenable fallthrough surface (un)mapping for subsurfaces during commit
      remove _e_comp_wl_focus_down_set()
      track wayland client mouse button states as a full button mask
      enable surface visibility fallthrough for drag clients
      remove duplicate E_Config_XKB_Option config descriptors
      unify client mouse action ending
      allow instant client mouse actions to persist until mouse up
      use zone obstacles for resist calculations
      determine new_client state for xwayland clients using xwayland pixmap
      handle more mouse buttons in wayland
      allocate E_Shell_Data for all xdg surfaces (popups)
      add function for disabling mouse/key/wheel/signal bindings
      disable binding activation when grab dialog, menus, or dnd is active
      re-add MANAGER context bindings
      remove comp canvas key handler shortcuts for passing keys to wayland clients
      move wayland protocols and generated files into separate directories
      ship tiling module edj file
      move all wayland extension implementations into e_comp_wl_extensions.c
      defer screenshot action execution using a job
      disable bindings during wayland screenshot operations
      add macros for creating and binding wayland globals in extensions file
      do not attempt to create x11 canvas during xwayland init
      do not shortcut access of Efreet_Desktop->x hash in fileman
      add extra param to e_bindings_key_down_event_find() to return found binding
      disable shelf shadows if "noshadow" data item exists in shelf theme
      remove e_bindings_key_up_event_find, rename other one to e_bindings_key_event_find
      add edge binding event find function
      use event-finding functions to simplify key/edge binding handlers
      prefer specific context activation for bindings over generic context
      use desk obstacles for calculating desk-specific zone useful geometry
      fill zone obstacles on x/y axis during useful geometry recalc
      do not update keymap group in _e_comp_wl_input_keymap_update()
      update xkb.cur_group and send event upon serializing an EFFECTIVE layout in wl input
      add back binding key->keyname check in e_bindings_key_event_find()
      enable drm e_alert during configure only if drm support is enabled
      send mouse out+in on desk flip end
      compare key OR keyname in e_bindings_key_event_find()
      set child of zoomap as new content for comp util objects when changing type
      disable map when unsetting zoomap child
      ignore subsequent bindings with ANY context after finding a previous ANY binding
      add bool return for mouse-based E_Action callbacks
      remove efl version check macros in xwayland dnd handlers
      require efl 1.17
      clamp minimum shelf size to 20px in shelf config
      check whether to reapply all callbacks for comp util objects when changing type
      remove debug printf from e_bg
      Revert "e - restart window positioning - fix it"
      do not perform special case position adjustment for re_manage clients
      add flag for zone obstacles to indicate verticality
      do not clamp comp object input regions to 0,0
      improve enforcement of shelf autohide-related window adjustment
      return no binding found when trying to incrementally resolve end-of-list mousebinds
      reshuffle x11 comp init to cleanup on failure cases
      pre-remove pixmap from x11 clients during del hook
      add comp object util callback for closing on Escape key
      enable comp object image data refresh if a dirty call is made with no damages
      redo wayland pixmap ids to use monotonic decreasing ints with no collisions
      remove some unused variables
      fix bgpreview internals parenting
      make bgpreview create vdesk config dialog on mouse up instead of mouse down
      do not decrement e_comp->new_clients for non-new clients during _e_client_eval
      remove emotion_init/shutdown from e_video
      Revert "e comp: fix crashes on exit/restart when e_comp is NULL"
      add zoomaps unconditionally for all comp util objects
      setup comp util object zoomap before setting its child
      track/manage size hints for zoomap child objects
      update winlist ui when using directional window selection
      force changed when adding or removing keyboard layouts in config
      disable emotion_shutdown during shutdown procedure
      use strbufs instead of strcat in fwin navbars
      do not set XCURSOR_PATH variable if re-setting existing value
      remove security hole in e_start_main
      remove DISPLAY usage from E_IPC_SOCKET value
      remove multihead env var setting in e_exec
      strcpy -> strncpy in evry files plugin
      use strbuf instead of strcat in keybinding string synthesis
      use strbuf instead of strcat in edgebinding string synthesis
      use dblequal for double comparisons in edgebindings config
      replace static buffer usage with binbuf in e_fm_ipc
      prevent potential null deref during pager (plain) window drag
      remove unused value in config profile saving
      remove useless client_add handler in e_ipc
      use uint instead of int for eina_list_count() return in cpufreq (trivial)
      simplify static grab case statements
      remove ipc command allowing arbitrary command execution by the compositor
      simplify ipc socket creation
      remove impossible null check in color dialog
      do not add render updates during damage of deleted clients
      trigger elm config save during e config save
      don't directly use image data when creating a comp object mirror
      trigger mouse binding end callbacks on mouse up
      add a namespaced version of efx
      add new gadget system
      add bryces: new shelf replacement
      add new start gadget
      add new wireless module/gadget
      add new time module with clock gadgets
      add button to desklock config dialog for configuring gadgets
      bump config version, add mouse/wheel bindings for manipulating gadgets/bryces
      add bryce editor to Desktop item in main menu
      require >= efl 1.17.1 for gadget theme stuff
      delete gadget display object during object deletion
      stack time gadget popups on POPUP layer
      Revert "send mouse out+in on desk flip end"
      reject x11 client mouse-in events on comp object based on frame geometry
      reverse ordering for x11 client mouse in NotifyVirtual and NotifyInferior details
      only use x11 mouse out event if client has received mouse in previously
      apply x11 mouse in event for clients using a job
      apply x11 focus/unfocus using jobs
      enforce accurate resizing/orienting when changing the location of a bryce
      add bryce autohide/size getters, pull related values into wizard
      manually calc bryce center-screen coords
      block re-unsetting of native surface for comp objects
      always run client res changes in e_comp_canvas_update()
      unify client e_hints window size setting in move/resize callbacks
      bump E_VERSION_MAJOR and modapi
      add window maximize animation
      fix xwayland compile with 1.18 eo
      remove show callback from evry win on deletion
      don't add render update during ignored damage on deleted clients
      flatten return of strcmp to bool value
      ensure string termination when using strncpy
      resolve harmless coverity reports in wireless module
      resolve harmless coverity reports in time module
      ensure pointer lifetimes when advancing efx effect queue
      check returned pixmap size before attempting to create updates tiler
      during bryce moveresize callback, return if no zone could be located
      run focus-out and mouse-out wayland client callbacks for deleted clients
      reject attempts to focus deleted comp objects
      make wayland client keyboard focus list pruning more robust
      remove library checks for a number of modules along with useless defines
      remove eldbus init/shutdown calls from the codebase
      handle wireless module existence in related wizard page
      redo wizard's gl testing mechanism
      redo wizard to use elm
      grab comp input on wizard start
      don't add render updates for deleted clients on failed resize
      be less pedantic during efx move/resize operations about object geometry
      use object position for efx resize anchoring when no move effect is active
      Revert "fix xwayland compile with 1.18 eo"
      break out xwl init/shutdown into static functions for reuse internally
      don't increment position coords twice during efx move operations
      always move objects during efx_resize if position is provided
      remove maximize_pre flag from wl client comp_data
      always send wl key releases if surface still exists
      calling dirty() on a comp object for a deleted client should not print an error
      remove direct references to ec->comp_data in x11 compositor
      add workaround for xwayland client bug
      unify client post_updates management code into single function
      improve time gadget screen positioning
      do not attempt to resize clients to 0x0 during res restore
      enforce bryce zone setting and clip setting
      unset solid drawing of opaque regions during comp object animations
      adjust wayland client coords by window_geometry during first surface commit
      add new wizard page to change default modifiers for global mouse bindings
      attempt to use left-aligned label text in wizard
      do not reset the wizard got_desktops flag when setting the default system lang
      set wizard page names, print to stderr every time a page is advanced
      fix stringshare usage in wizard language page (010)
      reduce wizard connman timeout timer to 0.5s
      disable wizard mouse binding page's next button if all modifiers are disabled
      unify maximize animation checks+code
      always update saved coords for maximized/fullscreen clients on csd geom update
      do not update client coords on csd geom update if it would change the zone
      add e_comp_object_agent_add()
      use agent objects for maximize effects
      ignore deleted clients when reapplying zone geometry policy in canvas update
      hide wl clients before deleting them when surface is destroyed
      remove wl selection hacks from f0ba92d39e1f6631974d53100dcbb4cc040a8241
      use zone geometry when clamping evry gadget popup to gadget's screen
      store (internal) elm win geometry when set prior to showing the win
      ignore xwayland clients in wl client delete request callback
      extend wl extension macros to store globals into extension data
      cast eina_list_count() in flowlayout, not entire expression
      unset opaque region during comp object render if none exists
      avoid null deref in during pager_plain dnd
      use eina_streq for e_util_binding_match() comparisons
      use snprintf for string handling in batget
      rework systray theme applying code
      use snprintf for string handling in batget
      remove lots of impossible null checks from pager move callback
      optimize compositor canvas updating when zone geometry is marked dirty
      send resize edges to wl clients on resize start and end
      feed mouse-up events for all buttons on internal wins when activating a binding
      do not set initial changed state for new clients if they are ignored
      redo wayland client unignore mechanism
      do not add deleted clients to tasks gadgets
      remove deleted clients from tasks client list during repop
      use canvas pointer coords in systray mouse cb
      ignore x11 ConfigureRequest events when maximize_override is set
      add even more systray/dbusmenu hacks
      feed mouse out to internal clients upon activating a mouse binding
      selectively reject comp object signal emissions based on action_client state
      move notification text escaping into dbus notify method callback
      track offline/presentation mode notification ids and replace on toggle
      reshuffle notifications on replace
      remove old compositor reset code
      don't show some x11-specific compositor settings under wayland
      force keyboard modifier update on wl client focus-in
      block wl keyboard modifier updating during input grabs
      explicitly manage client focus when setting/unsetting input grabs
      optimize case where an x11 client is focused/unfocused in same loop iteration
      remove wl xdg popup new_client stuff from get_popup method
      allow some client zone/desk move actions to occur on action client
      only attempt to rescue offscreen clients if they are completely offscreen
      apply compositor keybinds if an action client that is not focus exists
      do not reset previously-set ec->placed state when attempting early client moves
      set destructor for xdg popups when setting implementation
      enforce wl xdg popup stacking relative to parent stacking
      don't set wl xdg popups to POPUP layer, set popups as placed on creation
      remove clamping for wl xdg popup configures
      implement www wayland extension handling for clients
      reapply client focus after input grab, only handle focus for wayland compositors
      move x11 client icon caching to private functions in comp_x
      set ELM_ACCEL=gl upon successfully creating a gl wayland compositor
      do not incrementally remaximize clients during shelf hide animation
      restrict shelf border_fix to only affect clients affected by the shelf
      delete internal wayland elm windows in wl client delete request callback
      use zone geometry for shelf zone obstacles
      add back CTRL to keybindings editor display
      remove video child references from wl compositor
      wl popup surfaces should not receive focus on show if parent is not focused
      always set ec->maximize_override on unmaximize if maximize anims are enabled
      set maximizing flag during maximize resizing for wl clients
      send fake www data during maximize
      print xwayland exe path in debug logs
      don't print xwayland path twice...
      disable xwayland module if exe cannot be found during configure
      set ELM_ACCEL=gl upon successfully creating a gl wayland compositor
      reject client maximize attempts using identical maximize params
      set WAYLAND_DEBUG=0 during wl compositor init
      do not send shell configures for deleted wl clients
      redo xdg shell to enforce double buffering of client-side configure serials
      add E_Client->saved.frame to handle mismatched csd states
      wayland client maximize/fullscreen cleanups
      Revert "add E_Client->saved.frame to handle mismatched csd states"
      do not unconditionally update position+size when changing wl client csd geometry
      move buffered maximize/fullscreen for wl clients to occur before csd update
      don't send duplicate configure to wayland clients during unfullscreen
      only apply buffered wl client maximize during configure if client is not maximized
      directly include e.h in efm device backends
      make e_client_has_xwindow() more wayland-only friendly
      change client un/maximize_pre callback location to occur after safety checks
      do not update client saved states during maximize if client is animating
      break out client maximize/unmaximize calc functions into preview functions
      make a number of client functions take const E_Client*
      add E_Client->maximize_anims_disabled to selectively disable maximize anims
      do not sent wl *shell configures from resize callback during maximize
      do not force wl client state update (configure) on (un)maximize done cb
      improve behavior of wl client buffered state changes during commits
      disable maximize anims for www-compatible wl surfaces
      make (un)maximize_pre callbacks capable of rejecting the maximize operation
      buffer server-side (un)maximize commands to ensure synchronization in wayland
      simplify maximize animation re:maximize_override unsetting on no-animate
      track client maximize animation agents, delete upon beginning new animation
      bump modapi
      Revert "do not update client saved states during maximize if client is animating"
      ignore maximized+fullscreen windows when placing new clients
      fake client-side geometry during wl (un)maximize interception
      add E_Client->saved.frame to handle mismatched csd states
      bump modapi
      handle maximize_anims_disabled for client-side maximize toggles
      ensure that wl keymap is initialized, even if no configuration exists
      xkb compiler warns--
      reduce efl version req to 1.17.0, make new gadget stuff 1.7.99+ at runtime
      redo e_place_desk_region_smart() to handle multiple screens
      Revert "mixer: try to fix a possible bug"
      update README.wayland known issues list
      add NEWS from 20.1-6 releases
      21.0-alpha release
      0.21.0-alpha NEWS updates
      unset release mode
      allow mixer volume increase actions to exceed 100%
      do not perform x11 mouse/wheel grabs for ANY binding contexts
      reject xwayland clients in wl client resize handlers
      make startup/restart app exec timing protocol-specific
      trivial wl shell module cleanups
      redo wl (xdg)shell surface ping
      add copyright headers (MIT) from weston to e_comp_wl_data
      update wl dnd/clipboard support to v3 of protocol
      apply formatting rules to e_comp_wl_data.c
      more accurately reject wl selection setting based on whether serial is invalid
      do not perform input ungrab twice during dnd end in wayland
      always update wl dnd offer actions
      only update wl dnd actions when applying focus
      ensure that wl clients do not run extra render on hide twice
      unify client filtering checks from e_place_desk_region_smart()
      do not attempt to show x11 override windows
      don't force full damage on x11 override clients
      don't defer resizes+queue render updates for shapeless or pending shaped clients
      ensure damages do not get added for shapeless x11 clients
      remove unnecessary conditional in e_comp_object_render()
      slightly simplify image data setting in e_comp_object_render()
      set NULL image pixel data during x11 render when no damages exist
      ensure resize is still deferred for changes.shape clients during failed resize
      do not show unsized comp objects during theme apply
      set NULL image data in _e_comp_object_pixels_get() on failure
      only set "dialog" border for transient clients if window type is unset
      do not revert client focus except for normal and dialog windows
      remove some X references in settings dialogs
      Revert "do not revert client focus except for normal and dialog windows"
      treat POPUP_MENU window type as an override window for comp theme matching
      always end drag operations on failure
      remove explicit edje_init/shutdown calls
      ensure evry gadget popups effectively clamp to their zones
      protect xdg-shell functions from accessing deleted client data
      move wayland surface E_Client del check to a place where it's more useful
      distribute all weekeyboard edj files
      handle recursion more effectively in e_menu_hide_all()
      21.0-beta release
      0.21.0-beta NEWS updates
      unset release mode
      Revert "handle recursion more effectively in e_menu_hide_all()"
      apply xdg-shell activated state based on popup surface focus hierarchy
      feed mouse up events to internal wins before mouse out during action exec
      ensure that the startup apps cache handler has run before trying to start apps
      directly load extra wl modules during compositor init
      further optimize window smart placement by reducing obstacle calcs
      don't refocus deleted clients during wl compositor grab
      ensure lifetime for wl client focus timer
      hide evry on focus-out
      don't revert focus to desktop fileman during compositor grab
      evry null deref
      uninitialized vars in e_client_maximize_geometry_get()
      bad copy/paste in _e_place_desk_region_smart_obstacle_add()
      implement wl client session recovery
      add configure flag for xwayland binary
      clean up mixer includes
      unset DISPLAY during mixer's pulse backend startup
      ensure xwayland module init does not fail due to early startup
      add SA_NOCLDWAIT to SIGCHLD flags when xwayland module loads
      flag wl surfaces as internal during create() based on pid matching
      update README.wayland
      prune uuid remembers on clean startup
      make init fail if a dbus session connection cannot be created
      update README.wayland to include dbus-launch
      do not add ignored clients to ibar menu
      manage pending state list more effectively in wl shell
      ensure child windows are placed on screen
      disable focus effects for windows with csd
      block keyboard sending for wl clients if a compositor grab is active
      only load wayland-specific modules on startup if they have been built
      handle positioning of x11 overrides with csd accurately
      Revert "add SA_NOCLDWAIT to SIGCHLD flags when xwayland module loads"
      change efm icon entry to only toggle focus in x11 compositors (runtime)
      toggle compositor canvas focus during init
      fix usage of e_object_unref in xkbswitch when managing new kbd dialog
      also check pixmap argb state when setting comp object alpha
      enforce setting alpha on comp objects only after image data has been set
      ensure int64_t is used in all cases for wl pixmap ids
      remove some cruft from _e_comp_wl_client_cb_new()
      set E_Client->override flag for internal wins as needed
      use window id for internal window pixmaps again on wayland
      avoid infinitely looping when applying x11 window grouping
      only check pixmap argb state for non-X11 clients
      use parent windows for x11 binding grabs
      adjust some client eval parts to make manual placement work again
      force cursor placement to obey useful zone geometry
      ensure that client eval correctly handles retries on visibility-pending clients
      prevent double emission of E_EVENT_CLIENT_SHOW
      more tweaks for manual window placement in client eval
      allow building shot+xkbswitch modules without ecore-x
      remove pulse sinks/sources from list before running cbs which access the list
      fix e_place_zone_region_smart_cleanup()
      eo_del -> eo_unref in xwayland
      add client util function for detecting popups, block popups in ibar/tasks
      upgrade teamwork module to use teamwork v2: teamwork++
      use correct indexing for x11 teamwork server atom array
      update README.wayland to include xwayland crash bug
      update client remember on opacity change
      use current zone for shelf config dialog
      set x11 maximized window hint correctly on resize end
      delete x11 mouse-in job when hiding the job's client
      use current zone when activating a client's menu with the mouse
      handle shaded state when receiving x11 configure requests
      Revert "eo_del -> eo_unref in xwayland"
      protect against crash when deleting wl session recovery remember
      only block mouse-out callback for wl action clients if the mouse is grabbed
      unset comp_grabbed flag before action client compositor ungrab
      force mouse-in again during comp ungrab if client previously had mouse-in
      21.0-rc release
      0.21.0-rc NEWS updates
      unset release mode
      add tooltip for unloadable teamwork links, make ctrl suppress tw activation
      optimize e_client_res_change_geometry_restore()
      use focused client for window actions if passed object is not a client object
      add separate mouse in/out handlers for internal wins
      do not mouse-out of clients on focus out when focusing a popup
      force unset override and do reshadow on evry when switching to normal win mode
      enforce mouse grabs and block client/compositor event propagation while active
      replace wireless connection error #warning with notification
      prevent editing of session recovery remembers
      prevent E_Remember->used_count from going negative
      update secondary remembers when a session recovery remember is updated
      match deskmirror client opacity with original object
      use pending wl maximize value to determine maximize flag in xdg configure
      set need_maximize flag on remembered client when applying maximize
      store maximize property from E_Remember to disk
      do not change E_Client->saved values during maximize if need_maximize is set
      use separate flag for pending wl client unmaximize
      apply client size for session recovery remember
      freeze events on comp object input rects during deletion
      don't set need_maximize during wl commit maximize
      Revert "do not change E_Client->saved values during maximize if need_maximize is set"
      disallow pager window drags for popups and ignored windows
      set NOGRAB pointer mode on comp object event objects
      Revert "set NOGRAB pointer mode on comp object event objects"
      remove unused event info from _e_comp_wl_mouse_out()
      add some hacks to route mouse events to wl popups correctly while mouse is down
      destroy evry's focus-out timer if focus-in occurs before timer triggers
      21.0 release

Seunghun Lee (1):
      configure.ac: Remove ecore-x from wayland only build.

Shuhrat Dehkanov (1):
      xkbswitch: establish parent/child relationship

Simon Lees (1):
      Set QT_QPA_PLATFORM theme to gtk2

Stefan Schmidt (4):
      modules/geolocation: Update xml protocol spec to match the 2.2.0 release
      modules/geolocation: Add support for new speed and heading properties
      modules/geolocation: fix indent not following E coding style
      e_comp_wl: follow wayland session recovery namning change from efl.

Thiep Ha (1):
      po: add Vietnamese translation

Toan Pham (1):
      enhance winlist next window selection

Tom Hacohen (1):
      Tiling: tile windows with "Static" gravity.

Yomi (1):
      Update copyright year.


Release 0.20.9:
---------------------
Carsten Haitzler (2):
      e start - no it doesny need dbus-launch
      e - suspend.hibernat intelligently - dont account for ac power

Chris Michael (2):
      stop filling logs with buffer transform/scale spam
      change 'if' clause to make gcc-6 happy

Dave Andreoli (1):
      enlightenment_open: correctly return the exist status code of the executed command

Hannes Janetzek (1):
      just a small patch to make sure evry_hide does not get called synchronously from an Evry_Action

Massimo Maiurana (1):
      Updating italian translation

Mike Blumenkrantz (13):
      remove pulse sinks/sources from list before running cbs which access the list
      fix e_place_zone_region_smart_cleanup()
      add client util function for detecting popups, block popups in ibar/tasks
      update README.wayland to include xwayland crash bug
      update client remember on opacity change
      use current zone for shelf config dialog
      set x11 maximized window hint correctly on resize end
      delete x11 mouse-in job when hiding the job's client
      use current zone when activating a client's menu with the mouse
      handle shaded state when receiving x11 configure requests
      only block mouse-out callback for wl action clients if the mouse is grabbed
      unset comp_grabbed flag before action client compositor ungrab
      force mouse-in again during comp ungrab if client previously had mouse-in

Release 0.20.8:
---------------------
Chris Michael (1):
      disable option for mouse to use Application theme if we are running in Wayland

Mike Blumenkrantz (41):
      Revert "handle recursion more effectively in e_menu_hide_all()"
      feed mouse up events to internal wins before mouse out during action exec
      ensure that the startup apps cache handler has run before trying to start apps
      directly load extra wl modules during compositor init
      further optimize window smart placement by reducing obstacle calcs
      don't refocus deleted clients during wl compositor grab
      ensure lifetime for wl client focus timer
      hide evry on focus-out
      don't revert focus to desktop fileman during compositor grab
      evry null deref
      bad copy/paste in _e_place_desk_region_smart_obstacle_add()
      add configure flag for xwayland binary
      clean up mixer includes
      unset DISPLAY during mixer's pulse backend startup
      ensure xwayland module init does not fail due to early startup
      flag wl surfaces as internal during create() based on pid matching
      make init fail if a dbus session connection cannot be created
      update README.wayland to include dbus-launch
      do not add ignored clients to ibar menu
      ensure child windows are placed on screen
      disable focus effects for windows with csd
      block keyboard sending for wl clients if a compositor grab is active
      only load wayland-specific modules on startup if they have been built
      handle positioning of x11 overrides with csd accurately
      change efm icon entry to only toggle focus in x11 compositors (runtime)
      toggle compositor canvas focus during init
      fix usage of e_object_unref in xkbswitch when managing new kbd dialog
      also check pixmap argb state when setting comp object alpha
      enforce setting alpha on comp objects only after image data has been set
      ensure int64_t is used in all cases for wl pixmap ids
      remove some cruft from _e_comp_wl_client_cb_new()
      set E_Client->override flag for internal wins as needed
      use window id for internal window pixmaps again on wayland
      avoid infinitely looping when applying x11 window grouping
      only check pixmap argb state for non-X11 clients
      use parent windows for x11 binding grabs
      adjust some client eval parts to make manual placement work again
      force cursor placement to obey useful zone geometry
      ensure that client eval correctly handles retries on visibility-pending clients
      prevent double emission of E_EVENT_CLIENT_SHOW
      more tweaks for manual window placement in client eval


Release 0.20.7:
---------------------
Carsten Haitzler (4):
      e mod: cpufreq - handle the case where cpu has zero freqs - dont crash
      e intl - fix string buffer length size
      e intel - fix number 2
      e syscon - dont show syscon if desklock is up - you can't respond

Chris Michael (1):
      destroy seat resource when we get a release request

Derek Foreman (10):
      Fix wayland hide for internal windows
      Fix internal window borders on 32-bit computers
      Free pixel data after taking a wayland screen shot
      wayland: Don't leak a clipboard source if adding fd handler fails
      wayland: Stop E from consuming all CPU as soon as a selection is made
      xwayland: Don't leak memory on dnd read failure
      wayland: Fix xdg-popup crash
      Clean up some header inclusion
      Remove unwanted debug detritus from last commit
      wayland: Fix crash when attempting to create surfaces for deleted clients

Massimo Maiurana (1):
      Updating italian translation

Mike Blumenkrantz (121):
      unify client e_hints window size setting in move/resize callbacks
      remove show callback from evry win on deletion
      don't add render update during ignored damage on deleted clients
      check returned pixmap size before attempting to create updates tiler
      run focus-out and mouse-out wayland client callbacks for deleted clients
      reject attempts to focus deleted comp objects
      make wayland client keyboard focus list pruning more robust
      remove library checks for a number of modules along with useless defines
      remove eldbus init/shutdown calls from the codebase
      redo wizard's gl testing mechanism
      grab comp input on wizard start
      don't add render updates for deleted clients on failed resize
      break out xwl init/shutdown into static functions for reuse internally
      remove maximize_pre flag from wl client comp_data
      always send wl key releases if surface still exists
      calling dirty() on a comp object for a deleted client should not print an error
      remove direct references to ec->comp_data in x11 compositor
      add workaround for xwayland client bug
      unify client post_updates management code into single function
      do not attempt to resize clients to 0x0 during res restore
      unset solid drawing of opaque regions during comp object animations
      adjust wayland client coords by window_geometry during first surface commit
      do not reset the wizard got_desktops flag when setting the default system lang
      fix stringshare usage in wizard language page (010)
      reduce wizard connman timeout timer to 0.5s
      always update saved coords for maximized/fullscreen clients on csd geom update
      do not update client coords on csd geom update if it would change the zone
      ignore deleted clients when reapplying zone geometry policy in canvas update
      hide wl clients before deleting them when surface is destroyed
      remove wl selection hacks from f0ba92d39e1f6631974d53100dcbb4cc040a8241
      use zone geometry when clamping evry gadget popup to gadget's screen
      store (internal) elm win geometry when set prior to showing the win
      ignore xwayland clients in wl client delete request callback
      cast eina_list_count() in flowlayout, not entire expression
      unset opaque region during comp object render if none exists
      avoid null deref in during pager_plain dnd
      use eina_streq for e_util_binding_match() comparisons
      use snprintf for string handling in batget
      rework systray theme applying code
      use snprintf for string handling in batget
      remove lots of impossible null checks from pager move callback
      send resize edges to wl clients on resize start and end
      feed mouse-up events for all buttons on internal wins when activating a binding
      do not set initial changed state for new clients if they are ignored
      redo wayland client unignore mechanism
      do not add deleted clients to tasks gadgets
      remove deleted clients from tasks client list during repop
      use canvas pointer coords in systray mouse cb
      ignore x11 ConfigureRequest events when maximize_override is set
      add even more systray/dbusmenu hacks
      feed mouse out to internal clients upon activating a mouse binding
      selectively reject comp object signal emissions based on action_client state
      move notification text escaping into dbus notify method callback
      track offline/presentation mode notification ids and replace on toggle
      reshuffle notifications on replace
      remove old compositor reset code
      don't show some x11-specific compositor settings under wayland
      force keyboard modifier update on wl client focus-in
      block wl keyboard modifier updating during input grabs
      explicitly manage client focus when setting/unsetting input grabs
      optimize case where an x11 client is focused/unfocused in same loop iteration
      remove wl xdg popup new_client stuff from get_popup method
      allow some client zone/desk move actions to occur on action client
      only attempt to rescue offscreen clients if they are completely offscreen
      apply compositor keybinds if an action client that is not focus exists
      do not reset previously-set ec->placed state when attempting early client moves
      set destructor for xdg popups when setting implementation
      enforce wl xdg popup stacking relative to parent stacking
      don't set wl xdg popups to POPUP layer, set popups as placed on creation
      remove clamping for wl xdg popup configures
      reapply client focus after input grab, only handle focus for wayland compositors
      do not incrementally remaximize clients during shelf hide animation
      restrict shelf border_fix to only affect clients affected by the shelf
      delete internal wayland elm windows in wl client delete request callback
      add back CTRL to keybindings editor display
      remove video child references from wl compositor
      wl popup surfaces should not receive focus on show if parent is not focused
      print xwayland exe path in debug logs
      don't print xwayland path twice...
      disable xwayland module if exe cannot be found during configure
      reject client maximize attempts using identical maximize params
      set WAYLAND_DEBUG=0 during wl compositor init
      do not send shell configures for deleted wl clients
      do not unconditionally update position+size when changing wl client csd geometry
      don't send duplicate configure to wayland clients during unfullscreen
      directly include e.h in efm device backends
      make e_client_has_xwindow() more wayland-only friendly
      change client un/maximize_pre callback location to occur after safety checks
      ignore maximized+fullscreen windows when placing new clients
      unify a large portion of repeated code in e_place
      redo e_place_desk_region_smart() to handle multiple screens
      allow mixer volume increase actions to exceed 100%
      reject xwayland clients in wl client resize handlers
      make startup/restart app exec timing protocol-specific
      trivial wl shell module cleanups
      redo wl (xdg)shell surface ping
      add copyright headers (MIT) from weston to e_comp_wl_data
      more accurately reject wl selection setting based on whether serial is invalid
      do not perform input ungrab twice during dnd end in wayland
      ensure that wl clients do not run extra render on hide twice
      unify client filtering checks from e_place_desk_region_smart()
      do not attempt to show x11 override windows
      don't force full damage on x11 override clients
      don't defer resizes+queue render updates for shapeless or pending shaped clients
      ensure damages do not get added for shapeless x11 clients
      remove unnecessary conditional in e_comp_object_render()
      slightly simplify image data setting in e_comp_object_render()
      set NULL image pixel data during x11 render when no damages exist
      ensure resize is still deferred for changes.shape clients during failed resize
      do not show unsized comp objects during theme apply
      set NULL image data in _e_comp_object_pixels_get() on failure
      only set "dialog" border for transient clients if window type is unset
      remove some X references in settings dialogs
      treat POPUP_MENU window type as an override window for comp theme matching
      always end drag operations on failure
      remove explicit edje_init/shutdown calls
      ensure evry gadget popups effectively clamp to their zones
      protect xdg-shell functions from accessing deleted client data
      move wayland surface E_Client del check to a place where it's more useful
      handle recursion more effectively in e_menu_hide_all()
      distribute all weekeyboard edj files

Shuhrat Dehkanov (1):
      xkbswitch: establish parent/child relationship


Release 0.20.6:
---------------------
Carsten Haitzler (2):
      e - efm: fix op registry listener add and dont use eina_error
      e xkbswitch: don't free layouts that are just pointed to in instances

Chris Michael (6):
      update mailmap addresses
      update mailmap addresses
      add prototype functions for missing wl_data_offer interface
      add prototype function for missing wl_seat interface
      add prototype functions for missing wl_data_source interface
      don't have to hook the ecore_evas resize callback here as that should     be handled by elm now

Derek Foreman (20):
      Ensure wayland clients haven't been deleted when processing callbacks
      Remove wayland frame callbacks from subsurface cache on destruction
      Fix xdg-shell destructors
      Protect the wayland frame callback list from corruption
      Use eina_list_merge instead of eina_list_move for wayland lists
      Move pixmap free to client free from client destroy
      Bump wayland version requirement
      Remove wayland focus timer in delete callback
      Add a NULL check in native_surface_init under wayland
      Render deleted objects as long as they still have a pixmap
      Track whether objects are on the post_updates list or not
      Take an extra reference on wayland clients
      Don't allow deleted wayland clients to set the cursor
      Track whether a render is in progress or not
      Rework wayland buffer handling
      Remove wayland buffer reference
      Re-enable window close animations for wayland
      Stop copying all wayland buffers
      Don't use e_pixmap_image_data_argb_convert for wayland images
      Remove argb_convert for wayland buffers

Mike Blumenkrantz (42):
      clamp minimum shelf size to 20px in shelf config
      do not perform special case position adjustment for re_manage clients
      do not clamp comp object input regions to 0,0
      improve enforcement of shelf autohide-related window adjustment
      reshuffle x11 comp init to cleanup on failure cases
      pre-remove pixmap from x11 clients during del hook
      enable comp object image data refresh if a dirty call is made with no damages
      redo wayland pixmap ids to use monotonic decreasing ints with no collisions
      remove some unused variables
      make bgpreview create vdesk config dialog on mouse up instead of mouse down
      do not decrement e_comp->new_clients for non-new clients during _e_client_eval
      update winlist ui when using directional window selection
      force changed when adding or removing keyboard layouts in config
      disable emotion_shutdown during shutdown procedure
      use strbufs instead of strcat in fwin navbars
      do not set XCURSOR_PATH variable if re-setting existing value
      remove security hole in e_start_main
      remove DISPLAY usage from E_IPC_SOCKET value
      remove multihead env var setting in e_exec
      strcpy -> strncpy in evry files plugin
      use strbuf instead of strcat in keybinding string synthesis
      use strbuf instead of strcat in edgebinding string synthesis
      use dblequal for double comparisons in edgebindings config
      replace static buffer usage with binbuf in e_fm_ipc
      prevent potential null deref during pager (plain) window drag
      remove unused value in config profile saving
      remove useless client_add handler in e_ipc
      use uint instead of int for eina_list_count() return in cpufreq (trivial)
      simplify static grab case statements
      remove ipc command allowing arbitrary command execution by the compositor
      simplify ipc socket creation
      remove impossible null check in color dialog
      do not add render updates during damage of deleted clients
      don't directly use image data when creating a comp object mirror
      Revert "send mouse out+in on desk flip end"
      reject x11 client mouse-in events on comp object based on frame geometry
      reverse ordering for x11 client mouse in NotifyVirtual and NotifyInferior details
      only use x11 mouse out event if client has received mouse in previously
      apply x11 mouse in event for clients using a job
      apply x11 focus/unfocus using jobs
      block re-unsetting of native surface for comp objects
      always run client res changes in e_comp_canvas_update()


Release 0.20.5:
---------------------
Mike Blumenkrantz (1):
      add back x11 window focusing


Release 0.20.4:
---------------------
Chris Michael (5):
      Fix type of size fields for E_Shell_Data
      Fix issue of nested compositors not working with Ecore_Wl2 library
      Update wl_weekeyboard for ecore_evas_wayland_window_get2 function rename
      Fix issue of using the wrong id when finding pixmap client
      check siginfo si_code to verify that SIGUSR2 comes from user

Christopher Michael (14):
      Make configure check for Ecore_Wl2 library
      include header for Ecore_Wl2
      remove unused event loop and add external Ecore_Wl2_Display variable
      port wayland compositor to use Ecore_Wl2
      port e_scale to use Ecore_Wl2
      Port shot module to use ecore_wl2 library
      Fix formatting of wl_weekeyboard module
      Don't leak eina_iterator in shot module
      Port wl_weekeyboard to use Ecore_Wl2 library
      Port wl_fb module to use Ecore_Wl2 Library
      Fix formatting
      Fix formatting
      Try to init (and error check the init) of ecore_wl2 library before we     create a compositor
      Fix using global ewd variable by making it part of e_comp_wl

Marcel Hollerbach (1):
      e_comp_wl: only ignore ignored clients

Mike Blumenkrantz (37):
      call ecore_wl2_shutdown() in wl compositor delete callback
      create wl client connection during compositor init, use in shot module
      define EFL_BETA_API_SUPPORT explicitly in e.h if wayland support is enabled
      remove defines for various beta api in other places
      remove need_reparent, reparented, first_damage flags from wl client comp_data
      call xdg surface map when creating a surface for visible internal windows
      set want_focus for xdg popup surfaces on creation
      only do passthrough surface map on xwayland surfaces during commit
      more correctly handle evry mouse detection on wayland
      improve focus setting during wayland client show callback
      |= instead of = flag setting for want_focus during wayland surface commit
      automatically mark wayland cursor surfaces as visible during set_cursor
      do not set focus in wayland client show callback for cursor clients
      always apply damages and input regions during wayland commit
      remove duplicate visibility setting blocks from wayland surface commit
      add render updates for cursor clients if damages exist during set_cursor
      reenable fallthrough surface (un)mapping for subsurfaces during commit
      remove _e_comp_wl_focus_down_set()
      track wayland client mouse button states as a full button mask
      enable surface visibility fallthrough for drag clients
      unify client mouse action ending
      allow instant client mouse actions to persist until mouse up
      determine new_client state for xwayland clients using xwayland pixmap
      handle more mouse buttons in wayland
      allocate E_Shell_Data for all xdg surfaces (popups)
      add function for disabling mouse/key/wheel/signal bindings
      disable binding activation when grab dialog, menus, or dnd is active
      remove comp canvas key handler shortcuts for passing keys to wayland clients
      defer screenshot action execution using a job
      disable bindings during wayland screenshot operations
      do not attempt to create x11 canvas during xwayland init
      do not shortcut access of Efreet_Desktop->x hash in fileman
      disable shelf shadows if "noshadow" data item exists in shelf theme
      do not update keymap group in _e_comp_wl_input_keymap_update()
      update xkb.cur_group and send event upon serializing an EFFECTIVE layout in wl input
      send mouse out+in on desk flip end
      disable map when unsetting zoomap child


Release 0.20.3:
---------------------
Carsten Haitzler (1):
      e randr - fix randr dialog to do restore right again

Chris Michael (1):
      Fix xbl_avail variable being used when it could be undefined

Jean-Philippe ANDRÉ (1):
      Fix spelling in .pc file

Marcel Hollerbach (1):
      e_grabinput: do not pass a faulty time

Mike Blumenkrantz (26):
      block input devices from backlight list
      unpopulate all gadcons during shutdown
      add shelf callback for hidden state and trigger extra hide-on-show if hiding
      un-defer comp util object hiding if second hide occurs during animation
      add special case for frame adjustment during first recalc of new clients
      test given coordinates in smart window placement algorithm
      remove wayland function usage from grabinput methods
      simplify and clarify winlist directional selection action code
      check all corners of an object in e_comp_object_util_zone_get()
      disable custom logging when eina backtrace is active
      select mixer popup sink after popup has been fully initialized
      optimize zoomap recalc during recursion
      make ibar config pointer EINTERN
      do full cleanup when overriding existing comp autoclose object
      remove configs for illume modules
      allow NULL object in e_comp_object_util_autoclose()
      improve menu hiding and autoclose
      make E_DESK_TYPE an int define
      enforce border_fix_on_shelf_toggle config option in shelf
      create comp object updates tiler in helper function from either show or damage
      do not unset comp object native surface during shape apply
      unset WM_STATE for x11 clients upon unmapping them
      if available, use wl output (nested) for wayland compositor creation
      use more correct defines for enabling wl output modules during comp init
      automatically attempt to create a wayland x11 output during comp init
      20.3 release

Seunghun Lee (1):
      configure.ac: Remove ecore-x from wayland only build.

Tom Hacohen (1):
      Tiling: tile windows with "Static" gravity.

Yomi (1):
      Update copyright year.


Release 0.20.2:
---------------------
Chris Michael (1):
      Add missing function prototype for e_winlist_direction_select

Derek Foreman (2):
      emix: Rename parameter bool to mute
      wayland: Add support for wl_surface.damage_buffer

Marcel Hollerbach (2):
      alsa: fix a valgrind warning
      mixer: only save state if not in init

Mike Blumenkrantz (4):
      simplify e_mouse_update() code for x11 compositors
      only show x11 clients during MapNotify/Request if they have Normal state
      show non-new x11 clients immediately when changing Withdrawn -> Normal
      ignore withdrawn state for x11 override clients during show

Simon Lees (1):
      Set QT_QPA_PLATFORM theme to gtk2

Toan Pham (1):
      enhance winlist next window selection


Release 0.20.1:
---------------------
Carsten Haitzler (11):
      e backlight - avoid seg when comp is shut down and backlight updated
      e comp - set e_comp to null on shutdown so others dont access junk
      e zone - handle null e_comp if comp is already shut down
      e randr - feature fix that allows config to jump to specific screen
      e exec - fix missing ref and unref for instance event
      e randr - fix silent free of data behind randr's back
      e comp randr support - fix leak of randr info
      e randr2 - remove auto-clone and now make randr dialog come up instead
      e randr - fix leak of modes list in randr code
      e - fix using an invalid icon theme - fall back to hicolor if not exists
      e - fix leak added by previous fix for icon theme

Lukasz Stanislawski (1):
      conf_apps: fix add/remove screen lock applications.

Marcel Hollerbach (1):
      e_randr2: Add NULL check

Massimo Maiurana (1):
      Updating italian translation

Mike Blumenkrantz (17):
      use client geometry for calculations in x11 ConfigureRequest handler
      reshuffle all notifications on a notification merge
      disable redirection toggling for the nocomp client
      fix wl-x11 make/install rules to not include nonexistent DATA files
      enforce wayland subsurface stacking order when parent surface is restacked
      apply already-committed wayland subsurface positioning after parent surface move
      init ecore-x during wl-x11 init to ensure DISPLAY is set
      move comp canvas resize callback to monitor elm win geometry
      do not apply x11 randr iface in wl-x11 if running nested in x11
      add wayland shell private data for managing shell-specific data
      do not drop subsurface buffer early after commit from cache
      make e_comp_wl_surface_attach static and take a surface state
      set wayland new client focus based on accepts_focus and !override
      use canvas RENDER_PRE callback to trigger compositor pre-render callbacks
      do not reapply x11 icccm state during fetch
      never set withdrawn state on x11 clients
      use current box geometry for calculating desktop ibar/ibox sizing


Release 0.20.0:
---------------------
Highlights:
      * Full Wayland support
       - See README.wayland
      * New screen management infrastructure and dialog
      * New audio mixer infrastructure and gadget
      * Many internal widgets replaced with Elementary
       - Improved Elementary support
      * Improved FreeBSD support
      * Geolocation module


Amitesh Singh (3):
      md5: fix wrong sizeof argument (SIZEOF_MISMATCH)
      pulseaudio: pass big data as pass by reference
      e_flowlayout: typecast return value to int

Bertrand Jacquin (1):
      MEDIUM: modules/shot: switch to https://

Boram Park (6):
      fix tty problem when enlightenment(drm-backend) is killed by SIGSEGV
      e_comp_wl: fix segfault in case parent's surface is destroyed before subsurface is destroyed
      e_comp_wl: fix not sending a mouse enter event to client.
      Creating wl_shm global object before creating other global objects
      wl_desktop_shell: return void
      should remove a frame resource from pending.frames list also

Boris Faure (3):
      synchronize mailmap
      notification: don't segv if no zone found to place the popup
      update mailmap

Brian 'morlenxus' Miculcy (2):
      mixer: Optionally select an external mixer application.
      enlightenment/conf: fix missing icons in settings panel

Bryce Harrington (14):
      Code cleanup and check for OOM condition with wl_array_add
      cosmetic:  Whitespace cleanup of wayland client files
      wayland:  Refactor out common mouse handling code
      wayland: Whitespace cleanup
      wayland: Fix missing check on E_NEW return
      wayland: Eliminate extraneous E_COMP_WL_PIXMAP_CHECK macro
      wayland:  Document the public API
      wayland: Refactor output initialization code
      wayland: Make sure we're initializing output scale sensibly
      wayland: Check for potential OOM from wl_array_add()
      wayland: Handle failure to init a display screen
      uuid: Check error on ftruncate call
      wayland: whitespace cleanup
      wayland: Free temporary string on error exit

Carsten Haitzler (118):
      mixer: Optionally select an external mixer application.
      e backlight - limit min to 0.05 to avoid totally off backlight
      fix README to be more up to date
      e_start - add ~/Applications/.bin to use for app bin searches
      update po's
      e_auth - null out compilert memset opts like lokker
      windows - allow close button to work again in internal wins
      Revert "windows - allow close button to work again in internal wins"
      e - tiling module - silence warning (real possibility of an issue)
      e - warning fix - fix SVID_SOURCE complaint warning
      e - randr - stop saving config using XID - this is utterly WRONG
      e randr - fix warning (signed vs unsigned cmp)
      e randr - make it work on nvidia - lots of "wrong" things fixed
      e randr - restore edp checks
      Revert "randr: Don't track active outputs"
      Revert "Randr: Fix null dereference."     This reverts commit 4aef218d28ed66e80d882f052c704d92d11c3c81.
      e - randr include - move to master includes (only if building for x)
      Revert "all dialogs are now resizable"
      e zone - add stow/unstow apis
      e - force a config flush before sys actions that could kill e
      revert all the ui breakes in e - going the wrong direction in the     first place anyway. shoudl replace the entire dialgo one at a time by     an elm version not try and stuff elm widgets into where e widgets used     to be. this doesnt improve e's config dialogs, just makes them buggy     as all hell in the name of a move to elm.
      e dialogs - this one too
      shot module - dont allow another instance and keep the current one
      e - gadcon popup - handle delection of content object properly
      clock - fix popup content.. use elm widgets now.
      comp base - make base black. makes for better screenshots of blank areas
      e - fix e widgets to use evas size hints - this unifies sizing elm vs e
      e - rewrite randr code entirely. core and dialog. dialog is basic atm
      e randr config - fid selecting of screen to populate correctly
      update po
      e - randr2 - handle lid close/open as screen unplug/plug
      xinerama note for multiscreen handling
      maximization bug affecting libreoffice and others - fix
      adapt to new win center trap in 1.13 efl
      e - client list update after adding to client list - fix netwm bug
      e - fix build when wayland not enabled
      elm accel pref config - fix to use correct api to set accel pref
      e - randr - laptop lids - handle plug/unplug and well as lid open/close
      e - fix build. build break!
      shut up shadow warnings
      e - remove earns from randr2
      e - randr - handle missing relative display and use priority for zone
      actions - add smart suspend + hibernate actions for laptop usage
      randr2 - handle missing clone src and walk back config only structs
      e - actions - smart suspend/hibernate - also dont do when on mains power
      efm - make dir listing far faster - no file magic content and dont sync
      e - menus - fix autoscroll on zones not at 0 y...
      e - menus - fix submenu popup direction when zones are not at 0 y
      e clients - make sure we handle client with a NULL zone
      e - lost windows menu is back. no windows menu does not handle it.
      add options to randr2 to ignore acpi and hotplug randr events.
      shot - only access e client if not null
      e - xsettings - calloc buffer since we leave 3 of 4 bytes unset
      e client - desk wait - ref it properly and clean up delfn
      e - e_client - fix added printf
      e screenlock config diloag - note insecureness for personal pw/pin
      e auto-placement - don't include shelves from other screens
      e_shelf - check visiblity with zone and desk FIRST not later
      e_place - dont need extrra zone check here anymore
      e - randr2 - filter to the "best" common mode match on clone config
      e randr2 - add some logic for knowing when to ask to configure a screen
      e - fix profiles to have correct adjust value for bl adjust in bindings
      e start - path manipulation - don't add a : if there already is one
      enlightenment deskenv support - fix dialog labelling and desktop name
      e desklock - listen to randr screen changes and re-do locks
      fix leak in randr2 when matching clone modes
      e mixer - replace with epulse/emixer
      update po files
      Revert "fix mixer gcc class name"
      e - mixer - don't do anything on desklock if no mixer context exists
      e - shelf menu - handle deletion properly if cb is not for shelf menu
      Revert "Revert "fix mixer gcc class name""
      mixer - dont make list scrollable horizontally for nicer look
      e mixer - fix segv on desklock if default sink not set yet
      e - mixer - clean up popup a bit with mute next to slider etc.
      e menu - an extra object ref causes menus to never be freed
      e - mixer - allow to 150% volume with some "stickynedd" from 100 to 120
      e comp - fix refcounting for e_comp and comp clients
      e - fix crash in desktop lookup+fixup where exe_inst is null
      e - bring back fullscreen crash bug while fixing refcount correctness
      e - e client, comp win etc. reffing fix ... part 2
      e passive window grabs - fix side-effect leave/enter events on clients
      e -> menu -> fix games menu to be flat like others and include steam
      e desktop file properties - fix icon sel tab to expand icon and icon name
      e randr2 - auto clone and use common res when doing so - make it work
      e - unbreak client pixmaps when native surf is used
      e - randr allow you to turn off screens and keep them off if config says so
      e - randr - handle lid close screen turnoff correctly again
      e shelf - small missing set of signals - tell theme when inset scrolls
      deskmirror - fix dangling reference to mirror by refcounting it
      e - systray - add more sizes to icon hunt to fix missing icons
      Revert "Revert "deskmirror - fix dangling reference to mirror by refcounting it""
      e pagers - fix full desktop ddnd (eg middle mouse) to finish the drag
      e - mixer - fix leak when seting volume
      e mixer - discovered bug as a lack of feature - does not remember volume
      e mixer - fix up saving to save everything
      e mixer - save state when we get change events too
      e mixer - shut up coverity CID 1323098
      e comp - set rects to null to silence compiler warning
      e winlist focus alt-tabbing - fix focus list changes while tabbing
      e - fm - flush all evas caches to get rid of open file handles b4 umount
      e config - cache sizes in config don't actually work, so remove
      Revert "Revert "Revert "Revert "deskmirror - fix dangling reference to mirror by refcounting it""""
      efm - handle cancel of async eio if icon is freed and eio still active
      e - efm fix. fix eio error handler that is called after eio cancel
      e comp - default config was rather broken - fix
      e comp data - actually ... NO visibility effect by default is right
      e mixer - be more robust if pulse exits/crashes and def sink is null
      e - comps sync - ec client was null - i think, so protect against crash
      e - ibar - fix clash when 2 icons of the same path get added somehow
      e exec tracker - fix tracking to update desktop files on efreet change
      ibar - fix shutdown if ibar client menu is up
      e deskmirror - fix loss of mirror object from deskmirror
      e screens/zones/randr - store randr2 id in xinerama and zones for lookup
      e mixer fix - fix default mixer to pulse if there
      e - fix compositor fade out ghosting
      e msgbus - move almost all of core dbus methods to msgbus module
      e - efm - rate limit dbus requests to open dirs or files to avoid dos

Cedric BAIL (3):
      lokker: empty string should not be translated.
      battery: let's finally allow the battery process to rest also when enlightenment die.
      temperature: let's finally allow the temp process to rest also when enlightenment die.

Chidambar Zinnoury (4):
      Bugfix: e backlight: use saner default values.
      Bugfix: e dialog: don’t crash when using the escape key to close.
      e menus: Fix invalid comparisons.
      e fm: Use correct string length when copying path.

Christopher Michael (357):
      bugfix: Fix e_msgbus file having missing initializers for Eldbus     Messages & Signals
      bugfix: Fix e_notification file having missing initializers for Eldbus     Messages & Signals
      bugfix: Cleanup appmenu module having missing field initializers for     Eldbus Messages & Signals
      bugfix: Cleanup bluex module having missing initializers for services     & icons
      bugfix: Cleanup fileman module from having missing initializers for     Eldbus Messages & Signals
      bugfix: Cleanup msgbus module from having missing field initializers     for Eldbus Messages & Signals
      bugfix: Cleanup systray module having missing initializers for Eldbus     Message & Signals
      Cleanup teamwork module from having missing initializerss for Eldbus     Messages & Signals
      wl-desktop-shell: Bump xdg protocol version
      e-comp-wl: Remove dead structure members
      e-comp-wl: Update compositor for new xdg shell protocol
      wl-desktop-shell: Update desktop shell module for new xdg shell protocol
      wl-desktop-shell: Update module code for new xdg shell protocol
      fix unused function paramters warning when building for wayland only
      only call ecore-x functions here if we are Not build for wayland-only
      clean compiler warnings when building for wayland-only
      remove ifdef's for compiling out e_dnd support in wayland-only mode
      fix compiler warnings when building for wayland-only
      don't clear 'changed' variable unless we are going to use it. (fixes     compiler warning when building for wayland-only)
      fix compiler warnings when building for wayland-only
      fix compiler warnings when building for wayland-only
      declare drag finished callback event if building for wayland-only
      Revert "don't clear 'changed' variable unless we are going to use it. (fixes"
      don't define x selection notify handler if we are building for wayland-only
      cleanup compiler warnings when building for wayland-only
      Don't resend a configure event after resize is done. This is part of a     xdg_shell maximize fix
      send xdg surface configure message when we maximize/unmaximize.
      fix improper define which was causing uuid header to not be included     in certain cases.
      fix resizing wayland clients by sending configure message if client is     Not maximized.
      update wl_seat interface version so that gtk apps function...for     Daniel ;)
      don't crash when closing internal dialog boxes
      e-comp-wl: Send the resource as data to the surface_create signal
      e-comp-wl: Support wl_display_add_socket_auto function
      e-comp-wl: Reduce calls to wayland protocol functions. These are not     needed here and just waste extra cycles.
      e-comp-wl: Enable sending of the surface_create signal from the     compositor and provide an API function to retrieve that signal (used     in a pending commit)
      bump required wayland-server version to 1.6.0 for wayland-only
      wl_desktop_shell: Fix formatting
      wl-desktop-shell: Don't call e_client_ping here.
      remove old wayland compositor file
      remove useless return
      add start of new compositor
      set comp_gl if we have the correct engines available
      add functions to create new compositor
      add code to setup wayland logging function
      add code to create new wayland display
      add code to create wayland display socket
      add code to setup wayland compositor signals
      add code to create and bind the wayland compositor
      rename compositor delete callback
      add function call to initialize shm
      add code to integrate wayland event loop with ecore_main loop
      add code to load desktop shell module
      add code to initialize data manager
      add code to initialze input
      add code to setup input & keyboard if we are using an X compositor
      set compositor wayland data
      add code to initialize Ecore_Wayland
      add call to shutdown Ecore_Wayland
      Fix missing variable compiler warning
      Fix printing of wayland log output
      start on actual compositor interface code
      rename surface signal get function
      remove debug noise in comp_wl_data
      add start of surface implementation code
      add call to delete fd handler when we close the compositor
      unset pixmap resource when surface resource is destroyed
      Fix compile errors. Implement start of buffer code
      Implement code for surfaced attach
      Add code to create the clients window hash
      add code to hook the client new event
      add hooks for client delete
      add internal function prototype for surface commit
      Start on surface commit code and improve some debugging messages
      change damages to be a list
      add code to handle regions (creating, destroying, setting)
      Add code to handle setting surface damages
      add code to handle setting surface opaque region
      add code to handle setting surface input region
      add code to handle pending damages during surface commit
      add code to handle pending opaque regions during surface commit
      add code to handle pending input regions during surface commit
      update resource data comment
      add some comments about fetching resource data
      cleanup any remaning damage rectangles when we delete the client
      cleanup any pending opaque regions when we delete the client
      cleanup any pending input regions when we delete the client
      update todo
      fix typo
      add listener for comp_object_add event so we can setup evas callbacks     for a client.
      fetch pixmap id in opaque & input region set functions
      add hoook for evas show callback and show any video childs
      add hook for evas callback hide so we can hide any video children
      add callback for mouse in on the client.     Fix improper tiler_clear in surface_commit function.     Add fast-path in surface commit to skip processing regions & damage if     the client is not visible.
      remove some debug messages
      add evas callback for mouse out on a surface
      add evas callback for mouse move on a surface
      add evas callback function for mouse down event
      add evas callbacks for mouse up event
      add evas callbacks for mouse wheel event
      add evas callback for key down event
      add evas callback for key up events
      add evas callback for delete_request and fix printf warnings for     uint64_t
      add evas callback for kill request
      add evas callback for ping event
      add evas callback for color_set
      add evas callback for client resize
      add callbacks for client focus/unfocus
      add checks in client focus/unfocus to test for wayland client
      remove debug messages for mouse in/out
      fix formatting
      e-comp-wl: Comment out EGL include
      e-comp-wl: Que a buffer release after we have committed the pending buffer
      e-comp-wl: Remove resize.width & height from structure
      remove call to release compositor buffer reference in e_pixmap. This     is handled differently now.
      wl_desktop_shell: Remove resize.width/height compositor data fields.     Add some debugging print outs.     Don't check client size compared to new size.
      wl_desktop_shell: Remove silly debug message
      e_comp_wl: Cleanup resizing of wayland clients. This hooks into     various resize callbacks to set/unset the resize edges and to update     the surface size.
      e_comp_wl: Add hooks for focus in/out events so we can set wayland focus
      e_comp_wl: Implement surface frame callback support
      send wl_buffer release after we have drawn this pixmap
      change comp_wl_data structure to store the wl_resource of the client     buffer. No longer dealing with reference buffers.
      e-comp-wl: Make new compositor functional.
      Merge branch 'devs/devilhorns/e_comp_wl'
      e_comp_wl: add support for priority raise/normalize during focus events
      e_comp_wl: Remove unused variables
      e-comp-wl: Cleanup wayland compositor header
      e-comp-wl: Start to reimplement subcompositor and subsurface support
      e-comp-wl: Destroy subsurface resource in destroy callback
      e-comp-wl: Implement subsurface destroy callbacks
      e-comp-wl: Implement subsurface position set function
      e-comp-wl: Implement subsurface synchronized_set function
      e-comp-wl: Implement subsurface desynchronized_set function
      e-comp-wl: Implement subsurface place_above function
      wl-desktop-shell: Always set netwm.ping on the client
      e-comp-wl: Implement subsurface place_below function
      e-comp-wl: Add internal function prototype for subsurface commit
      e-comp-wl: Start on implementing subsurface commit functions
      e-comp-wl: Fix various compile errors
      update wayland readme
      e-comp-wl: Implement subsurface commit_to_cache and commit_from_cache     functions
      e-comp-wl: Implement subsurface parent commit function
      e-comp-wl: Remove unnecessary todo item
      e-comp-wl: Implement callback for surface resource destroy
      e-comp-wl: Set e_client properties on subsurface E_Client
      e-comp-wl: Hook into post_new_client event so we can setup hints and     export any shape changes
      e-comp-wl: Clip shape rectangles to client size
      e-comp-wl: Fix keyboard input with wayland clients when running in X11.     Don't run client_post_new hook for deleted clients.     Start work on client pre_frame hook.
      Fix incorrect return value when creating native surface for wayland     clients
      e-comp: Return proper post value for wayland clients during     client_update
      Implement caching of pixmap resources for wayland clients.     Move sending of frame completion to the image_draw function.
      e-comp-wl: Implement client idler for sending configure during resize.     Cleanup surface commit function to work with new pixmap caching code.
      e-comp-wl: Don't try to set null data if we don't have a surface
      e-start: Fix 'control reaches end of non-void function'
      call e_powersave_init Before we call e_screensaver_init because the     init of e_screensaver sets up an event handler for the     powersave_update event (which would be 0 unless powersave is init     first).
      remove use of deprecated e_comp_get function
      wl-desktop-shell: Remove use of deprecated e_comp_get function
      fix issue where wayland modules were always creating a new compositor
      comp_wl: Fix issue with multiple clients being created
      wl-desktop-shell: Fix issue where internal elm windows were not     borderless
      comp-wl: Add missing function prototype
      comp-wl: Remove unused variable
      pager_plain: Fix Coverity CID1261290 reporting logically dead code,     but in fact it looks like a copy/paste issue
      Fix Coverity CID1261288. Idential code for different branches
      Fix Coverity CID1261286. Identical code for different branches
      comp-wl: Set argb and no_shape_cut for new clients. This fixes the     black shadow issue
      fix centering of elm wayland windows
      update entry widget to not use deprecated elm scrollbar policy function
      don't crash if the client comp_data has no surface yet
      add workaround for ELM_DIALOG_WIN_BASIC not working in wayland.     add #warning to remove when resolved.
      wl_drm: Fix creation of the ecore_evas_gl_drm
      add fixme note about desklock timeouts not working in wayland
      wl_x11: When creating the ecore_evas for wl_x11, use     ecore_evas_screen_geometry_get function and resize the ecore_evas     accordingly.
      Ignore checking size of client and just always send new size. This     fixed basic-->advanced dialogs here
      update README.wayland for Mike's everything module fixes
      de-e_comp_get()ify e_actions
      de-e_comp_get()ify e_desk
      de-e_comp_get()ify e_deskmirror
      de-e_comp_get()ify e_int_client_menu
      de-e_comp_get()ify e_moveresize
      Revert "only set wl client borderless state as necessary, don't overwrite existing states"
      make enlightenment build again for wayland-only
      remove unused inline function
      de-e_comp_get()-ify lokker module
      add function prototype for getting idle time
      add function to return input idle time in wayland compositor
      make desklock timeouts work in wayland-only. Fixes T1818
      add EINA_UNUSED for unused function paramater
      de-e_comp_get()-ify grab dialog
      de-e_comp_get()-ify gadcon
      de-e_comp_get()-ify e_gadcon_popup
      de-e_comp_get()-ify e_pointer
      de-e_comp_get()-ify e_scale
      make e_scale get the dpi for wayland also
      de-e_comp_get()-ify widget_bgpreview
      de-e_comp_get()-ify e_zone
      de-e_comp_get()-ify e_randr2
      fix e_pointer using incorrect comp variable
      start making e_grabinput work for wayland (nb: not finished yet)
      fix copy/paste errors
      pass the proper window to ecore_wl functions
      cleanup keymap properly on shutdown(fixes E restart issue).
      reset keyboard modifiers when client is deleted
      Revert "reset keyboard modifiers when client is deleted"
      de-e_comp_get()-ify e_utils
      quiet compiler warnings when building for wayland-only
      add a mod_changed field to compositor data so we can know when     modifiers change
      change keyboard input listeners to Not depend on a client but rather     use ecore_event_handlers for key events.
      cleanup xkb state modifiers and only update state_mask if necessary
      only send key events to focused clients
      call e_manager_new with the proper root window so that keybindings on     the desktop work
      enlightenment: Fix 'type' may be used uninitialized message
      enlightenment: Don't crash if fwin app dialog has no exec_cmd
      fix e_pixmap compile for non-wayland usecase
      fix typo in wayland readme file
      enlightenment: Fix building for wayland-only
      update wayland README file to remove build confusion
      fix compiler warning about pointer targets differ in signedness
      fix some formatting ugliness
      change output_bind function name
      add E_Comp_Wl_Output structure and function prototype to create outputs
      Fix T2131 (crash when creating wl_outputs)
      create wl_outputs when in wayland-only mode
      don't remove E_Comp_Wl_Output on unbind as this Could lead to nasty     crashes if a second client tries to bind wl_output
      append E_Comp_Wl_Output to compositor's output list during output_init     call
      remove unused variable
      add a surface_state structure to E_Comp_Wl_Client_Data
      adjust wayland compositor scale when we adjust e_scale
      Implement buffer_reference to fix client resizing issue
      fix compile issue due to output change and fixup subsurface creation to match new "state" paradigm
      remove missed use of E_COMP_WL_PIXMAP_CHECK macro
      set output->scale to e_scale, and when we wl_output_send_scale     actually send output->scale
      when we get a request to close client app, defer resource deletion     until After close animation has been run
      don't install SIGBUS handler if we are running wayland-only
      enlightenment: Bump required Wayland version to 1.7.0
      enlightenment: Implement support for wl_data_device_interface "release" event
      add debugging when output gets bound, and fix formatting
      wl-drm: Add more debugging during output hotplug events
      fix debug message for wl_output_bind
      wl-drm: Remove need for extra E_Comp variable
      wl-drm: Remove output event handler when we shutdown
      wl-drm: Hook into ecore_evas_resize callback to update comp canvas
      wl-drm: If we end up using software_drm, then override elm preferences (ala X compositor)
      e_comp: Only need 'type' variable if we are building with HAVE_WAYLAND
      e-comp-wl: Remove unused variable
      wl-drm: Use ecore_evas_new with an engine name rather than direct ecore_evas_drm_new calls
      e-comp-wl: Don't crash if we fail to create a new e_client
      wl-drm: Set initial compositor pointer values base on ecore_evas_pointer_position
      Revert "wl-drm: Set initial compositor pointer values base on ecore_evas_pointer_position"
      wl-drm: We need to set the compositor pointer values After wl_comp_data has been created else we crash
      e-comp-wl: Init randr if we are not wayland only
      Fix T2385 : internal windows not showing resize cursor
      enlightenment: Make E build again with EFL from git
      make e_acpi_lid_is_closed function callable from wl_drm module
      wl-drm: Start on making the RandR config dialog usable in drm
      send screen paramaters in proper order to e_comp_wl_output_init
      fix numerous compile errors from D2482
      remove unused 'serial' variable in mulit-move callback
      wl-desktop-shell: Quiet debug output
      conf_randr: Reduce debug output noise
      drm randr: More work on getting RandR functional in E-Wl. This adds a     function to remove an output from e_comp_wl also.
      wl-drm: Don't enable/disable an output until after we have set the current mode
      add missing EINA_UNUSED for function paramater
      Fix call to e_comp_wl_input_keymap_set
      add missing EINA_UNUSED for function paramater
      remove unused variable
      ELM_WIN_DIALOG_BASIC is broken in wl right now, so for wl create     normal elm windows for now.
      remove cpp warning
      fix call to e_comp_wl_input_keymap_set for building with     wayland-client support
      allow starting enlightenment with the valgrind option again
      Properly fix T2182 (add a --version option to enlightenment)
      wl-desktop-shell: Fix T2357: Update xdg_shell for version 5
      wl-desktop-shell: Fix popup menu placement for xdg surfaces
      e-comp-wl: #if 0 out a currently unused function for pre_frame assignment.
      Fix Coverity CID1298052
      Fix Coverity CID1298053
      wl-desktop-shell: Fix formatting
      wl-desktop-shell: Remove useless return at end of function
      wl-desktop-shell: Don't crash when trying to place popup menus in QT apps
      add xwayland to configure.ac
      Add xwayland module to modules Makefile
      Add xwayland Makefile
      add xwayland module desktop file
      add xwayland module edj file for icon
      Add start of xwayand module code
      xwayland: Fix configure.ac to substitute the xwayland binary path
      xwayland: Fix makefile to use xwayland binary path
      xwayland: Create and bind to unix & abstract sockets
      xwayland: Create the wl_client which represents the window manager     process.
      Whitelist the new xwayland module
      xwayland: Fix launching of XWayland server and pass proper display to     wl_client_create
      xwayland: Add some debugging code while trying to work out failures     with this
      xwayland: Fix build breakage with recent e_comp_wl changes
      xwayland: Check for sigusr1 in event handler
      xwayland: Add code to cleanup xwayland on shutdown
      xwayland: Add checks for xcb libraries needed for xwayland support
      mixer: Fix resource leaks
      e-comp-wl: Fix formatting
      e-comp-wl: Don't crash from a missing keymap
      e-comp-wl: Release keys on key_up regardless if client has focus
      Don't call ecore_x_xkb_select_group if the compositor is not X11
      e_grabinput: Don't call ecore_x functions if we are not an X compositor
      correctly fix check for compositor in e_grabinput
      correctly fix check for x11 compositor in e_xkb
      xwayland: Use proper E_API for exporting module symbols
      e-comp-wl-input: Format for 80 columns
      e-comp-wl-input: destroy xkb keyboard state Before destroying the keymap
      e-comp-wl: Update modifiers on key down/key up events
      shot: Fix formatting for 80 columns
      e-comp-wl: Add screenshooter protocol files
      shot: Add screenshooter client protocol files
      e-comp-wl: Add screenshooter files to build order
      e-comp-wl: Add screenshooter structure to comp_wl_data and add additional fields we need in E_Comp_Wl_Output
      e-comp-wl: Create compositor screenshooter global and add function to actually handle taking shots
      wl-drm: Add function to readback pixels for compositor screenshots
      shot: Update shot makefile to include client screenshot protocol files
      shot: Update shot module to now be able to take Wayland screenshots
      remove wl_screenshot from configure.ac
      remove old wl_screenshot module
      shot: Update with proper compositor checking tests
      shot: Disable window shots in wayland for now
      shot: Enable feature of taking just window shots in wayland
      e-comp-wl: Don't call keyboard_modifiers_update twice
      e-comp-wl: Update keyboard key state regardless of client focus or not
      e-comp-wl: Add support for wl_keyboard_send_repeat_info to allow for configurable keyboard repeat rates
      e-comp-wl: Update keyboard and modifier state AFTER we send them to clients
      e-comp-wl: don't send keyboard modifiers twice.
      e-comp-wl: Fix getting end key during key down/up events
      e-comp-wl: Fix T2570: stuck key when closing efm windows
      e-comp-wl: Remove unused variable
      e-comp-wl: Fix region_add and region_subtract functions to make sure we have accurate opaque regions
      desklock: Fix T2589: Screen Lock crashes in E
      enlightenment: Remove listener for XDnD status
      enlightenment: Allocate space for terminating NULL
      enlightenment: Remove static function prototype for unused function
      wl_desktop_shell: Formatting
      xwayland: Add missing EINA_UNUSED for unused function parameters
      enlightenment: Update README.wayland to reflect things that do not work yet
      enlightenment: Remove legacy unused e_pixmap_image_draw_done function
      enlightenment: Replace old comp_type conditionals
      enlightenment: Replace old comp_type conditionals
      enlightenment: Remove wl_screenshot module from whitelist
      enlightenment: Remove commented out reference to wl_screenshot Makefile
      enlightenment: Fix formatting of Wayland compositor code so it is easily readable in 80 columns
      enlightenment: Update wayland readme
      enlightenment: Add missing EINA_UNUSED for unused function paramaters
      enlightenment: Add missing EINA_UNUSED for unused function parameters
      enlightenment: Add missing EINA_UNUSED for unused function paramaters
      enlightenment: Add missing field initializers for Evas_Point
      enlightenment: Add missing field initializers for Eina_Rectangle
      enlightenment: Fix E_CONFIG_LIMIT to use the proper min & max values
      enlightenment: Use 'fabs' to get absolute value of floating point types
      enlightenment: #if 0 out an unused variable
      enlightenment: Use 'fabs' to compute absolute value of floating point     types
      enlightenment: Make sure we have a zone before calling     _bgpreview_viewport_update
      Fix e_menu trying to swallow an object from a different canvas
      Fix formatting and remove extra blank line
      Fix invalid compositor type check in e_dpms_force_update

Conrad Meyer (4):
      Mixer Pulse: Fix trivial use-after-free.
      backlight: Use basic ACPI sysctl knob on FreeBSD (kernel)
      tempget: Add lm75(4) temperature source for non-x86 FreeBSD
      e_auth: Add suid helper for lokker own-pw checking on FreeBSD

Daniel Hirt (1):
      lokker: update caps-lock hint even on "checking" state

Daniel Kolesa (17):
      remove obsolete E_Hal.h include
      remove hal detection from build system
      specialize some sysactions fields for freebsd
      freebsd: use /usr/sbin/zzz for suspend
      freebsd seems to require both -fPIE and -pie in cflags to compile
      rename WEIGHT/ALIGN/EXPAND/FILL to E_WEIGHT/E_ALIGN/E_EXPAND/E_FILL
      seems like enlightenment_sys will still fail linkage on freebsd; workaround
      remove e_mod_xembed.c from POTFILES.in
      clean up E ptrace detection and usage
      detab e_start_main.c; spank spank spank
      e_start_main: refactor (reduce scope depth, separate ifdefs, cleanup)
      remove unused variable
      fix indentation
      cpufreq: freebsd fixes
      tempget: Add more temperature sources for FreeBSD
      mailmap: update q66
      remove str(n)dupa usages

Dave Andreoli (3):
      Fix gadman config to be actually usable.
      Update gtk bookmarks to work with new gtk3 path
      Improve italian lang

Derek Foreman (32):
      Conditionally ignore wayland cursor set events
      Provide wl_output interface to clients
      Provide wl_output events on hotplug
      Fix wl_output tracking in wayland compositor
      Don't crash when an error pop-up occurs before the compositor is set up.
      clamp to parent height, not parent y co-ordinate.
      Fix stuck modifiers on client exit
      Don't update xkbstate when no app has focus
      Break e_comp_wl_input_keyboard_modifiers_update into two functions
      Send modifiers to wayland clients on focus in
      Wayland: Don't consume serials when not sending events
      Wayland: more checks to avoid consuming serials needlessly
      Wayland frame callback times are in milliseconds
      wayland-compositor: Clamp to 1, 1 on drag resize
      wayland compositor: Remove focus_update from compositor client data
      wayland compositor: Send keyboard enter events on get keyboard
      wayland compositor: remove _e_comp_wl_client_focus()
      Fix wayland compositor on 32 bit systems
      wayland-compositor: Set server mode
      wayland: Remove a lot of E_Comp_Data pointers
      Resize the canvas at the end of canvas init
      Init some vars to NULL in compositor create
      wizard: Prevent crash
      wizard: Prevent crash
      screenshooting: Avoid void pointer arithmetic
      wayland: Also link with libwayland-client.so
      shot: Skip the wayland setup bits when running under X
      wayland: fix key repeat
      wayland: Only send keyboard modifiers to focused resources
      wayland: Always add frame callbacks to current state on commit
      wayland: force wl surface frame callbacks on commit for undamaged surfaces
      Stop using MIN macros when choosing versions for wayland resources

Duna Oh (1):
      fix crash when activating menu that is not in range

Flavio Ceolin (2):
      modules:mixer:pulse Update default sink
      modules:mixer: Avoid pa backend from crash

Florent Revest (7):
      Adds eglfs to Enlightenment
      configure.ac: fixes wayland-only build
      e_signals.c: Inclues Ecore_DRM only if WL_DRM is built and not only if WAYLAND is built
      wl_eglfs: enable gl acceleration, mouse, touchscreen and keyboard
      [HACK??] Fixes wayland-only build
      Fixes build complaining about missing ABOUT-NLS
      Don't load xwayland if it isn't compiled

Gustavo Lima Chaves (1):
      Generate *all* music control files in src tree.

Jake Jaeseok Yoon (1):
      src/modules/clock/module.desktop.in korean add

Jean Guyomarc'h (4):
      modules/battery: fix compiling on OS X
      modules/bluez4: fix duplicated symbol
      e_backlight_main: fix compiling when not having Eeze
      e_ipc: fix creation of IPC server when $DISPLAY is a path

Jean-Philippe ANDRÉ (6):
      Fix include order of EGL & Evas GL
      Add ecore-wayland flags to the general cflags
      Revert "Add ecore-wayland flags to the general cflags"
      Really fix the compilation with wayland
      PackageKit: Fix crash on error
      PackageKit: Fix a crash properly

Jee-Yong Um (1):
      e_actions: Fix to parse syntax correctly in key binding settings

Kai Huuhko (2):
      L10N: Update Finnish translations
      L10N: Update Finnish translations

Leif Middelschulte (2):
      Implement FreeDesktop .deskop Additional Actions menu
      ibar: Fix "additional action"s and seperator placement.

Luis de Bethencourt (2):
      backlight: visual feedback when adjusting value through keybindings
      backlight: remove code duplication

Manuel Bachmann (1):
      build: allow building in pure Wayland mode (no xcb, no ecore-x)

Marcel Hollerbach (27):
      tiling: Implemented tiling window position manipulation
      tiling: Fix issue with window-moving and windows not breaking out.
      Fix wrong deskshow function
      wizard: Fix the resolving of the FIXME comment
      wizard: use eina_list_free to free the list
      Tiling: Fixed break out method
      e_order: Added a function to check if this Efreet entry allready exists
      ibar: Changed the key which is used to store IBar Icons.
      everything: terminate bc instead of quit
      Register the new window into out evas.
      e_win: Fix Dialog Titles
      config: Fix segfault
      po files: remove remove e_randr
      enlightenment_remote: Added a Note that not all features are available
      Ibar: Emit the given origin to the Ibar Icon.
      mixer: this if does not make much sense
      mixer: get volume after setting channels
      mixer: update internal volume and call the changed event
      mixer: only list playbackdevices if they are _real_ playbackdevices
      mixer: Fix segfault when backend does not have any sink
      Merge branch 'devs/bu5hm4n/mixer'
      deskmirror: check if ec is not null before accessing it
      mixer: install app to bin directory
      mixer: install icon and .desktop file
      mixer: start app from bin directory
      Fix make distcheck
      systray: search for the best available resolution of a icon

Massimo Maiurana (12):
      Updating italian translation
      Updating italian translation
      Updating italian translation
      Updating serbian translation
      Updating italian translation
      Updating spanish translation
      Update catalan translation
      Make some randr messages translatable
      Updating italian translation
      Updating italian translation
      Updating italian translation
      Updating catalan translation

Mike Blumenkrantz (1074):
      unset release mode
      bump version
      Revert "mixer: Optionally select an external mixer application."
      don't add nocomp damages for input-only windows
      check protocol visibility for nocomp breaks, not comp object visibility
      manually break out of nocomp
      end nocomp on nocomp end...always
      force render queue on unmaximize if client was fullscreen
      add borderless theme for deskmirror clients to support various animations
      comp render queue on every client resize instead of on unmaximize
      force comp render queue more aggressively to detect changes in nocomp
      client hooks should not continue to be called if the client has been deleted
      thaw evas on winlist activation with no clients available
      fix teamwork popup positioning for non-dbus popups
      fix internal window border changing
      fix signal emission on selected ilist item icons
      add alignment client menu
      remove dead conf_display file
      remove E_Win+e_canvas, convert all internal wins to use elm_win
      add macro wrapper to force elm win accel disabling on internal windows
      rename elm win trap functions for easier namespace debugging
      minor tweaks to prevent harmless invalid reads during restarts with windows open
      fix fileman crash when restarting with window open
      remove ec->changes.internal_props
      bump required efl version for new elm features
      resolve recent coverity complaints
      fix internal window closing with frame button
      remove unnecessary unfocused signal emit on clients
      don't call elm_shutdown() for now
      only change internal win visibility on comp obj show if win not already visible
      only show comp obj during internal win show if win not already visible
      set skip pager/taskbar hints on parent window instead of client window
      remove xembeds from systray module
      force shape queue on notification delete
      ensure string safety on dbus message in connman agent
      apply pointer warp effects immediately when instant warping
      fix efm dnd crash
      print more descriptive error messages when scanner connection fails, also don't exit() here
      don't exit e_fm when eeze init fails, send RASTER mode instead
      store eeze_scanner connection poller to avoid creating an infinite number
      only attempt to start eeze_scanner a couple times before giving up
      attempt to run eeze_scanner on failure to connect, not successful connect
      ensure clients are visible before triggering shape/render queue
      fix X crash when trying to apply desktop window profile to client without desk
      add failure count for client rendering, drop clients after FAILURE_MAX tries
      redo shaped client checks to use shape flags instead of rect pointer, fix shapeless clients
      reduce shape recalc for clients which cannot currently receive input
      remove access module from build
      greatly reduce FAILURE_MAX
      remembering size on a window should also remember maximize state
      apply client size based on correct remember value, only apply if value != 0
      store hide_logo state for desklock backgrounds
      only use elm win title for internal windows if it has been set
      add back notification merging
      use frame geometry in win resize trap to get accurate sizes
      don't show mixer popup during nocomp
      comp pending resizes should not require both w+h to change
      e_box -> elm_box conversion
      don't recalc winlist on client add event if client is not added to winlist
      set elm log level to CRI
      add compile warning note for elm hack
      remove e_box from POTFILES.in
      don't set gravity on client windows during X move/resize
      completely block border changes on MWM borderless windows
      add support for new netwm csd X atoms
      enforce no multihead in X compositor
      remove e_comp_list(), deprecate all related functions for pending removal
      disable client stack debugging
      remove some e_comp_get() usage in core comp/client files
      unused param--
      add E_VERSION_MAJOR define for external module usage
      check focus after X nocomp end
      don't change shade.x/y during unshade or after shade
      +e_win_evas_win_get()
      unwrap INLINE_IMAGE window creation
      set comp X window hint to normal
      use elm_win_fake() to create a fake elm_win for widget parenting/focus
      simplify comp usage in e_fm
      e_entry -> elm_entry conversion
      fix build from tarball when configured mount backend is different from origin
      de-e_comp_get()-ify e_shelf
      e_table -> elm_table conversion
      set evas size hint min in widget min size
      Revert "fix centering of elm wayland windows"
      redo fileman tooltips to size correctly
      autoupdate widget min sizes
      de-e_comp_get()ify e_fwin
      remove unused vars
      force internal window recentering after resize when no move/resize is active
      e_label -> elm_label conversion
      remove unnecessary size hinting
      don't override entry min sizing in filepreview
      make comp cfd unresizable
      e frame -> elm_frame conversion
      e_widget_textblock -> elm_entry conversion
      remove no-longer-necessary size hinting in list widgets
      update widget size hints when setting a resize object
      ignore size hint changes for fileman popups if popup icon has been moused out
      e_widget_button -> elm_button conversion
      de-e_comp_get()ify e_menu
      convert e_conf to use elm_layout for min sizing updates
      Revert "revert all the ui breakes in e - going the wrong direction in the"
      Revert "e dialogs - this one too"
      don't update widget size hints on resize add if hints already exist
      remove widget subobj delete callback on widget delete
      only set internal win name/class if not already set
      randr widget needs to set min size hint on calc
      convert shot dialog to elm_layout
      e_dialog -> elm_layout for bg_object
      enforce min width for filepreview attr entries
      remove unnecessary filepreview size hinting
      use elm functions on new clock elm objects
      improve gadcon popup sizing/positioning
      fix edje usage in frametable
      use changed,user entry scb for widget change to prevent infinite looping
      give csel entries 3 columns to force visibility
      convert e_dialog text object to elm_layout
      fix edje usage in e_dialog
      don't set deskmirror scale for non-mb objects
      reenable elm log domain
      fix elm box parenting
      set client frame geometry for new internal wins based on ee geometry
      remove e_comp_get() use in grabinput
      de-e_comp_get()ify e_dnd
      fix evry build on wayland-only
      typo from last evry commit
      de-e_comp_get()ify evry
      move grabinput focus fix timer to be X-only
      move more grabinput code to not fail in wl
      fix comp cfdlg sizing and centering
      never uncenter a centered internal window
      remove no longer necessary setting of changes.size on client resize
      set wl client geometry before showing in desktop shell
      simplify wl xdg/shell configure functions
      de-e_comp_get()ify e_win
      force server borders on internal wl wins again
      continue to hide window input regions on desk flip if they are shaded
      only set wl client borderless state as necessary, don't overwrite existing states
      simplify/fix wl client borderless setting
      preserve internal window borderless state when set prior to showing window
      Revert "simplify/fix wl client borderless setting"
      defer client frame resizes if client is not protocol-visible
      allow client pixmap size to be used in place of actual client geom for tiler creation
      clarify wl shell errors when failing to create clients
      move wl pixmap creation into shell, fix pixmap id usage
      Revert "move wl pixmap creation into shell, fix pixmap id usage"
      move wl pixmap creation back to comp
      use new pixmap id for internal wl wins
      Revert "Include /usr/local too in the no-duplication of XDG_DATA_DIRS"
      Revert "Do not add /usr/share twice for XDG_DATA_DIRS"
      ensure no duplicate XDG paths are prepended during startup
      don't crash in stupid e_module dialog hack
      change module version name to force module rebuild
      delete all clients in wl delete request cb
      don't hide client before delete in win del trap
      clean up comp object to not use deprecated comp functions
      don't create wl clients as re_manage
      make comp param in e_client_new unused
      ref/free client pixmaps during hide animations
      hide wl clients on surface delete
      make wl clients use post render canvas cb to clear buffers
      Revert "ref/free client pixmaps during hide animations"
      remove unnecessary comp work in wl pixmap functionality
      set wl popups as overrides
      clamp wl popup coords to parent when possible
      remove unnecessary EC_CHANGED from wl shell creation
      move wl pixmap stuff to use pixmap functions in compositor instead of in pixmap
      clear wl pixmap cache on client free instead of leaking
      remove pixmap resource delete cb
      add wl util function for calculating pixmap id
      use pixmap size for resizes in wl commit
      configure/show/hide surfaces which lack shells automatically
      implement wl client cursor support...as clients
      add pointer util function for changing cursor object without deleting it
      replace all occurrences of cursor setting with calls to pointer util function
      use unixtime instead of loop time for wl frame callback done
      force wl client cursor clients to hide when unset from pointer
      correctly set/update wl opaque regions
      add pixmap image border functions
      don't set client shape rects based on wl opaque regions
      fix wl input region setting
      handle image borders during client rendering
      set pixmap image borders for wayland clients
      remove wl opaque tilers, just set border in opaque callback
      unset new_client flag for wayland clients
      set client image borders even when 0
      don't add rect for entire screen on wl region create
      redo pixmap image border to take xywh instead of lrtb
      apply client focus glow based on opaque region
      set take_focus more appropriately for wl clients
      unset wl client cursor when no surface resource is passed
      setup evas callbacks for wl clients during commit
      send wl keyboard enter during commit
      set wl client keyboard focus on evas focus and commit
      remove nonsensical wl client finding code
      use accurate xy coords for wl surface configures
      reenable new_client for wl clients, but force moveresize actions to succeed
      move map before configure for wl clients during commit
      use pixmap size for wl subsurface commit configure
      reapply accurate ec->placed value for wl clients during surface commit configure
      don't set geometry during wl client surface mapping
      don't use garbage values for new_client wl surface configures
      don't add wl evas callbacks multiple times
      unset wl client placed value on first commit to force placement
      remove unused E_Client->input_object
      add E_Client->mouse.in for determining mouse-in status
      don't clear wl surface input tiler during commit
      manage client pointer client hidden states when changing pointer cursor objects
      fix dbus unit installation with DESTDIR
      update wl readme
      add note about logind to wl readme
      remove unused var
      prevent client cursor clients from receiving focus
      remove some futile attempts at variable setting in wl client new hook
      set wl popups to appropriate layer in shell module
      remove unneeded client attr setting in wl shell
      allow focus on normal wl clients again
      add YOLO define to throw a compile warning for Extremely Dangerous Functions
      add first YOLO: e_client_focus_stack_set()
      remove wl override clients from focus stack
      only reject client mouse out for X clients
      add ctrl+alt+backspace to kill wl-only e
      Revert "fix dbus unit installation with DESTDIR"
      revert some comp object debugging bits that snuck into another commit
      use elm scroller for xkb options
      don't revert X focus during nocomp
      block linear desk flips that would wrap if desk flip wrapping is disabled
      use direct path for setting icons in util theme set function when icon is a path
      don't send unfocused signal to override clients
      escape notification popup text...always
      fix crashing when changing desklock settings and using pin/personal auth
      clamp client size to screen when client limit policy does not allow offscreen
      rename extremely frustratingly-named E_Screen_Limits enum and members
      do not reapply focus on canvas object ungrab/close for pointer-focus enthusiasts
      remove unnecessary icon setting and fix sizing in edgebindings
      fix dialog sizing when icon setting fails
      set default text for edgebindings caption when no bindings exist
      fix appindicator icon loading when using IconThemePath key
      don't clamp bgpreview vsize if bgpreview is a fullscreen overlay
      fix border frame color classes to be configured as solids, not text
      pre-escape all notification body texts before display or merge
      reject ignored clients from client mouse event functions
      unify wl comp mouse button callback checks
      don't send wl mouse button events when client's menu is active
      update wl xdg states on maximize/fullscreen events
      disable fileman popups in wl-only mode
      noop when setting pointer object if re-setting same object
      remove wl client resize idler, send ec->w/h instead of ec->client.w/h on resize
      send different values to wl clients for configure when performing a resize action
      update+clamp wl surface client size to buffer size during commit
      improve wl grab resize calcs
      remove ec->awaiting_hide_event
      grab wl shell surface geom and use for adjusting resize operations
      reapply wl surface focus during commit when necessary
      set ec->fullscreen before applying fullscreen geometry
      never resize client clip object
      re-setting same cursor object updates hotspot as expected
      Revert "when we get a request to close client app, defer resource deletion"
      hide comp object image on smart hide
      force non-internal wl clients to hide when gl is not available
      add E_Client->dead to mark clients that should immediately be removed from the compositor
      trivial move comp object function
      flag non-internal wl shm clients as dead and delete mirrors on hide
      only hide comp object images for dead clients on smart hide
      don't require client mirror object existence to hide dead comp object mirrors
      disable wl clients in X
      exit immediately if any unrecognized arg is passed on startup
      use stderr messages when failing to init X compositor
      remove unnecessary wl client pixmap checks
      Revert "disable fileman popups in wl-only mode"
      use current zone for shelf cfd setup
      fix horizontal/vertical smart maximize
      fix crash when using e_comp_object_util_center_pos_get() with non comp_objects
      redo ibar icon label position signalling to emit left/center/right
      fix invalid eina list usage when merging wl surface frame list
      don't attempt to find wl shell E_Client when one cannot exist
      don't reuse wl surface pixmaps without adding a ref
      always create new client for wl shell surfaces
      CRI on attempting to change a pixmap's client when pixmap already has client
      don't modify pixmap hash when changing pixmap parent window
      slight ibar dnd optimization when checking taskbar apps for drop site
      fix ibar drop calc to not unexpectedly trigger epileptic seizures in users
      don't identify all wl shell clients as internal...you crackhead
      disable wl client hide animations even with gl
      wl drm output module must set comp gl state more pedantically
      Revert "e - fix build when wayland not enabled"
      conditionally compile elm win trap wayland functionality
      don't create new wl shell clients for internal windows
      correctly apply wl shell client border states only for non-internal clients
      don't crash when creating external shell surface clients
      don't reset placement of internal wl clients on first commit
      remove unused wl variables
      send client sizes for wl configure events when fullscreening/maximizing
      fix wl shell client borders for internal, borderful clients...again
      de-e_comp_get()ify e
      remove e_comp_get() function
      e_util_comp_zone_number_get() -> e_comp_zone_number_get()
      remove e_util_comp_zone_id_get() and e_util_comp_zone_number_get()
      remove e_comp_util_evas_object_comp_get() usage
      remove e_comp_util_evas_object_comp_get()
      remove E_Comp_Object->comp member
      remove E_Client->comp
      E_CLIENT_*FOREACH() macros no longer take a E_Comp param
      remove unnecessary E_Comp references in comp object callbacks
      comp canvas functions no longer require an E_Comp param
      remove E_Event_Compositor_Resize struct
      remove E_Drag->comp and E_Comp param from e_drag_new()
      remove e_comp_evas_find() usage
      remove e_comp_evas_find()
      remove e_util_comp_current_get() usage
      remove e_util_comp_current_get()
      e_comp functions no longer require E_Comp param
      e_client functions no longer require E_Comp param
      e_zone functions no longer require E_Comp param
      use correct wayland ifdef for E_Client uuid generation
      remove E_Zone->comp member
      remove e_util_zone_current_get() usage
      remove e_util_zone_current_get()
      e_util_comp_desk_count_get() -> e_desks_count()
      bump modapi version to 15
      wl compile fixes
      fix constant expression conditional
      only throw frame object size CRI for X comp objects
      set e_comp->elm as fullscreen for internal elm hinting
      remove E_Comp from e_desktop*edit apis
      e_desktop_border_edit -> e_desktop_client_edit
      remove E_Comp from E_Client_Layout_Cb
      remove E_Comp from object/about dialogs
      remove E_Comp from color dialog
      remove E_Comp from e_fm_prop_file()
      remove E_Comp from e_resist apis
      remove E_Comp from e_configure registry callbacks
      remove most E_Comp usage from e_comp
      remove most E_Comp usage from e_comp_x
      remove E_Comp usage from e_comp_canvas
      remove E_Comp usage from e_font
      remove E_Comp usage from e_comp_wl
      remove E_Comp usage from internal menus
      remove E_Comp usage from wl desktop shell
      remove E_Comp usage from tiling config
      remove E_Comp usage from shot
      remove E_Comp usage from notification popups
      remove E_Comp usage from fileman/fwin
      remove E_Comp usage from conf
      remove E_Comp usage from conf_apps
      remove E_Conf usage in conf theme
      update contact module for api changes + remove E_Comp usage
      __UNUSED__ -> EINA_UNUSED
      remove contact module
      remove illume modules
      remove manager number from e_bg functions
      completely remove E_Manager
      remove manager/container id from bg/wallpaper things
      remove E_Comp->x/y
      remove shelf manager/container references in config
      remove manager references in desk name/profile configs
      remove shelf manager config vals from profiles
      fix straggler container text in mousebindings config
      remove E_Comp->num
      remove E_Remember->prop.head
      remove e_util_head_exec()
      move E_Comp->root window setting into e_comp_wl_init() for wl compositors
      move comp fake layer init into canvas init for non-X compositors
      remove E_Comp from gadman and systray structs
      mobile policy desk set hook needs to ignore new_client clients
      decrement e_comp->new_clients counter when unsetting new_client flag on wl cursor clients
      fix e_remote bg commands
      remove useless wl comp code for shape exports
      move wl E_Client creation to same place as E_Pixmap creation
      make only critical notifications display in presentation mode
      fix geolocation compile
      geolocation module build: now with fewer generated files!
      block ignored clients from lost client list
      add colorclass editor to app menu
      add explicit file deps for geolocation eldbus generated files
      make application color editor follow client geometry on move/resize
      fix wl randr error message string
      move colorclass config to use elm infra, redo cc dialog to use new editor
      remove e_color_class
      prepend geolocation build dir to cppflags
      only call e_comp_wl_shutdown() for wayland compositors
      remove all debug output from mixer module
      don't crash on wl shutdown
      remove layer setting from deskmirror
      always lower e_layout children upon packing
      raise deskmirror windows on startup
      match client dialogs to client's layer
      set desktop editor appselector dialog to be resizable
      set xkb dialog as changed after adding a new layout
      fix entry sizing in file props dialog
      force dialogs to recalc content sizes before setting min size
      don't redo min size hints on e_dialog show
      make entry widget call changed callbacks on "changed" again
      redo color dialog to use elm colorselector
      remove csel widget
      remove cslider widget
      add xkb options scroller as subobj to toolbook widget
      make connman agent dialog resizable and autosized
      toggle comp_hidden and grab input while client color editor is active
      do not attempt to re-center fullscreen/maximized internal windows
      fix desktop editor entry widget parenting
      only set shot window layer if taking window shot
      check correct number of params passed to internal/desk cfd
      set E_Exec_Instance desktop during client idler if none present
      allow client icon change events in ibar client prop handler
      fix nocomp_override conditional which would inaccurately toggle nocomp
      fix return value in backlight helper exe on non-freebsd systems
      fix evry comparison macro to work as expected
      fix pixmap image clearing based on pixmap type
      fix evry app listing list leak
      prune no_display desktops from evry apps plugin
      fix unoptimized stringshare usage in keybindings cfd
      remove support for wayland builds on 32bit
      use client geometry for starting unmaximize calculations
      fix clock popup widget parenting
      swap key -> keyname when attempting to bind lparen/rparen keys
      add function for clearing app menu cache
      clear app menu cache any time a desktop is edited internally
      attempt to decode notification image uris with efreet before showing them
      fix submenu visibility during scroll
      use client geom for comp object centering functions if ec->new_client is set
      add wl client event callbacks at lower priority
      wl client pixmaps now use a different method for creating the pixmap id
      disable client color editor for non-X clients for now
      add explicit includes for elm color class header in colorclass cfd
      Revert "build: Remove generated eldbus files during normal clean and not only maintainer-clean"
      pass surface resource when creating wl surface pixmaps
      use pointer hash for wl pixmaps
      unadjust frame coords when calculating wl surface placement during commit
      update wl shell parent setting code to use clients instead of pixmaps
      add e_acpi_lid_is_closed() for returning cached state of computer lid
      move e_randr internal screen changing timer -> e_randr2_screen_refresh_queue()
      move acpi lid status tracking from e_randr to e_acpi
      _config_screen_find() -> e_randr2_config_screen_find()
      move all x11-related randr code into e_comp_x_randr.c
      add E_PIXMAP_TYPE_NONE
      create e_comp during e_comp_init, set comp_type automatically
      always register E_EVENT_RANDR_CHANGE
      fix ecore-x cflags/libs inclusion for e binary
      fix wl-x11 configure detection/check
      ensure valid strings are send when sending wl output geometry
      move comp_x randr init to screen init function
      break out comp_x gl/sw canvas creation into external function
      create wl-x11 canvas using comp_x canvas creation method
      add a small screen management interface to E_Comp, remove hardcoded x11 randr calls
      always add e_randr2.c to e build
      use randr for screen setup in wl-x11 output module
      change comp type check at start of e_comp_wl_init()
      init randr during wayland init...always
      remove dead conf_randr files
      enable conf_randr module unconditionally by default
      fix module blocking for wl modules
      resize comp canvas on e_comp_canvas_init()
      move comp_x screen setup code into e_randr
      move canvas init after wl init in output modules
      use const lists for drm devices in signal handlers
      add wl drm module phony make targets
      add read-only randr iface for wl drm output module
      check module name existence before reading from it
      simplify comp_x screen setup
      fix typo when setting event state in e_randr2_screen_refresh_queue()
      fix tasks gadget parenting
      fix internal win pixmap id int size in show trap
      fix wl-drm install rule
      remove rest of ecore-drm usage from wl-drm randr info grabbing
      fix comp fake layer init for wl compositors
      fix comp init failure case
      don't set e_comp->root for wl compositors
      ensure evry key events do not get erroneously rejected in grab mode
      ensure client max w/h props are set before applying them to client geom
      do not pass key events through autoclose handler
      set focus on comp autoclose objects
      set internal win icccm name/class/title during win trap show
      add internal win trap to set override property on windows
      fix MANAGER context keybinds to work with rootless compositors
      add comp util function for determining whether the keyboard has been grabbed
      only allow efm key actions if key grab does not exist
      add e_grabinput_mouse_win_get()
      add comp mouse grab detection function
      more accurately determine whether a mouse grab is active in some parts of e
      fix evry mouse event detection on wayland
      redo drop handlers to take an E_Object and Evas_Object
      bump modapi version
      add focus callback to override elm_win being stupid
      freeze comp object edjes while not hidden
      rename client menu move/resize items to indicate real function
      freeze evas events on clients during keyboard move/resize actions
      only apply mouse down focus events if a binding did not run on the same event
      force visibility on clients before attempting to hide them
      change default icon theme to hicolor
      try hicolor icon theme as fallback for fdo icon setting if user's theme fails
      fix notification text to conform to spec and libnotify implementation
      prune module config list when loading a module
      fix comp input ungrabbing to read more clearly and not pop nocomp wrongly
      don't destroy efm icon entry on client focus-in if icon's client is being focused
      add efm function for getting an editing icon
      only apply fwin focus to main efm object if no icon is editing
      fix infinite loop when changing ibar sources
      fix nocomp popping on comp input ungrabbing
      reject client fullscreening based on config and desk visibility
      force xwindow stacking to obey nocomp policy and stack below current nocomp
      allow new fullscreening clients to replace current nocomp where applicable
      remove legacy entry widget pointer setting code
      use layout for theme import dialog
      fix focusing client on mouse events which trigger actions (with exceptions)
      lower minimum backlight clamp to 5%
      fix eo errors for ilist icon select state
      only freeze/thaw edje objects on non-input clients
      disable animations on clients during hide
      completely freeze all deskmirror object events/animations during hide
      fix shelf visibility state signals
      add gadcon visibility handling, send hide signal to pager desks on hide
      fix mixer gcc class name
      allow comp matching for UNKNOWN type windows
      add compositor visibility effects and matching configuration
      rename visibility effect struct member effect -> visibility_effect
      use a safe iterator when deleting clients during comp shutdown
      add flag to E_Comp_Object for detecting show animation state
      add flag for detecting whether an effect is currently set on a comp object
      unify comp object visibility effect animation code
      send client/screen/pointer geometry to visibility effect edje
      use new visibility effects by default for menu + combo windows
      add utility function for determining if a comp object should animate
      only play visibility effects for allowed clients
      allow layer-blocked clients in deskmirror to restack
      remove a stupid elm win hack flagged for deletion
      use current zone for visibility effects on override windows
      return an accurate value for override clients in e_comp_object_util_zone_get()
      only apply deskmirror client visibility logic for non-deleted clients
      sanitize bool return of _e_comp_object_animating_end()
      make e_comp_object_effect_stop() return bool for object validity
      add comp object bool flag to indicate whether a compositor effect is currently running
      fix animation refcounting when toggling object visibility very quickly
      handle compositor animation race condition when changing effects
      remove xwayland .desktop and .edj files
      fix xwayland linkage + makefile formatting
      update xwayland for api changes
      load wl_desktop_shell and xwayland after wl comp load
      fix xwayland configure check
      fix xwayland fd dup conditionals
      finish xwayland module implementation
      HAVE_WAYLAND_CLIENTS || HAVE_WAYLAND_ONLY -> HAVE_WAYLAND
      bump wayland version requirement to 1.8
      remove wayland-clients configure option
      use c array size for e atom init
      add setup for WL_SURFACE_ID X atom
      simplify e build and add X headers for xwayland module
      redo wayland-only configure option and define
      remove E_Comp_Data typedef, use backend-specific typedefs unconditionally
      don't undef NEED_X in wl compositor headers
      remove unnecessary header includes from e_comp_x.h
      set wl client surface pointer in surface create method
      unused variable--
      use ctrl+alt+backspace hotkey in wayland compositor for all non-release builds
      reject stacking clients from frame updates in client idler
      reject ignored clients from being processed in client idler
      set client visibility for shell-less wayland clients appropriately during commit
      comment out grabinput focus calls in wayland compositor
      don't call wl comp delete function twice on shutdown
      move X idle flusher to comp_x
      correct e_comp->new_client count for overrides in x compositor
      block xkb activation for non-X11 compositors
      reject non-X clients from _e_comp_x_object_add()
      fix grabinput to work better with multiple compositor backends
      add hooking for WL_SURFACE_ID atom on XWayland windows and composite them
      reject non-x11 clients from _e_comp_x_client_zone_geometry_set()
      add wrappers for window/pixmap/comp_data fetching in x11 compositor
      set shm engine for wl internal windows
      don't select mouse wheel events on x11 reparenting window
      rename --enable-wayland-only to --enable-wayland
      fix wl-x11 configure checks
      remove E_Comp_Data reference from wl-x11 module
      disable wl-fb output module
      fix ecore-x detection with wayland support, also fix wl-only detection
      set pager_plain to fill area
      stop rejecting possibly-valid x11 focus events
      check for possible parent window on x11 mouse button events
      fix focus FIXME regarding focus-setting on clients from other desks
      unset changes.visible when forcing visibility during no-effect desk flip
      trigger fake mouse-out on clients when unsetting focus
      trigger client mouse-in on x11 mouse movement for non-action clients
      enforce pstate's extremely-confusing no_turbo option in cpufreq
      add focusgrab test
      attempt to create xwayland x11 socket path before creating socket
      unset ec->ignored during xwayland client data swap
      disable uuid store
      fix compile from previous commit
      use separate client hashes for x11/wl clients
      add special case for xwayland override clients in show event handler
      only reject ec->ignored clients from wl mouse events
      free all ec->comp_data ptrs in _e_client_del
      fix typo in iterating pending xwl clients on wl surface creation
      temporarily toggle ignored flag during wl surface commit
      add debug info when x11 client messages are missed
      don't attempt to change layer of override clients with parent set in x11
      don't create first draw timers for input-only x11 clients
      clean up xwl data on client deletion
      copy more attributes from x11 -> wl on xwayland client swap
      use client window for x11 button ungrabbing
      redo all x11 client mouse grabbing for focus
      straggler ungrab of x11 parent window from previous commit
      ensure x11 focus grabs are applied on client init when needed
      print xwl loading debug after checking compositor type
      add util function for determining presence of x11 compositor
      fix e_scale wayland conditional defines
      replace some x11 compositor checks with calls to util function
      add client util function for determining if a backing xwindow exists
      replace comp_x usage of internal xwindow detection function with new util fn
      allow hint setting on x11 windows in xwayland
      only ungrab x11 windows when appropriate focus options are set
      reject x11 replay clicks when event window != client window
      do not apply x11 focus grabs to internal elm clients
      fix typo in conditional for setting x11 hints
      clean up xwayland lock/socket init code
      set initial surface attrs for internal wl clients
      reject xwayland module from saved module loading
      pop an error dialog when trying to load xwayland module under x11
      block wl key events from reaching clients during client actions or key grabs
      return NULL when a client's xwayland pixmap is unreachable
      unset x11 focus grabs on clients only if there is an xwindow present
      reorder xwayland client swap attribute setting
      bump required efl version
      only apply xwl client deletion to xwl clients in x11 compositor
      set title/name/class on wl-x11 output canvas window
      make e_client_util_desk_visible() work for overrides without desks
      make pager popups only trigger on urgency hint if client is not currently visible
      silence printf noise in screensaver and pkgkit module
      use evas object callbacks for fwin mouse in/out, don't use ecore-x handlers in wayland
      use ref macros to silence more printfs in e_remember
      move grabinput focus fix timer to x11 compositor and fix it to Work Better
      set CRITICAL urgency for notification internal notifications
      block client signal binding activation when mouse action is active
      feed mouse-in event to drm canvas on init
      account for race condition when creating initial comp object updates tiler
      properly calculate client+frame sizes during wl surface commit
      set xwayland clients in x11 compositor client hash using parent window on flip
      make e_client_util_.?win_get() fns return xwayland windows when available
      remove NEED_X define from build
      fix wayland-only build
      remove NEED_WL define from some makefiles
      make wayland-specific shot protocol files conditional on wayland build
      remove unnecessary E_COMP_WL #defines
      return to using standard client util fns for getting client wins in x11
      redo e_pointer to support xwayland cursors
      unify crash handler functions
      when e crashes in wayland, just crash instead of possibly freezing
      disable netwm sync on x11 clients in wayland compositors
      always set x11 override client geometry on startup
      break up some pointer setting code into helper functions
      add function to fill in x11 cursor image on creation
      add wayland client post-render references in the render loop
      adjust layering of pointer and init splash
      fix xdnd in (x)wayland
      only register dnd xwindow with compositor canvas in x11 compositor mode
      delete render updates for xwayland clients upon triggering a client resize
      disable size debug on drags
      Revert "delete render updates for xwayland clients upon triggering a client resize"
      move xwayland socket connection to its own thread
      simulate netwm sync for xwl clients
      only trigger client mouse-in from x11 mouse move event if client+desk are visible
      ensure that focus is set and focus stack is managed on winlist hide
      never use new clients for stacking part 2: the secret of the stacking
      add E_Client->keyboard_resizing flag
      wl clients should not use edges during keyboard resize
      only use input xwindows for internal drags in x11 compositor
      ...and also ungrab the compositor when internal drags end
      add wl_wl wl output module
      always set new wayland E_Clients to be ignored during client hook
      do not update client list hint when creating a new wayland client
      ensure wayland parts of shot module use the correct wayland display objects
      enforce image border/size/pixels_dirty setting on comp mirrors during create
      fix wl_fb define name in comp init
      add e_client_unignore() for triggering events when unignoring a client
      zero out wl surface opaque region on commit in all cases
      render surface opaque regions as opaque when image border is set
      do not set opaque regions on comp object mirrors
      block compositor keybinds using more accurate x11 detection
      only perform keybind grabs on root window for x11 compositors
      improve wl compositor tiler usage
      don't mangle wl client opaque region tiler during commit clip
      move opaque region (image border) apply to render fn
      fix typo in comp object opaque region render
      do not block winlist activity based on event window in non-x11 compositors
      do not attempt to remove wl xdg popup clients from focus stack
      always stop passing key events on once they reach the lokker callback
      add clients to focus stack as necessary in e_client_unignore()
      add wl compositor desklock hooks to add grabs during lock
      do not add x11 compositor desklock hooks in non-x11 compositor
      redo wl compositor key eventing
      ensure clients possess comp_data before dereferencing it during x11 stacking
      don't block keybind activation while grabs are active
      simulate modal windows for badly behaved x11 clients
      fix wl build
      simplify deskmirror client desk checking
      fix compositing error when client is ec->hidden during show animation
      fix backlight init value
      don't update wl keyboard state on client focus events
      allow wl client focus-out callback to execute on deleted E_Clients
      update wl keyboard resource key presses on focus in/out of surfaces
      set shell-less wl surface mapped state regardless of visibility during commit
      remove unnecessary geometry setting during xwl client swap
      set new_client flag on xwl clients during swap
      create/manage list of focused wl keyboard resources for reuse in kbd operations
      send wl kbd modifiers only when changes occur
      add a timer for wl client focus to delay held key input
      add an actual module no-save blacklist
      fix client smart callbacks on (un)maximize
      do not send duplicate configures for wayland clients during maximize
      always send geometry to configure method for wayland clients when not resizing
      apply csd sizing transform for wayland configure events
      allow x11 mouse wheel events to check ev->event_window for possible client match
      reject x11 NotifyVirtual and NotifyInferior mouse in events
      add functioning wayland screensaver support
      remove e_screensaver_force_update()
      add dpms method for E_Comp_Screen_Iface
      add wl_drm dpms setting
      add E_EVENT_SCREENSAVER_OFF_PRE
      add dpms handling for wayland compositors
      fix wl screensaver activation when deactivating during fade
      ensure expected screensaver blanking in x11 compositors with HAVE_WAYLAND
      fix desklock-related screensaver modification
      fix x11 detection for wayland compositor setup
      block xsettings config update if xsettings has not been initialized
      do not create wayland screensaver timer when screensaver is disabled
      disable x11 mouse eventing in wayland compositor mode
      disable ecore-evas events on client windows during actions
      reduce delay before running screensaver-off animations in wayland
      do not call ecore_time_unix_get() on each key sending loop for wayland clients
      return immediately on wayland focus-in key timer when no focused kbds exist
      end compositor animations for dead clients on hide
      don't reset wayland surface geometry for overrides
      fix new_client setting on xwl clients during swap
      Revert "remove unnecessary geometry setting during xwl client swap"
      use gadget zone for evry gadget launcher
      add fallback loading of default theme on init
      remove spurious focus setting on desk flip without animation
      flip conditional in wizard xdg events to call xdg function first
      fix wizard module loading when E_MODULE_SRC_PATH is set
      unset DISPLAY on xwayland module shutdown
      reject internal window moves when they originate from a wl configure event
      set ELM_DISPLAY appropriately for wayland compositors
      notidle the screensaver in wl compositor mouse move cb
      defer focus-setting on focus revert during desk flip when visibility is pending
      unify most of drag start functions
      only return xwayland pixmap from e_comp_x_client_pixmap_get() for xwl clients
      show drag object immediately when beginning a drag
      reject deleted clients from wl show callback
      track the current pointer focus client in wayland compositor
      further unify drag start functions
      reduce explicit ecore-x type usage in e_dnd
      allow new drags to be created with no associated mime types
      fix compositor type detection for dnd operations
      apply wayland data device focus after focus has been set
      add more wl data device debug infos
      make wl data device util function EINTERN
      fix wl data device kbd focus function
      add server-side wl dnd
      add functionality for blocking wl screensaver activation
      block screensaver activation during wl dnd operations
      use pointer hash to track data manager resources
      enable x11 dnd in wayland compositors
      move menu mouse-up feed util function to E_API in comp canvas
      force mouse-up on wayland drag start
      block internal usage of x11 input grabs under wayland
      reenable compositor shape cutting onto the selection window in xwl
      move wl compositor function for creating data sources to be external
      store global wayland data manager resource
      block wayland mouse button propagation to clients while drag is active
      only attempt to provide wayland drag motion data if drag exists
      make most wayland data device functions external
      reject xwl clients from wayland data device enter/leave functions
      set pass events on DND type windows
      make dummy e_drag rect invisible
      add pixmap aliasing
      alias xwl client pixmaps -> wl surface pixmaps
      implement x11->wayland dnd operations
      force render update on wayland clients during commit
      track xwl dnd event handlers
      block screensaver activation during xwl dnd operations
      print DBG infos for unhandled x11 client messages
      force wl surface frame callbacks on commit for bufferless surfaces
      do not send wl dnd positioning updates to xwl clients
      implement wl->x11 dnd operations
      account for state in xwl property change handler
      add comp util function for determining whether xwayland is active
      use current ecore-x time when setting selection owner for xwl dnd operations
      track xwl clipboard owner
      only update wl dnd surface client if a wl drag is active
      don't crash in wl compositor when data resource is destroyed in multiple listeners
      make wl clipboard source create/unref external
      make e_comp_wl_data_device_keyboard_focus_set() external
      close xwl dnd pipe on operation end
      finish off x11<->wl clipboard support
      add separate log domain for xwayland
      don't remove wl data source listener when xwl owns the selection
      only create fd handler for wl clipboard data source if fd is passed
      don't create pipe for x11->wl clipboard selections
      finish xwl dnd operation immediately if drop occurred somehow
      do not add render update on resize fail due to unusable pixmap in wl
      use unmodified client geometry for new xwl clients during first surface commit
      force copy rendering for argb wayland clients
      don't iterate damage rects during render in wayland compositor mode
      fix xwl pixmap unaliasing during client deletion
      break out wl client motion sending, force motion events during x11 drags
      make wl client mouse button handler fn external
      force sending of mouse button release on xwl drag end
      track button mask for all drags, only end drag when mask has depopulated
      convert E_Comp_Wl_Data_Source->mime_types to Eina_Array
      only delete current drag on x11 xdnd selection loss if x11 owned selection
      don't toggle screensaver twice on x11 xdnd selection owner change
      reject xwl selection notify events which do not match our xwl property atom
      init null wl mime types array when new type is offered
      move x11 ee resize callback to comp_canvas, simplify x11 randr event handler
      enforce compositor canvas resizing/updating when emitting randr events
      emit randr change event on randr init
      add local event for wl_wl output to use when a global has been received
      redo wayland shot init to account for async+slow global loading
      delete data device resources from hash using client
      add e_comp_x and e_comp_wl globals
      replace existing usage of x/wl_comp_data with corresponding globals
      remove some local aliasing of e_comp_wl global
      enable shape cutting for xwl clients during flip
      force xwl client to retain original x11 client's placed flag during swap
      handle winlist kbd events more accurately in wayland compositors
      make pager kbd/mouse grabs more effective in wayland compositors
      explicitly grab compositor on ibar focus
      simplify ibar focus function
      add event rect for deskmirror in pager/taskbar modes
      reject x11 NotifyVirtual and NotifyInferior mouse in events more accurately
      do not modify E_Client->visible value in show/hide callbacks
      unset E_Client->want/take_focus flags in hide callback
      only use deferred focus-setting on desk flip focus if client is not visible
      update wayland readme with current information
      don't set E_Client->changes.visible on successful show/hide
      end wl xdnd drags on the compositor canvas using the full dnd end codepath
      set 'stopping' during logout action
      do not relaunch relaunchable quickaccess windows during logout
      redo fileman menus to only scan the first 100 items found
      feed mouse-up event during mouse down on menus
      disable xkbswitch module loading under wayland
      check compositor screen iface existence before deref in dpms
      remove bz2 from dist
      add compile warning and block load of wl_text_input module
      force render queue and check for redirection on clients with 0x0 pixmaps
      add some smart callbacks for comp objects on redirect/dirty state change
      return false when failing to create a mirror during deskmirror obj check
      watch dirty smart cb for currently unredirected clients in deskmirror
      add basic fullscreen window test
      remove pager mirror delete callback during pager win delete
      remove dirty smart callback from deskmirror clients during client delete
      only check dirty smart callbacks on non-new_client deskmirror clients
      Revert "deskmirror - fix dangling reference to mirror by refcounting it"
      don't watch dirty smart cb for desmirror clients with unusable pixmaps
      add full damage for x11 override clients on resize configure event
      reject focus-set attempt if desk flip to client's desk was rejected
      track focus time for x11 canvas focus, unset client focus on x11 canvas focus-in
      simplify e_desk_show visibility unsetting, reject recursive desk flips
      remove dirty callback for deskmirror clients upon creating visual
      fix x11 compositor to use damage events
      block forced mirror render for clients with native surfaces
      force-disable refocus during desk flip on client activation
      unshade clients when activating
      ensure that normal clients are stacked below overrides when raising
      add extreme hacks to enforce nocomp stacking policies
      set 'starting' flag for desk show in e_zone_desk_count_set()
      ensure that non-fullscreen nocomp clients have their layers re-set
      delete notification mirror objects upon deleting original popup
      unset client hidden flag on config dialogs when activating from another vdesk
      add ilist method for setting disabled state
      enforce gathering client moveinfo before beginning move/resize action
      rename E_Comp_Grab_Cb to E_Comp_Cb
      enable depth+stencil bits for x11 gl compositor canvas creation
      add pre-render callback list for compositor canvas
      add function for getting x11 pixmap from E_Pixmap
      alias x11 pixmaps to parent windows during reparent
      create util function for enforcing comp object image alpha setting
      add smart callback for comp object hiding animation begin
      add function for overriding the native surface of a client's comp object
      add smart callback for comp object damage calls
      set comp object mirror alpha flag more accurately on creation
      remove unused variables in ilist widget
      always send CLIENT_SHOW event when clients are shown
      add function to blank out a client's rendered image
      distribute weekeyboard edj files
      send FLOAT_SET edje messages during desk flip
      make bgpreview widget work with panoramic wallpapers
      always set alpha for internal wins
      decode .desktop link and directory uris in fileman menus
      only lower x11 layer windows for layers which have windows during init
      add eeze watch for backlight events
      remove backlight update calls from backlight module
      do not return non-visible clients for e_client_under_pointer_get()
      only set focus on clients which are visible during client eval
      move focus setting on restart into desk restore function
      apply vertical maximize algorithm for LEFT/RIGHT maximized windows
      unset E_Client->want/take_focus flags during client eval
      block gadcon thaw on unpopulate when gadcon is deleted
      only unpopulate a shelf when applying new settings if the shelf won't be recreated
      clamp client geometry to zone during geometry calc
      redo client maximization when a non-overlap shelf changes geometry
      Revert "Revert "Revert "deskmirror - fix dangling reference to mirror by refcounting it"""
      do not emit client iconify signal when reapplying compositor theme
      calculate comp object visibility regardless of pending damages
      update xkb settings and send xkb update event when calling e_xkb_layout_set()
      fix shot module compile without x11 support
      only init E_EVENT_XKB_CHANGED during xkb init if xkb init hasn't already occurred
      attempt to maintain currently-selected kbd layout when modifying kbd list
      add weekeyboard edj files
      improve client exe_inst creation
      fix systray implementation of notifier watcher (StatusNotifierItem)
      add note for starting wl-x11
      broadcast support for _GTK_FRAME_EXTENTS
      fully support _GTK_FRAME_EXTENTS
      add util function for determining if a client is allowed to have a frame
      fix e_shelf_position_calc() to not set struct members before applying them
      block border-affecting entries from showing up in client menu with csd
      block border-affecting client functions for csd clients
      set comp object client_inset.calc based on frame_object existence
      move compositor frame adjust messages to pixels_get callback
      add csd case for compositor frame adjust messages
      check warp_client existence during pointer warp before dereferencing it
      fix handling of x11 ICCCM WithdrawnState
      set x11 supported atom array size correctly
      initialize pixmap size vars in comp resize interceptor
      map/unmap x11 client windows when toggling iconic state
      bump required efl version
      don't call e_client_unignore() when un-withdrawing an x11 window
      force pixmap clear when hiding an x11 window
      reject identical calls to e_comp_object_frame_geometry_set()
      _GTK_FRAME_EXTENTS changes using a property, not a client message
      force adjustment of client geometry when changing csd frame size
      remove client maximize states during unmaximize only if they are active
      unset E_Client->changes.need_unmaximize after calling unmaximize
      allow client resizes on axes currently unrestricted by maximize state
      unset the requested maximize state when receiving a client unmaximize request
      use more accurate math to determine whether to apply a client maximize change
      do not set client window coordinates during a move until after resizing check
      use client window coords for resize-moving without a frame_object
      s/EAPI/E_API/ ...again
      reject client resize attempts for clients with dirty pixmaps
      remove object event callback on notification popdown
      do not roundtrip for x11 client message DBG if it will not be visible
      unset E_Client->internal_elm_win before deleting the client in e_win
      do not roundtrip for x11 client message DBG if it will not be visible
      free x11 damage region rects
      never mark wl client pixmaps as dirty or refresh them
      redo CSD for wayland clients to use comp object frame geometry
      redo wayland client buffer referencing
      update wayland readme
      merge E19 branch NEWS items
      remove remote colorclass editor usage
      always apply all randr changes after a screen event
      20.0-alpha release
      20.0-alpha NEWS updates
      unset release mode
      add RENDER_DEBUG for forced renders when setting dirty flag
      fix return value of comp render for wayland clients
      fix comp render return value for failed draws of non-argb clients
      unify comp render returns for argb and non-argb clients
      move client post-update adding into render function
      fix systray to work with spec-breaking apps, eg. steam
      move configure init after intl init has completed
      make icon selection dialog resizable in .desktop editor
      clear menu cache when saving a menu file
      throw an ACK when trying to set comp frame geometry if frame exists
      do not set frame geometry on frame-possessing wayland clients
      attempt to load default e_bindings if initial load fails
      repopulate app list dialogs when efreet deskop cache updates
      update wayland readme
      only use fast-path pixmap size updating after a resize for x11 clients
      when removing VERTICAL maximize state, also remove LEFT and RIGHT states
      don't crash desktop gadget systrays when adjusting image sizing
      apply _GTK_FRAME_EXTENTS for xwayland clients
      make wake-on-urgent apply for all cases of window urgency
      explicitly disable screensaver for wayland urgency wakeups
      remove duplicate surface size update for wayland clients during commit
      use correct param ordering for setting wayland client frame geometry
      force full damage for first frame of x11 override clients
      subtract x11 client damage region even when forcing full override damage
      do not return when x11 damage event returns no rects
      trap shaped x11 clients and prevent compositor blocking with high rect count
      cache systray items for each dbus session
      reject deleted clients from x11 sync alarm event callback
      use dbus unique name for tracking systray sessions
      check systray dbus name existence before attempting to recover session
      clear x11 client pixmap when returning from iconic
      force a software render in all cases when finalizing x11 client iconify
      queue pending buffers for wayland shm clients
      update csd using deltas of previous values
      do not use x11 input windows for grab dialogs when running in wayland
      fix typo in wayland keyboard resource unbind list management
      append new keyboard resources for wayland focused-client to the focused list
      do not use ecore-x functions in scale config while running in wayland
      make comp config unresizable...again
      require efl >= 1.16 for wayland support
      add hacks to work around pulseaudio+xwayland integration deadlocks
      unconditionally show opengl option in compositor settings
      remove dead modules from whitelist
      completely remove access module
      defer all module error dialogs
      clip client input rect to client geometry, not window geometry
      enforce cw->obj pass_events state more accurately
      set client input rects more accurately, accounting for SSD
      only apply frame geometry deltas for CSD if the CSD region exists
      reject frame theme changes for clients which have CSD
      when maximizing a wayland client with csd, use window geometry
      add NEWS from 19.12 release
      20.0-beta release
      20.0-beta NEWS updates
      unset release mode
      always unalias x11 client parent window <-> pixmap relation during delete
      clean up some systray leaks
      add E_COMP_ENGINE env var to determine sw/gl
      Revert "when maximizing a wayland client with csd, use window geometry"
      adjust non-x11 client's saved frame geometry when changing csd
      simplify client SMART/EXPAND maximize
      Revert "queue pending buffers for wayland shm clients"
      add native surface (gl) clients to post render list
      fix comp object native surface config checking for non-x11 compositors
      use e_comp->gl flag to set native surface state
      add wayland egl client support
      check for wayland egl extensions before starting a gl compositor
      remove note about window close crashing
      account for window position in efm window drag initial positioning
      adjust efm multi-icon drag positioning by the current pan coords
      set e_comp->gl for wayland compositors based on gl display bind success
      break out x11 client visibility setting into util functions
      move client iconic hint setting into x11 hide function
      emit ibox icon signals to the internal edje object of the e_icon
      add counter and smart callbacks for comp object visible mirrors
      add e_comp_object_mirror_visibility_check()
      toggle x11 client iconic/mapped state based on mirror visibility
      Revert "force a software render in all cases when finalizing x11 client iconify"
      disable client menu stacking functions for unstackable windows
      enforce fullscreen client stacking during nocomp end IFF client is fullscreen
      check client comp data existence in x11 mirror visibility callbacks
      clamp client to ABOVE layer when ending nocomp
      Revert "clamp client to ABOVE layer when ending nocomp"
      use unsigned int for client focus tracking freeze state
      ensure that all mixer volumes resolve to the appropriate gadget icon
      null efm icon eio handle in error callback
      20.0-rc release
      20.0-rc NEWS updates
      unset release mode
      install emixer icon to $(datadir)/pixmaps instead of /icons
      improve readability of E_FIRST_FRAME environment variable detection
      improve x11 client focusing with mouse-based focus policies on mouse move
      do not add new deskmirror clients on desk_set event if client already exists
      do not refill all tasks bars when a sticky window changes desks
      update E_Client->desk member upon focusing a sticky client
      further improve csd calculations for x11 clients
      add safety checks to e_client_focus/raise_latest_set() fns
      always create compositor mirror objects, ignore pixmap image state
      block task gadget refills while a drag is active
      Revert "e deskmirror - fix loss of mirror object from deskmirror"
      ensure that a deskmirror object does not orphan child objects
      always set wayland E_Client->redirected during client creation
      ensure fwin efm delete callback does not trigger crash
      remove fwin popup size hint change callback on win deletion
      ref clients while a wayland shell surface exists
      only create wayland screensaver timer in wayland mode
      only perform drm shutdown during signal handler if drm engine is in use
      reenable restart/shutdown dbus methods under x11
      fix all shadow warnings in msgbus module
      add mechanism for preventing unload of important modules during runtime
      use separate handler for x11 fatal errors when using xwayland
      declare xwayland functions prior to using them
      avoid setting incorrect geometry during new_client frame calc
      adjust for SSD geometry during wayland client resize
      use CSD geometry during move/resize display
      do not apply max client geometry restriction if max geometry is not set
      allow more client hooks to bypass delete check
      re-swallow bg_object after wallpaper transition has completed
      remove e_comp_wl struct keyboard repeat members

MinJeong Kim (1):
      e_menu: remove an unnecessary comparison

Nicolas Aguirre (7):
      Revert "Don't load xwayland if it isn't compiled"
      Revert "Fixes build complaining about missing ABOUT-NLS"
      Revert "[HACK??] Fixes wayland-only build"
      Revert "wl_eglfs: enable gl acceleration, mouse, touchscreen and keyboard"
      Revert "e_signals.c: Inclues Ecore_DRM only if WL_DRM is built and not only if WAYLAND is built"
      Revert "configure.ac: fixes wayland-only build"
      Revert "Adds eglfs to Enlightenment"

Nicolas Marcotte (1):
      added a macro and a fucntion to switch to desktop D on screen S as specified in https://phab.enlightenment.org/T2218

Peter Kjellerstedt (2):
      Add "(drag only)" to title for drag only edge bindings
      Add support for the ISO 8601 date format to the clock module

Samuel F. Baggen (2):
      Do not add /usr/share twice for XDG_DATA_DIRS
      Include /usr/local too in the no-duplication of XDG_DATA_DIRS

Sebastian Dransfeld (20):
      e: Use same gettext version as efl and elementary
      e: Add preferred desktop environment for apps
      e: Improve code
      randr: fix formatting
      randr: further cleanup
      randr: Don't match DP as LID
      randr: remember crtcid for fast lookup on reconnect
      randr: TODO++
      randr: Don't track active outputs
      randr: cleanup try 2
      randr: remove weird code
      randr: handle (x, y) > 0
      randr: always call _e_randr_output_active_set
      randr: don't try to enable crtc with no outputs
      randr: TODO++ and error print
      Revert "randr: always call _e_randr_output_active_set"
      randr: add error print
      systray: revert change which shouldn't go in
      randr: fix bad copy paste error
      randr: improve code readability in lid update

Seunghun Lee (11):
      Remove HAVE_WAYLAND_ONLY dependency from searching and enabling backend module.
      wl_drm: Add event handler for session activation signal.
      remove a kind of typo in E_ZONE_GEOMETRY atom string.
      Add module "wl_text_input" for supporting *wl_text_input* and *wl_input_method* protocol in wayland.
      Binding input method will be allowed to wl_client that is created by enlightenment.
      wl_text_input: initializes global handle after destroying.
      wl_text_input: remove duplicated code.
      wl_text_input: initializes input_method's context when destroy context.
      Add initial module of weekeyboard as a wayland virtual keyboard.
      clear the tiler for input region after setting to comp object.
      e-comp-wl-input: don't leak the initial keymap.

Simon Lees (5):
      Wizard: Update icon theme search list
      e_bg_del should only delete the bg on the zone specified
      remove unnecessary call to e_bg_del
      enlightenment_remote: restore compatibility with older versions with bg-add / bg-del
      Fix copy-paste error in comment, This page is tasks not connman

Srivardhan Hebbar (1):
      autotools: modified autogen.sh script to be able to build from different directory.

Stafford Horne (5):
      e/conf_apps: Fix resizing of "Startup Application" dialog
      e/ilist: Fix issue with multiselect returning wrong index
      e/desk_wallpaper: Fix setting wallpaper from within Virtual Desk dialog
      e/imc: fix issue with input method import segv and small window size
      e/core: Fix minor mem leak when reading module paths

Stefan Schmidt (68):
      modules/wl_drm: Remove trailing whitespaces
      e_client: _e_client_cb_drag_finished is not used in wayland only mode
      modules/lokker: Array address is never NULL.
      modules/teamwork: The ih value would never be < 1 as we checked it already.
      modules/pager: We already dereferenced pw->desk before, no need to check now
      modules/teamwork: Use eina_file_mkstemp() to avoid problems with umask
      modules/mixer: Check fcntl setting CLOEXEC for success
      modules/music-control: Add Tomahawk as compatible player.
      music-control: Update generated code after various eldbus-codegen fixes
      e_start_main: Close fd only if we actually succeeded opening it.
      po: Remove file from now disabled access module to pass distcheck
      e_sys: Make sure we return false if systemd does not support various suspend modes
      e_backlight: de-e_comp_get()ify
      e_bindings: de-e_comp_get()ify
      e_configure: de-e_comp_get()ify
      e_dpms: de-e_comp_get()ify
      e_main: de-e_comp_get()ify
      e_module: de-e_comp_get()ify
      e_mouse: de-e_comp_get()ify
      e_notification: de-e_comp_get()ify
      e_screensaver: de-e_comp_get()ify
      po: Change file name to adapt for randr_conf changes.
      modules: Add new geolocation module to handle location access requests
      modules/geolocation: Keep the UI indicator in off state at start
      modules/geolocation: Add communication to geoClue2 to receive current location.
      modules/geolocation: Add popup with location information to gadget
      modules/geolocation: Fix naming for the whole module to be geolocation
      modules/geoloation: Do not stop the client for now as we cannot enable it again
      e_module: Whitelist geolocation module
      modules/geolocation: No need to set popup to NULL here.
      module/geolocation: No need to init and shutdown eldbus as E handles that
      modules/geolocation: Add module theme and icons.
      modules/geolocation: Ignore now generated edj in git
      modules/geolocation: Add source file for artwork.
      music-control: Generate eldbus files during compile
      everything: win variable is only used inside ifdef.
      everything: Actual return something in non wayland only-mode
      music-control: Mimic explicit file deps fix from geolocation.
      build: Allow to define path for eldbus-codegen binary
      build: Use EFL_WITH_BIN instead of E homegrown one.
      build: Remove generated eldbus files during normal clean and not only maintainer-clean
      gadman: Remove self assignment of e_comp
      systray: Remove self assignment from e_comp
      e_client: Remove self assignment from e_comp
      po: Remove unused e_int_config_randr.c file from POTFILES.in to pass distcheck
      modules/geolocation: Only display a valid altitude value
      modules/geolocation: Make module work with newer GeoClue2
      modules/geolocation: Follow InUse property change to give UI indication
      module/geolocation: Stop setting gadget icon from start and stop callbacks
      e_client: Remove deleted client from UUID store
      e_remember: Update UUID store properties from e_remember
      e_main: Initialize UUID store during E startup
      e_pixmap: Create uuid when being used as a wl surface
      session_recovery: Add wayland extension protocol prototype for session recovery
      wl_x11: Mark data in callback as unused
      modules/geolocation: Keep track of accuracy and set lower minimal value
      modules/geolocation: Limit the accurancy double to one decimal in the popup
      modules/geolocation: Remove unused eldbus interface variable
      module/geolocation: Use correct unref function for proxies.
      wl_drm: No need to init orient to 0 as it will never be read.
      README.Wayland: Update to latest configure options and mention xwayland
      e_widget_filepreview: Remove assign without effect
      modules/battery: Remove assign without effect
      e_comp_wl: create global and bind  session_recovery interface
      e_fm:correct declaration of  function with no parameters
      pulse backend: correct declaration of  function with no parameters
      e_gadcon: use Eina_Bool for one-bit bitfield
      e_menu: use Eina_Bool for one-bit bitfield

Sung-Jin Park (1):
      (1) e_config.c/e_comp_wl.c: add code for making repeat values configurable     (2) e.src(s): add keyboard.repeat_delay, keyboard.repeat_rate into e.src files

Takeshi Banse (1):
      cpufreq: teach cpuinfo_{min,max}_freq as available frequencies

Thierry (2):
      menu: match file looked by code.
      mouse_config: fix accel threshold and numerator limits.

Toan Pham (4):
      Changed search pattern to focus window by name to case-insensitive.
      fixed window focus and keyboard input issues
      Center a dialog window when it is displaying off-screen
      added quick tile to corner feature

Tom Hacohen (18):
      fix: Add more desktops to be tiled by default in the tiling config.
      Fix tiling window properties restore issues with iconify.
      tiling: fix coding conventions and style.
      Tiling: Fix up previous tiling commit (make it safer).
      AUTHORS: Add Luis to authors file.
      AUTHORS: Add Marcel to authors file.
      Randr: Fix null dereference.
      Tiling: don't try to change the border of borderless windows.
      E comp: Adjust according to elm function rename.
      Allow building without ptrace
      Module Music control: Don't build if disabled.
      Tiling: don't tile centered windows.
      E auth: improve clearing out passwords from memory.
      Module teamwork: Stop using a deprecated function.
      Auth: try harder when clearing passwords.
      Logging: Fix broken logging macros.
      Client: fix potential out of bounds read.
      Intl: fix potential stack buffer overflow.

Tomáš Čech (1):
      don't forget wl_desktop_shell's header in tarball

Vincent Torri (1):
      add MIN define for non-linux systems

Vivek Ellur (3):
      e: Fix realloc issue in e font module
      Fix memory leak issue
      Fix null dereference issue

Wonguk Jeong (1):
      conf_application: fix crash on setting Desktop Environment

Yomi (10):
      update copyright year
      Update the error message shown if a theme file is invalid.
      Fixed tense in presentation mode notifications.
      change DESKTOP env setting on startup
      Correct misspelling.
      Fix misspelling in e_randr2.c
      Fix misspelling in e_client.h
      Fix misspellings in E's files.
      Update README for those viewing this repo from github.
      Update links in head.html

bootleg (1):
      Adding support for Pithos (http://pithos.github.io/) in the music-control module. Play/pause, skip, and lock screen are confirmed to work correctly with the latest version. Additional functions (Ban, Tired, etc.) aren't working just yet and the...

jhyuni.kang (1):
      Support wl_touch and send wl_touch events to client

kabeer khan (5):
      Added Caps Lock On/Off Hint in Lock Screen
      e_startup: Added dialog to notify user to fix his dbus setup
      Wizard : Resolved FIXME added code to free blang_list in page_010
      wl_drm: create ecore_evas for drm gl backend
      Release list of touch resources when input is shutdown

shorne (1):
      e/win_config: allow content of some dialogs to resize with the window

vivek (3):
      wl_desktop_shell: Implemented function to show xdg shell surface menu
      wl_desktop_shell: Fixed the issue to check if client is active or hung up
      wl_desktop_shell: Fixed the issue to check if wl surface is active or hung up


Release 0.19.14:
---------------------
Mike Blumenkrantz (14):
      improve x11 client focusing with mouse-based focus policies on mouse move
      do not add new deskmirror clients on desk_set event if client already exists
      do not refill all tasks bars when a sticky window changes desks
      update E_Client->desk member upon focusing a sticky client
      further improve csd calculations for x11 clients
      always create compositor mirror objects, ignore pixmap image state
      block task gadget refills while a drag is active
      Revert "e deskmirror - fix loss of mirror object from deskmirror"
      ensure that a deskmirror object does not orphan child objects
      avoid setting incorrect geometry during new_client frame calc
      use CSD geometry during move/resize display
      do not apply max client geometry restriction if max geometry is not set
      allow more client hooks to bypass delete check
      re-swallow bg_object after wallpaper transition has completed

Stafford Horne (1):
      e/core: Fix minor mem leak when reading module paths


Release 0.19.13:
---------------------
Carsten Haitzler (4):
      e - ibar - fix clash when 2 icons of the same path get added somehow
      e exec tracker - fix tracking to update desktop files on efreet change
      ibar - fix shutdown if ibar client menu is up
      e deskmirror - fix loss of mirror object from deskmirror

Mike Blumenkrantz (31):
      when removing VERTICAL maximize state, also remove LEFT and RIGHT states
      don't crash desktop gadget systrays when adjusting image sizing
      make wake-on-urgent apply for all cases of window urgency
      force full damage for first frame of x11 override clients
      subtract x11 client damage region even when forcing full override damage
      fix typo in previous damage rect commit
      do not return when x11 damage event returns no rects
      trap shaped x11 clients and prevent compositor blocking with high rect count
      reject deleted clients from x11 sync alarm event callback
      clear x11 client pixmap when returning from iconic
      force a software render in all cases when finalizing x11 client iconify
      update csd using deltas of previous values
      make comp config unresizable...again
      remove dead modules from whitelist
      only apply frame geometry deltas for CSD if the CSD region exists
      reject frame theme changes for clients which have CSD
      simplify client SMART/EXPAND maximize
      add native surface (gl) clients to post render list
      adjust efm multi-icon drag positioning by the current pan coords
      break out x11 client visibility setting into util functions
      move client iconic hint setting into x11 hide function
      emit ibox icon signals to the internal edje object of the e_icon
      add counter and smart callbacks for comp object visible mirrors
      add e_comp_object_mirror_visibility_check()
      toggle x11 client iconic/mapped state based on mirror visibility
      Revert "force a software render in all cases when finalizing x11 client iconify"
      disable client menu stacking functions for unstackable windows
      enforce fullscreen client stacking during nocomp end IFF client is fullscreen
      check client comp data existence in x11 mirror visibility callbacks
      use unsigned int for client focus tracking freeze state
      null efm icon eio handle in error callback

Stafford Horne (2):
      e/conf_apps: Fix resizing of "Startup Application" dialog
      e/ilist: Fix issue with multiselect returning wrong index

Thierry (1):
      mouse_config: fix accel threshold and numerator limits.

shorne (1):
      e/win_config: allow content of some dialogs to resize with the window


Release 0.19.12:
---------------------
Amitesh Singh (1):
      md5: fix wrong sizeof argument (SIZEOF_MISMATCH)

Carsten Haitzler (2):
      efm - handle cancel of async eio if icon is freed and eio still active
      e - efm fix. fix eio error handler that is called after eio cancel

Chidambar Zinnoury (1):
      e menus: Fix invalid comparisons.

Mike Blumenkrantz (39):
      broadcast support for _GTK_FRAME_EXTENTS
      fully support _GTK_FRAME_EXTENTS
      add util function for determining if a client is allowed to have a frame
      fix e_shelf_position_calc() to not set struct members before applying them
      block border-affecting entries from showing up in client menu with csd
      block border-affecting client functions for csd clients
      set comp object client_inset.calc based on frame_object existence
      check warp_client existence during pointer warp before dereferencing it
      fix handling of x11 ICCCM WithdrawnState
      initialize pixmap size vars in comp resize interceptor
      map/unmap x11 client windows when toggling iconic state
      completely remove all wayland support from build system
      blacklist all versions of efl affected by T2745
      force pixmap clear when hiding an x11 window
      set x11 broadcast atom hint array size based on array-name size
      force adjustment of client geometry when changing csd frame size
      remove client maximize states during unmaximize only if they are active
      unset E_Client->changes.need_unmaximize after calling unmaximize
      allow client resizes on axes currently unrestricted by maximize state
      unset the requested maximize state when receiving a client unmaximize request
      use more accurate math to determine whether to apply a client maximize change
      do not set client window coordinates during a move until after resizing check
      use client window coords for resize-moving without a frame_object
      _GTK_FRAME_EXTENTS changes using a property, not a client message
      reject identical calls to e_comp_object_frame_geometry_set()
      reject client resize attempts for clients with dirty pixmaps
      remove object event callback on notification popdown
      free x11 damage region rects
      add RENDER_DEBUG for forced renders when setting dirty flag
      fix comp render return value for failed draws of non-argb clients
      unify comp render returns for argb and non-argb clients
      move client post-update adding into render function
      fix systray to work with spec-breaking apps, eg. steam
      move configure init after intl init has completed
      make icon selection dialog resizable in .desktop editor
      clear menu cache when saving a menu file
      attempt to load default e_bindings if initial load fails
      repopulate app list dialogs when efreet deskop cache updates
      only use fast-path pixmap size updating after a resize for x11 clients

Peter Kjellerstedt (1):
      Add "(drag only)" to title for drag only edge bindings

maxerba (1):
      Updating spanish translation


Release 0.19.11:
---------------------
Carsten Haitzler (3):
      e - fm - flush all evas caches to get rid of open file handles b4 umount
      e - fix crash in desktop lookup+fixup where exe_inst is null
      deskmirror - fix dangling reference to mirror by refcounting it

Marcel Hollerbach (1):
      deskmirror: check if ec is not null before accessing it

Mike Blumenkrantz (29):
      delete notification mirror objects upon deleting original popup
      unset client hidden flag on config dialogs when activating from another vdesk
      add ilist method for setting disabled state
      remove unused variables in ilist widget
      send FLOAT_SET edje messages during desk flip
      make bgpreview widget work with panoramic wallpapers
      always set alpha for internal wins
      decode .desktop link and directory uris in fileman menus
      re-set internal ee win after applying alpha
      only lower x11 layer windows for layers which have windows during init
      add eeze watch for backlight events
      remove backlight update calls from backlight module
      add efl versioning for eeze backlight monitoring
      do not return non-visible clients for e_client_under_pointer_get()
      only set focus on clients which are visible during client eval
      move focus setting on restart into desk restore function
      apply vertical maximize algorithm for LEFT/RIGHT maximized windows
      unset E_Client->want/take_focus flags during client eval
      block gadcon thaw on unpopulate when gadcon is deleted
      only unpopulate a shelf when applying new settings if the shelf won't be recreated
      clamp client geometry to zone during geometry calc
      redo client maximization when a non-overlap shelf changes geometry
      do not emit client iconify signal when reapplying compositor theme
      calculate comp object visibility regardless of pending damages
      update xkb settings and send xkb update event when calling e_xkb_layout_set()
      only init E_EVENT_XKB_CHANGED during xkb init if xkb init hasn't already occurred
      attempt to maintain currently-selected kbd layout when modifying kbd list
      improve client exe_inst creation
      fix systray implementation of notifier watcher (StatusNotifierItem)


Release 0.19.10:
---------------------
Carsten Haitzler (1):
      e comp - set rects to null to silence compiler warning

Mike Blumenkrantz (8):
      fix x11 compositor to use damage events
      explicitly show the client object of internal window during show
      force-disable refocus during desk flip on client activation
      unshade clients when activating
      ensure that normal clients are stacked below overrides when raising
      add extreme hacks to enforce nocomp stacking policies
      set 'starting' flag for desk show in e_zone_desk_count_set()
      ensure that non-fullscreen nocomp clients have their layers re-set

Simon Lees (1):
      Wizard: Update icon theme search list


Release 0.19.9:
---------------------
Carsten Haitzler (1):
      e - systray - add more sizes to icon hunt to fix missing icons

Cedric BAIL (2):
      temperature: let's finally allow the temp process to rest also when enlightenment die.
      battery: let's finally allow the battery process to rest also when enlightenment die.

Mike Blumenkrantz (25):
      add event rect for deskmirror in pager/taskbar modes
      reject x11 NotifyVirtual and NotifyInferior mouse in events more accurately
      use better keybind activation logic
      do not modify E_Client->visible value in show/hide callbacks
      unset E_Client->want/take_focus flags in hide callback
      only use deferred focus-setting on desk flip focus if client is not visible
      don't set E_Client->changes.visible on successful show/hide
      set 'stopping' during logout action
      do not relaunch relaunchable quickaccess windows during logout
      redo fileman menus to only scan the first 100 items found
      feed mouse-up event during mouse down on menus
      force render queue and check for redirection on clients with 0x0 pixmaps
      add some smart callbacks for comp objects on redirect/dirty state change
      return false when failing to create a mirror during deskmirror obj check
      watch dirty smart cb for currently unredirected clients in deskmirror
      remove pager mirror delete callback during pager win delete
      remove dirty smart callback from deskmirror clients during client delete
      only check dirty smart callbacks on non-new_client deskmirror clients
      don't watch dirty smart cb for desmirror clients with unusable pixmaps
      add full damage for x11 override clients on resize configure event
      reject focus-set attempt if desk flip to client's desk was rejected
      track focus time for x11 canvas focus, unset client focus on x11 canvas focus-in
      simplify e_desk_show visibility unsetting, reject recursive desk flips
      remove dirty callback for deskmirror clients upon creating visual
      remove bz2 from dist


Release 0.19.8:
---------------------
Carsten Haitzler (3):
      e - warning fix - fix SVID_SOURCE complaint warning
      e menu - an extra object ref causes menus to never be freed
      e - shelf menu - handle deletion properly if cb is not for shelf menu

Mike Blumenkrantz (10):
      allow x11 mouse wheel events to check ev->event_window for possible client match
      reject x11 NotifyVirtual and NotifyInferior mouse in events
      disable ecore-evas events on client windows during actions
      fix build break from previous commit
      use gadget zone for evry gadget launcher
      add fallback loading of default theme on init
      remove spurious focus setting on desk flip without animation
      fix wizard module loading when E_MODULE_SRC_PATH is set
      defer focus-setting on focus revert during desk flip when visibility is pending
      show drag object immediately when beginning a drag


Release 0.19.7:
---------------------
Mike Blumenkrantz (2):
      use runtime check for determining x11 compositor grab behavior
      improve x11 compatibility with efl versions earlier than 1.15


Release 0.19.6:
---------------------
Carsten Haitzler (1):
      e passive window grabs - fix side-effect leave/enter events on clients

Christopher Michael (1):
      enlightenment: Make E build again with EFL from git

Derek Foreman (2):
      wizard: Prevent crash
      wizard: Prevent crash

Mike Blumenkrantz (43):
      reject client fullscreening based on config and desk visibility
      force xwindow stacking to obey nocomp policy and stack below current nocomp
      allow new fullscreening clients to replace current nocomp where applicable
      fix focusing client on mouse events which trigger actions (with exceptions)
      fix shelf visibility state signals
      fix eo errors for ilist icon select state
      allow layer-blocked clients in deskmirror to restack
      return an accurate value for override clients in e_comp_object_util_zone_get()
      only apply deskmirror client visibility logic for non-deleted clients
      stop rejecting possibly-valid x11 focus events
      check for possible parent window on x11 mouse button events
      fix focus FIXME regarding focus-setting on clients from other desks
      unset changes.visible when forcing visibility during no-effect desk flip
      add E_Client->mouse.in for determining mouse-in status
      trigger fake mouse-out on clients when unsetting focus
      trigger client mouse-in on x11 mouse movement for non-action clients
      enforce pstate's extremely-confusing no_turbo option in cpufreq
      use client window for x11 button ungrabbing
      redo all x11 client mouse grabbing for focus
      straggler ungrab of x11 parent window from previous commit
      ensure x11 focus grabs are applied on client init when needed
      only ungrab x11 windows when appropriate focus options are set
      reject x11 replay clicks when event window != client window
      do not apply x11 focus grabs to internal clients if efl version > 1.14
      make e_client_util_desk_visible() work for overrides without desks
      make pager popups only trigger on urgency hint if client is not currently visible
      set CRITICAL urgency for notification internal notifications
      block client signal binding activation when mouse action is active
      move E_Client->mouse.in to E_Client->mouse_in to avoid abi breakage
      account for race condition when creating initial comp object updates tiler
      fix compile against newer efl
      move grabinput focus fix timer to x11 compositor and fix it to Work Better
      always set x11 override client geometry on startup
      fix compile warning
      only unset e MANAGED atom on non-shutdown
      only trigger client mouse-in from x11 mouse move event if client+desk are visible
      ensure that focus is set and focus stack is managed on winlist hide
      never use new clients for stacking part 2: the secret of the stacking
      ensure clients possess comp_data before dereferencing it during x11 stacking
      always stop passing key events on once they reach the lokker callback
      simulate modal windows for badly behaved x11 clients


Release 0.19.5:
---------------------

Bertrand Jacquin (1):
      MEDIUM: modules/shot: switch to https://

Carsten Haitzler (4):
      e clients - make sure we handle client with a NULL zone
      e_shelf - check visiblity with zone and desk FIRST not later
      e - xsettings - calloc buffer since we leave 3 of 4 bytes unset
      e client - desk wait - ref it properly and clean up delfn

Jean Guyomarc'h (2):
      modules/bluez4: fix duplicated symbol
      e_ipc: fix creation of IPC server when $DISPLAY is a path

Mike Blumenkrantz (38):
      pre-escape all notification body texts before display or merge
      set ec->fullscreen before applying fullscreen geometry
      never resize client clip object
      exit immediately if any unrecognized arg is passed on startup
      use stderr messages when failing to init X compositor
      fix horizontal/vertical smart maximize
      fix crash when using e_comp_object_util_center_pos_get() with non comp_objects
      don't modify pixmap hash when changing pixmap parent window
      slight ibar dnd optimization when checking taskbar apps for drop site
      fix ibar drop calc to not unexpectedly trigger epileptic seizures in users
      fix straggler container text in mousebindings config
      remove layer setting from deskmirror
      always lower e_layout children upon packing
      raise deskmirror windows on startup
      set xkb dialog as changed after adding a new layout
      set E_Exec_Instance desktop during client idler if none present
      allow client icon change events in ibar client prop handler
      fix nocomp_override conditional which would inaccurately toggle nocomp
      fix evry comparison macro to work as expected
      use client geometry for starting unmaximize calculations
      swap key -> keyname when attempting to bind lparen/rparen keys
      remove contact module
      add function for clearing app menu cache
      clear app menu cache any time a desktop is edited internally
      remove eina_streq usage
      attempt to decode notification image uris with efreet before showing them
      fix submenu visibility during scroll
      ensure client max w/h props are set before applying them to client geom
      use client geom for comp object centering functions if ec->new_client is set
      rename client menu move/resize items to indicate real function
      freeze evas events on clients during keyboard move/resize actions
      only apply mouse down focus events if a binding did not run on the same event
      force visibility on clients before attempting to hide them
      change default icon theme to hicolor
      try hicolor icon theme as fallback for fdo icon setting if user's theme fails
      fix notification text to conform to spec and libnotify implementation
      prune module config list when loading a module
      fix infinite loop when changing ibar sources


Release 0.19.4:
---------------------

Carsten Haitzler (5):
      maximization bug affecting libreoffice and others - fix
      e - client list update after adding to client list - fix netwm bug
      efm - make dir listing far faster - no file magic content and dont sync
      e - menus - fix autoscroll on zones not at 0 y...
      e - menus - fix submenu popup direction when zones are not at 0 y

Chidambar Zinnoury (1):
      e backlight: use saner default values.

Dmitry Luhtionov (1):
      cpufreq: freebsd fixes

Mike Blumenkrantz (21):
      continue to hide window input regions on desk flip if they are shaded
      ensure no duplicate XDG paths are prepended during startup
      check for eldbus instead of edbus in device backend libs
      block linear desk flips that would wrap if desk flip wrapping is disabled
      use direct path for setting icons in util theme set function when icon is a path
      don't send unfocused signal to override clients
      escape notification popup text...always
      fix crashing when changing desklock settings and using pin/personal auth
      clamp client size to screen when client limit policy does not allow offscreen
      rename extremely frustratingly-named E_Screen_Limits enum and members
      do not reapply focus on canvas object ungrab/close for pointer-focus enthusiasts
      remove unnecessary icon setting and fix sizing in edgebindings
      fix dialog sizing when icon setting fails
      set default text for edgebindings caption when no bindings exist
      fix appindicator icon loading when using IconThemePath key
      don't clamp bgpreview vsize if bgpreview is a fullscreen overlay
      fix border frame color classes to be configured as solids, not text
      remove wayland-only support

Vincent Torri (1):
      add MIN define for non-linux systems


Release 0.19.3:
---------------------

Carsten Haitzler (2):
      e - force a config flush before sys actions that could kill e
      comp base - make base black. makes for better screenshots of blank areas

Christopher Michael (8):
      Fix e_msgbus file having missing initializers for Eldbus     Messages & Signals
      Fix e_notification file having missing initializers for Eldbus     Messages & Signals
      Cleanup appmenu module having missing field initializers for     Eldbus Messages & Signals
      Cleanup bluex module having missing initializers for services     & icons
      Cleanup fileman module from having missing initializers for     Eldbus Messages & Signals
      Cleanup msgbus module from having missing field initializers     for Eldbus Messages & Signals
      Cleanup systray module having missing initializers for Eldbus     Message & Signals
      Cleanup teamwork module from having missing initializerss for Eldbus     Messages & Signals

Mike Blumenkrantz (11):
      don't recalc winlist on client add event if client is not added to winlist
      don't show mixer popup during nocomp
      comp pending resizes should not require both w+h to change
      don't set gravity on client windows during X move/resize
      completely block border changes on MWM borderless windows
      disable client stack debugging
      add E_VERSION_MAJOR define for external module usage
      check focus after X nocomp end
      don't change shade.x/y during unshade or after shade
      fix build from tarball when configured mount backend is different from origin
      don't set deskmirror scale for non-mb objects

Tom Hacohen (1):
      Tiling: don't try to change the border of borderless windows.


Release 0.19.2:
---------------------

Carsten Haitzler (5):
      e_auth - null out compilert memset opts like lokker
      e - randr - stop saving config using XID - this is utterly WRONG
      e randr - fix warning (signed vs unsigned cmp)
      e randr - make it work on nvidia - lots of "wrong" things fixed
      e randr - restore edp checks

Christopher Michael (1):
      call e_powersave_init Before we call e_screensaver_init[...]

Marcel Hollerbach (3):
      Fix wrong deskshow function
      everything: terminate bc instead of quit
      Register the new window into out evas.

Mike Blumenkrantz (21):
      fix teamwork popup positioning for non-dbus popups
      fix internal window border changing
      set skip pager/taskbar hints on parent window instead of client window
      force shape queue on notification delete
      ensure string safety on dbus message in connman agent
      apply pointer warp effects immediately when instant warping
      print more descriptive error messages when scanner connection fails, also don't exit() here
      don't exit e_fm when eeze init fails, send RASTER mode instead
      store eeze_scanner connection poller to avoid creating an infinite number
      only attempt to start eeze_scanner a couple times before giving up
      attempt to run eeze_scanner on failure to connect, not successful connect
      ensure clients are visible before triggering shape/render queue
      fix X crash when trying to apply desktop window profile to client without desk
      add failure count for client rendering, drop clients after FAILURE_MAX tries
      redo shaped client checks to use shape flags instead of rect pointer, fix shapeless clients
      reduce shape recalc for clients which cannot currently receive input
      remove access module from build
      greatly reduce FAILURE_MAX
      remembering size on a window should also remember maximize state
      apply client size based on correct remember value, only apply if value != 0
      store hide_logo state for desklock backgrounds

Sebastian Dransfeld (5):
      randr: further cleanup
      randr: Don't match DP as LID
      randr: remember crtcid for fast lookup on reconnect
      randr: TODO++

Stefan Schmidt (1):
      po: Remove file from now disabled access module to pass distcheck

Takeshi Banse (1):
      cpufreq: teach cpuinfo_{min,max}_freq as available frequencies


Release 0.19.1:
---------------------

Mike Blumenkrantz (10):
      don't add nocomp damages for input-only windows
      check protocol visibility for nocomp breaks, not comp object visibility
      manually break out of nocomp
      end nocomp on nocomp end...always
      force render queue on unmaximize if client was fullscreen
      add borderless theme for deskmirror clients to support various animations
      comp render queue on every client resize instead of on unmaximize
      force comp render queue more aggressively to detect changes in nocomp
      client hooks should not continue to be called if the client has been deleted
      thaw evas on winlist activation with no clients available

Stefan Schmidt (1):
      modules/teamwork: Use eina_file_mkstemp() to avoid problems with umask

Tom Hacohen (1):
      fix: Add more desktops to be tiled by default in the tiling config.



Release 0.19.0:
---------------------

Features:
 * greatly improved wayland support
   - E_WL_FORCE environment variable for forcing output types
 * e_uuid_store: Add infrastructure to store window/surface properties.
 * Add a tiling profile.
 * per-screen desklock logo visibility config
 * Tiling: Merge the tiling module rework..
 * check udisks1 DevicePresentationHide flag
 * ACTIVATE_EXCLUDE window active hint policy
 * show video resolution in filepreview widget
 * add fileman option to clamp video size for video previews
 * handle xrandr backlight using a single, accurate handler
 * blanking options for wakeup on events (urgent + notify)
 * packagekit module for package manager integration
 * ibar now optionaly triggers its menu on mouse in
 * selective redirection toggling
 * new focus option "raise on revert focus"
 * add PIN-style desklock for lokker module
 * make desklock hookable, break out current desklock into module, move pam stuff to separate file
 * revive personal desklock passwords
 * allow moveresize visuals to be replaced
 * allow desk flip animations to be handled completely externally
 * E16-style live pager returns!
 * comp config is no longer a module
 * E_FIRST_FRAME env variable
 * add script to set some debug vars
 * new compositor
 * add E_MODULE_SRC_PATH for setting current module src path without needing to install modules
 * use non-recursive makefiles for entire build system

Improvements:
 * filemanager popups no longer span multiple monitors
 * system operations no longer dim screen until action has begun
 * window stacking and focus restore is more accurate across restarts
 * gstreamer1 is now used for media previews
 * improved multiple monitor setup reliability
 * shaped windows now render more accurately

Release 0.18.8:
---------------------

* screenshot now displays a helpful error message when it fails
* efm no longer sometimes shows files from other directories
* efm no longer sometimes shows blank filenames
* fix syscon button signals
* fix winlist scrolling
* fix systray appindicator deletion
* fix systray appindicator icon loading

Release 0.18.7:
---------------------

* unify temp module temperature_get_bus_files() functions
* check notification icon size correctly
* correctly check evry trigger matches
* comp config dialog correctly detects effects disabled/fast states
* efm current .desktop fetching now returns the right .desktop
* swallow efm background objects after applying theme
* ibar now scrolls correctly during drags
* no longer place windows at 0,0 during restart
* music_control: Use correct markup for metadata text.


Release 0.18.6:
---------------------

* wl_desktop_shell builds out of source tree
* get entry width based on viewport size, not entry size
* fix hiding of windows when delete is requested
* don't deref teamwork pointer after null check
* don't deref possibly-null value in mouse bindings
* correctly calculate minimum flowlayout rows
* efm_op no longer tries to close invalid fds during delete ops
* don't use external log domain in systray
* don't use external log domain in music player
* don't crash when saving screenshots with no file extension
* don't crash on possibly-null gadman bg string extensions
* check for unicode string end in client menu
* don't crash when passing NULL desk to e_border_under_pointer_get
* set connman pending.disconnect when disconnecting a service
* don't iterate with or access freed pointer in comp match dialog
* ensure use of non-garbage values for menu item icon placeholders
* use more descriptive + accurate buffer size in batget iterator
* prevent out of bounds access in systray theme setup
* prevent out of bounds write in e_intl_locale_parts_get()
* ensure null termination of string in xsettings config
* dim/undim actions don't require acpi triggers


Release 0.18.5:
---------------------

* Fix selection of the standard profile in wizard.
* pointer warp speed config slider correctly detects changed state
* set border starting geometry from initial zone
* don't use raise stack for iterating borders
* Fix wl_desktop_shell compiler warning for Mike
* evry string matching now handles UTF8
* remove efm nav SELF_RENAME handler

Release 0.18.4:
---------------------

* fixed menu placement in some cases
* fixed dnd indicator visibility after operation ends
* fixed screen limits window handling to not unexpectedly warp windows
* fixed distcheck for non-default modules
* fixed rare crash when closing applications
* fixed crash when settings windows containing an entry widget were closed
* fixed ibar app tracking with applications possessing a skip_taskbar window
* EFM now respects device presentation hints
* improved positioning of windows when using multiple monitors
* compositor theme match dialog now functions as expected

Release 0.18.3:
---------------------

* fixed canvas leak when using livethumb widget
* fixed mounting errors when mounting native filesystems
* fixed crashes in some cases involving menu scrolling
* fixed rare compositor-related crash
* fixed crash when using teamwork with specific types of links
* fixed dnd handler leaks
* fixed dnd to external application windows
* fixed logout fade to reset after a delay involving applications failing to close
* fixed slider up/down key wrong direction
* use config_type to set parent profile when resetting bindings
* allow use with Elementary >= 1.9
* updates for Serbian and Italian translations

Release 0.18.2:
---------------------

* fixed infinite printing of SLEEP
* fixed suffix checking for screenshot filenames
* fixed theme importing
* improved reliability of startup splash version setting
* updates for Serbian and Portuguese translations

Release 0.18.1:
---------------------

* fixed issue where mixer would eat desklock events, making it impossible to unlock the screen

Release 0.18.0:
---------------------

Additions:
    Modules:
        * music-control: control any mpris2-compatible music player
        * appmenu: externally show a menu of the current focused application
        * bluez4: control bluetoothd daemon
        * conf_comp: configuration dialogs for composite, like in previous comp
          module
        * teamwork
    API:
        * Added action to reset filemanager
        * Added function to hide all active menus
        * Added enum for deskflip animation mode
        * Added e_win_elm_available()
        * Added D-Bus notification to systray module
        * Added D-Bus menu support
        * Added e_comp namespace and E_EVENT_COMP events
        * Added API for fetching module .desktop files
        * e_config_xkb functions
        * added functions for freeing binding config structs
        * E_Config_DD structs are now tracked and retrievable through e_config_descriptor_find
        * add e_border_pointer_warp_to_center_now()
        * e_widget_check_widget_disable_on_*
        * e_widget_on_disable_hook_set
        * e_int_border_remember_edit
        * Added function for getting children of e_layout
        * added utility function for printing all objects above a given object
        * added e_layout functions for returning objects above or below a layout child
        * added functions for noting objects which are part of a popup
        * added E_LIST_REVERSE_FREE macro
        * added e_object_ref_debug_set
        * added e_gadcon_repopulate
        * added e_comp_win_effect* api
        * added deskmirror
        * add e_exec_desktop_instances_find
        * add e_exec_phony
        * e_border_inset utility functions
    Config:
        * Added option for disabling icons in menus
        * Added option for disabling pointer warping when performing directional focus changes using winlist
        * comp settings now uses the "e_comp" config domain
        * added options to disable comp effects on types of windows
        * added option to disable comp effects on screen
        * added options and functionality for "fast" composite effects
        * split comp window match settings into separate dialog
        * edge bindings can now be set to "drag only"
        * new option for disabling all pointer warps
        * added option for preventing all keyboard layout changes
        * added option for remembering filemanager windows globally
	* Added support for systemd user session
	* Added support for systemd hibernate and suspend
        * added support for systemd halt and poweroff
        * new winlist config option for moving selected window to current desk

Changes:
        * e now uses and looks for elementary themes
        * elementary + emotion now hard dependencies
    Modules:
        * modules no longer require shutdown or save functions
        * merged all binding config dialogs into conf_bindings module
    API:
        * e_menu_category_callback create callback parameter order has been changed
        * e_xkb_layout API now deals directly with E_Config_XKB_Layout structs
        * e_shelf_desk_visible_get now takes const params
        * e_util_size_debug_set now also prints for object show/hide events
        * E_FN_DEL renamed to E_FREE_FUNC for consistency
        * deskpreview renamed to bgpreview
        * e_widget_bgpreview_desk_add now takes an evas instead of an evas object
        * e_fm2_optimal_size_calc returns bool to indicate whether the returned size can be used
        * e_desk_last_focus now returns the border it tries to apply focus to
    Config:
        * move winlist_warp_speed option to pointer_warp_speed
        * bindings now use new E_Binding_Event structs for mouse events

Deprecations:
    *

Removed:
    * e_manager_comp namespace
    * HAL support for filemanager
    * "raise on focus" config option
    * ability to alter gadgets in EFM toolbars
    * physics module

Improvements:
    * mixer shows more channels when using alsa subsystem and correctly disable controls
    * Check changed added to several settings dialogs:
     - clientlist,
     - startup theme,
     - desktop environments,
     - language,
     - notification,
    * Improve UI of desk settings.
    * Add icons for gadcon settings.
    * Improve strings of pager settings.
    * Improve title of fileman settings.
    * Mixer settings dialog is now resizable
    * Increased maximum menu size, improved menu autoscrolling
    * Various #defines in e_int_menus.h are now enums
    * No backlight dimming when in presentation mode.
    * Backlight fade time only applies to dimming - undimming is fixed 0.5 .
    * Added elm win trap callback for base size setting, calling this causes ICCCM hints to be applied
    * "System Default" language in wizard now displays which language it is and no longer removes language from list
    * Desktop->Shelves menu now shows shelf names
    * geometry_auto_move option now also corrects applications which fail in their attempts to center windows
    * E_LIST_HANDLER_APPEND macro now asserts the event handler to make debugging easier
    * config submenu now sets "config" category
    * composite settings dialog is now accessible from Settings menu
    * added focus-out color class and functionality to default theme
    * added fallback timer for system actions
    * compositor now applies focus/urgency state to windows on first show
    * prevent windows dragged from one screen to another from being larger than the destination screen
    * track module directories
    * improve module config dialog load speed
    * No longer build illume edj files
    * add support for AltGr in illume2's E_Kbd_Buf_Key, fix related leak
    * split out binding configs into separate config domain
    * binding dialogs are now able to reset bindings to the system profile file bindings
    * "No listable items" in Navigate menu is now clickable
    * optimize use of edje_file_collection_list
    * add support for edje files in filepreview widget
    * improve load time of apps dialogs
    * new tab in focus settings for pointer warping
    * unify all pointer warp animators
    * clock listens to /etc/timezone changes now too
    * enable image preloading for all e_widget_preview using edje
    * window remember dialog now allows editing of remembers
    * container now uses compositor window
    * Menu->Applications now only list valid .desktop files
    * desklock now uses compositor canvas
    * e_gadcon_unpopulate now correctly freezes the container while deleting gadgets
    * e_popup is now a wrapper for drawing objects onto the compositor canvas
    * compositor nocomp mode now dynamically enables/disables based on the state and stacking of fullscreen windows and comp objects
    * e_util_size_debug_set now displays delete events
    * compositor now allows user changing/remembering of object opacity
    * EFM toolbar now has its own gadcon location
    * DND canvas merged to compositor
    * shelf gadcon can no longer resize smaller than 16x16, ensuring dnd success
    * Don't rely on bash or zsh behavior when starting enlightenment_init and tempget.
    * menus are now drawn directly on the compositor canvas
    * window borders now drawn on compositor canvas
    * desk flip animations moved to edje
    * startup splash screen moved to compositor canvas
    * added new modes for notification display on multiple monitors
    * add check for vmware window in another spot to disable key remapping
    * border menu now has top-level item to set borderless state
    * added dnd support for text/x-moz-url
    * filemanager dnd operations now show all files when dragging
    * added check changed to shelf config dialog
    * udisks2 support
    * Navigate menu item now opens $HOME
    * Clicking in the filemanager when renaming cancels the rename
    * Shrink filemanager icon event area to allow easier selections
    * Select previously-renaming filemanager icon when rename ends
    * Improve reliability of new file/directory creation
    * Clicking Settings->All in menu now opens settings panel
    * Open Terminal Here now available when clicking regular files
    * Add more filetypes to thumbnailer
    * Improve focus handling with external desktop filemanagers
    * Add back/forward button support for filemanager when toolbar is present
    * Increase text file preview size
    * Improve text file preview layout
    * e now uses and looks for elementary themes
    * Improve battery gadget text sizing
    * Greatly improve filemanager icon selection
    * clock gadgets now default to digital mode when added
    * ignore netwm activate during startup

Fixes:
    * IBar menu didn't allow to configure different icon sources, show contents menu even on empty IBar.
    * Shelf option 'overlapping' made clearer and disabled when window automatic movement on shelf hide isn't set.
    * Backlight, screenlock and screensaver don't check for fullscreen windows - we have presentation mode for that.
    * Force check changed upon confirmation dialog closure for engine settings.
    * Clock date formats are now internationalizable.
    * Advanced pager settings check changed accounts for flip desktop on mouse wheel.
    * File manager settings values are now all read, checked and applied as they should.
    * Fixed crash when changing ibar source
    * Fixed SIGFPE in tiling module and functionality of toggle_rows_count
    * Filemanager now uses global setting option for showing desktop
      icons
    * Fixed error in Evry when trying to call edje functions on non-edje object
    * Fix construction of variant list for setxkbmap
    * Fix border(less) style of internal elm tooltip windows
    * Fix incorrect config value clamping for window autoraise delay
    * Always hide menus on desklock
    * e_win now traps elm_win_activate to ensure that internal elm
      windows don't fail to raise as expected if user has configured
      E to ignore activate hints
    * Fix restarting E17 after manually monitoring it.
    * Fix build with uClibc.
    * Restore default keybindings no longer restores two bindings for ctrl+alt+f
    * entry/scrollframe: Fixed issues with submembers.
    * Fixed bug where keyboard resizing of windows would not be possible if timeout was set to zero
    * Fixed crash when clicking apply in wallpaper settings dialog and no wallpaper is selected
    * Fixed bug where disabled slider widgets could be changed with mouse wheel
    * Fixed bug where fileman config slider widgets were not properly disabled
    * Tasks gadgets now apply the selected style
    * Fixed crash when changing desktop configuration while clock popup was present
    * fixed bug where window border insets were not applied to initial positioning geometry, causing them to be placed incorrectly
    * Fixed bug with desktop config profile where conf module version variable was misnamed
    * fixed bug where internal dialogs would not redraw after unfullscreening
    * fixed bug where starting with a nonexistent config could cause a crash instead of simply restarting
    * fixed window border hide bug where after iconification hides leave ghosts
    * fixed bug where backlight settings would try to update dummy backlight devices
    * Reuse notifications for mixer and battery modules.
    * fixed gadget dragging on desktop near screen edges
    * fixed bug where "don't composite fullscreen windows" option would cause some windows to stop appearing
    * module error dialog is no longer remembered across restarts
    * fix small leak in efm when performing dnd onto mounted drive icon
    * fixed small leak in e_import_config_dialog_show during failure case
    * fixed small leak in e_import_dialog_show during failure case
    * fixed small leak in illume2 policy config
    * fixed path setting in import dialog
    * fixed possible NULL deref in desktop editor
    * fixed possible NULL deref in e_sys when debugging
    * fixed map then unmap race condition for some windows (needs efl 1.8)
    * fixed bug where dragging files into sidebar would move them instead of creating links
    * fixed window autoraise triggering from pointer slide
    * fixed opening of links in filemanager in some cases
    * filemanager now ignores changes to .part files
    * fixed bugs where keyboard layouts could not be applied or selected
    * fixed leak in profile list dbus method
    * fixed behavior of Up/Down keys in filemanager when typebuf was visible
    * fix possible crash in xkb rule parsing
    * fix list update on deletion of personal app launchers
    * fix button toggling in personal app launchers dialog
    * fix bug where edge flips would stop functioning after dragging to an invalid edge containing a shelf
    * moved "allow windows above fullscreen windows" option to geometry settings dialog
    * fix filemanager efreet cache listeners and updates
    * fix clock timerfd usage to actually detect date changes
    * keyboard mapping change now also disables for window class "vmware"
    * don't call efreet_menu_parse from a thread
    * fixed bug where pointer warping to new clients would start at a random location
    * fix crash when locking screen from Start gadget and then activating gadget again
    * fixed bug where e_layout would ignore frozen state and crash
    * fixed disable of input methods in input method config dialog
    * fixed pointer warp when pointer was inside warp window but not directly over it
    * toolbar gadgets no longer crash when trying to display a popup
    * fixed theme bug which prevented windows from unshading correctly when animations were disabled
    * filemanager windows no longer resize to 0x0 when double clicked with no icons present
    * fixed e_exec to open .desktop url links
    * fix remember size/position apply
    * fixed bug where e widgets would not unset focus
    * fixed bug with filemanager setting path with too many spaces when opened from menu
    * fixed crash when multiple windows shared a remember
    * fixed bug where double clicking filemanager windows would not correctly autosize
    * fixed bug where setting min size on a gadget would not be passed to desktop gadgets
    * fixed bug where new files could not be created repeatedly
    * fixed filemanager spring window closing when dragging from desktop
    * fixed catching XWindow closes during DND operations on those windows
    * wsod: Fixed gdb hangs when generating backtraces.
    * Entry: Fixed issues with entry not scrolling to cursor.
    * Fixed NoDisplay entries in Everything launcher
    * Remember view mode for desktop icons
    * Fixed evry crash when switching views
    * Correctly start pulseaudio from mixer
    * Fix winlist case where activation would have no effect
    * Reapply default filemanager view after changing settings
    * Fix flickering in advanced wallpaper settings
    * Fix focus/stacking of windows on restart
    * More accurately set current desk in Move to... submenu
    * Disable resizing of buttons in window remember dialog
    * Fix unfocusing of disabled widgets
    * Fix crash when activating e's restart from start gadget triggered menu
    * Further improve initial window placement coordinates
    * Fixed cases where gadgets would sometimes reorder randomly on shelves
    * fixed filemanager race condition causing create-queued icons to not be deleted
